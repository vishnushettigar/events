
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.ChampionScalarFieldEnum = {
  id: 'id',
  temple_id: 'temple_id',
  year: 'year',
  host_temple_id: 'host_temple_id',
  created_at: 'created_at',
  modified_at: 'modified_at'
};

exports.Prisma.Ind_event_registrationScalarFieldEnum = {
  id: 'id',
  event_id: 'event_id',
  user_id: 'user_id',
  event_result_id: 'event_result_id',
  created_at: 'created_at',
  modified_at: 'modified_at',
  is_deleted: 'is_deleted',
  status: 'status'
};

exports.Prisma.Mst_age_categoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  from_age: 'from_age',
  to_age: 'to_age',
  is_deleted: 'is_deleted'
};

exports.Prisma.Mst_eventScalarFieldEnum = {
  id: 'id',
  name: 'name',
  event_type_id: 'event_type_id',
  age_category_id: 'age_category_id',
  gender: 'gender',
  is_deleted: 'is_deleted',
  is_closed: 'is_closed'
};

exports.Prisma.Mst_event_resultScalarFieldEnum = {
  id: 'id',
  event_type_id: 'event_type_id',
  rank: 'rank',
  points: 'points'
};

exports.Prisma.Mst_event_typeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  participant_count: 'participant_count'
};

exports.Prisma.Mst_roleScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.Mst_templeScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  address: 'address',
  contact_name: 'contact_name',
  contact_phone: 'contact_phone',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  modified_at: 'modified_at'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  first_name: 'first_name',
  last_name: 'last_name',
  email: 'email',
  phone: 'phone',
  aadhar_number: 'aadhar_number',
  created_at: 'created_at',
  modified_at: 'modified_at',
  is_deleted: 'is_deleted',
  is_verified: 'is_verified',
  temple_id: 'temple_id',
  dob: 'dob',
  gender: 'gender',
  role_id: 'role_id'
};

exports.Prisma.SettingsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  value: 'value',
  created_at: 'created_at',
  modified_at: 'modified_at'
};

exports.Prisma.Team_event_registrationScalarFieldEnum = {
  id: 'id',
  temple_id: 'temple_id',
  event_result_id: 'event_result_id',
  member_user_ids: 'member_user_ids',
  created_at: 'created_at',
  modified_at: 'modified_at',
  is_deleted: 'is_deleted',
  event_id: 'event_id',
  status: 'status'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  email: 'email',
  created_at: 'created_at',
  modified_at: 'modified_at'
};

exports.Prisma.User_roleScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  role_id: 'role_id'
};

exports.Prisma.Audit_logScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  action: 'action',
  table_name: 'table_name',
  record_id: 'record_id',
  old_value: 'old_value',
  new_value: 'new_value',
  created_at: 'created_at'
};

exports.Prisma.Event_scheduleScalarFieldEnum = {
  id: 'id',
  event_id: 'event_id',
  start_time: 'start_time',
  end_time: 'end_time',
  created_at: 'created_at',
  modified_at: 'modified_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.RegistrationStatus = exports.$Enums.RegistrationStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  DECLINED: 'DECLINED'
};

exports.Gender = exports.$Enums.Gender = {
  MALE: 'MALE',
  FEMALE: 'FEMALE',
  ALL: 'ALL'
};

exports.Rank = exports.$Enums.Rank = {
  FIRST: 'FIRST',
  SECOND: 'SECOND',
  THIRD: 'THIRD',
  NA: 'NA'
};

exports.EventType = exports.$Enums.EventType = {
  TEAM: 'TEAM',
  INDIVIDUAL: 'INDIVIDUAL'
};

exports.Prisma.ModelName = {
  Champion: 'Champion',
  Ind_event_registration: 'Ind_event_registration',
  Mst_age_category: 'Mst_age_category',
  Mst_event: 'Mst_event',
  Mst_event_result: 'Mst_event_result',
  Mst_event_type: 'Mst_event_type',
  Mst_role: 'Mst_role',
  Mst_temple: 'Mst_temple',
  Profile: 'Profile',
  Settings: 'Settings',
  Team_event_registration: 'Team_event_registration',
  User: 'User',
  User_role: 'User_role',
  Audit_log: 'Audit_log',
  event_schedule: 'event_schedule'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
