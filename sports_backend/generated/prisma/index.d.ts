
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Champion
 * 
 */
export type Champion = $Result.DefaultSelection<Prisma.$ChampionPayload>
/**
 * Model Ind_event_registration
 * 
 */
export type Ind_event_registration = $Result.DefaultSelection<Prisma.$Ind_event_registrationPayload>
/**
 * Model Mst_age_category
 * 
 */
export type Mst_age_category = $Result.DefaultSelection<Prisma.$Mst_age_categoryPayload>
/**
 * Model Mst_event
 * 
 */
export type Mst_event = $Result.DefaultSelection<Prisma.$Mst_eventPayload>
/**
 * Model Mst_event_result
 * 
 */
export type Mst_event_result = $Result.DefaultSelection<Prisma.$Mst_event_resultPayload>
/**
 * Model Mst_event_type
 * 
 */
export type Mst_event_type = $Result.DefaultSelection<Prisma.$Mst_event_typePayload>
/**
 * Model Mst_role
 * 
 */
export type Mst_role = $Result.DefaultSelection<Prisma.$Mst_rolePayload>
/**
 * Model Mst_temple
 * 
 */
export type Mst_temple = $Result.DefaultSelection<Prisma.$Mst_templePayload>
/**
 * Model Profile
 * 
 */
export type Profile = $Result.DefaultSelection<Prisma.$ProfilePayload>
/**
 * Model Settings
 * 
 */
export type Settings = $Result.DefaultSelection<Prisma.$SettingsPayload>
/**
 * Model Team_event_registration
 * 
 */
export type Team_event_registration = $Result.DefaultSelection<Prisma.$Team_event_registrationPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model User_role
 * 
 */
export type User_role = $Result.DefaultSelection<Prisma.$User_rolePayload>
/**
 * Model Audit_log
 * 
 */
export type Audit_log = $Result.DefaultSelection<Prisma.$Audit_logPayload>
/**
 * Model event_schedule
 * 
 */
export type event_schedule = $Result.DefaultSelection<Prisma.$event_schedulePayload>

/**
 * Enums
 */
export namespace $Enums {
  export const RegistrationStatus: {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  DECLINED: 'DECLINED'
};

export type RegistrationStatus = (typeof RegistrationStatus)[keyof typeof RegistrationStatus]


export const Gender: {
  MALE: 'MALE',
  FEMALE: 'FEMALE',
  ALL: 'ALL'
};

export type Gender = (typeof Gender)[keyof typeof Gender]


export const Rank: {
  FIRST: 'FIRST',
  SECOND: 'SECOND',
  THIRD: 'THIRD',
  NA: 'NA'
};

export type Rank = (typeof Rank)[keyof typeof Rank]


export const EventType: {
  TEAM: 'TEAM',
  INDIVIDUAL: 'INDIVIDUAL'
};

export type EventType = (typeof EventType)[keyof typeof EventType]

}

export type RegistrationStatus = $Enums.RegistrationStatus

export const RegistrationStatus: typeof $Enums.RegistrationStatus

export type Gender = $Enums.Gender

export const Gender: typeof $Enums.Gender

export type Rank = $Enums.Rank

export const Rank: typeof $Enums.Rank

export type EventType = $Enums.EventType

export const EventType: typeof $Enums.EventType

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Champions
 * const champions = await prisma.champion.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Champions
   * const champions = await prisma.champion.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.champion`: Exposes CRUD operations for the **Champion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Champions
    * const champions = await prisma.champion.findMany()
    * ```
    */
  get champion(): Prisma.ChampionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ind_event_registration`: Exposes CRUD operations for the **Ind_event_registration** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ind_event_registrations
    * const ind_event_registrations = await prisma.ind_event_registration.findMany()
    * ```
    */
  get ind_event_registration(): Prisma.Ind_event_registrationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mst_age_category`: Exposes CRUD operations for the **Mst_age_category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mst_age_categories
    * const mst_age_categories = await prisma.mst_age_category.findMany()
    * ```
    */
  get mst_age_category(): Prisma.Mst_age_categoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mst_event`: Exposes CRUD operations for the **Mst_event** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mst_events
    * const mst_events = await prisma.mst_event.findMany()
    * ```
    */
  get mst_event(): Prisma.Mst_eventDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mst_event_result`: Exposes CRUD operations for the **Mst_event_result** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mst_event_results
    * const mst_event_results = await prisma.mst_event_result.findMany()
    * ```
    */
  get mst_event_result(): Prisma.Mst_event_resultDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mst_event_type`: Exposes CRUD operations for the **Mst_event_type** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mst_event_types
    * const mst_event_types = await prisma.mst_event_type.findMany()
    * ```
    */
  get mst_event_type(): Prisma.Mst_event_typeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mst_role`: Exposes CRUD operations for the **Mst_role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mst_roles
    * const mst_roles = await prisma.mst_role.findMany()
    * ```
    */
  get mst_role(): Prisma.Mst_roleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mst_temple`: Exposes CRUD operations for the **Mst_temple** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mst_temples
    * const mst_temples = await prisma.mst_temple.findMany()
    * ```
    */
  get mst_temple(): Prisma.Mst_templeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.profile`: Exposes CRUD operations for the **Profile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Profiles
    * const profiles = await prisma.profile.findMany()
    * ```
    */
  get profile(): Prisma.ProfileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.settings`: Exposes CRUD operations for the **Settings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Settings
    * const settings = await prisma.settings.findMany()
    * ```
    */
  get settings(): Prisma.SettingsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.team_event_registration`: Exposes CRUD operations for the **Team_event_registration** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Team_event_registrations
    * const team_event_registrations = await prisma.team_event_registration.findMany()
    * ```
    */
  get team_event_registration(): Prisma.Team_event_registrationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_role`: Exposes CRUD operations for the **User_role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_roles
    * const user_roles = await prisma.user_role.findMany()
    * ```
    */
  get user_role(): Prisma.User_roleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.audit_log`: Exposes CRUD operations for the **Audit_log** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Audit_logs
    * const audit_logs = await prisma.audit_log.findMany()
    * ```
    */
  get audit_log(): Prisma.Audit_logDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.event_schedule`: Exposes CRUD operations for the **event_schedule** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Event_schedules
    * const event_schedules = await prisma.event_schedule.findMany()
    * ```
    */
  get event_schedule(): Prisma.event_scheduleDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.8.2
   * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Champion: 'Champion',
    Ind_event_registration: 'Ind_event_registration',
    Mst_age_category: 'Mst_age_category',
    Mst_event: 'Mst_event',
    Mst_event_result: 'Mst_event_result',
    Mst_event_type: 'Mst_event_type',
    Mst_role: 'Mst_role',
    Mst_temple: 'Mst_temple',
    Profile: 'Profile',
    Settings: 'Settings',
    Team_event_registration: 'Team_event_registration',
    User: 'User',
    User_role: 'User_role',
    Audit_log: 'Audit_log',
    event_schedule: 'event_schedule'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "champion" | "ind_event_registration" | "mst_age_category" | "mst_event" | "mst_event_result" | "mst_event_type" | "mst_role" | "mst_temple" | "profile" | "settings" | "team_event_registration" | "user" | "user_role" | "audit_log" | "event_schedule"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Champion: {
        payload: Prisma.$ChampionPayload<ExtArgs>
        fields: Prisma.ChampionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChampionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChampionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChampionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChampionPayload>
          }
          findFirst: {
            args: Prisma.ChampionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChampionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChampionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChampionPayload>
          }
          findMany: {
            args: Prisma.ChampionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChampionPayload>[]
          }
          create: {
            args: Prisma.ChampionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChampionPayload>
          }
          createMany: {
            args: Prisma.ChampionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ChampionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChampionPayload>[]
          }
          delete: {
            args: Prisma.ChampionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChampionPayload>
          }
          update: {
            args: Prisma.ChampionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChampionPayload>
          }
          deleteMany: {
            args: Prisma.ChampionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChampionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ChampionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChampionPayload>[]
          }
          upsert: {
            args: Prisma.ChampionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChampionPayload>
          }
          aggregate: {
            args: Prisma.ChampionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChampion>
          }
          groupBy: {
            args: Prisma.ChampionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChampionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChampionCountArgs<ExtArgs>
            result: $Utils.Optional<ChampionCountAggregateOutputType> | number
          }
        }
      }
      Ind_event_registration: {
        payload: Prisma.$Ind_event_registrationPayload<ExtArgs>
        fields: Prisma.Ind_event_registrationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Ind_event_registrationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ind_event_registrationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Ind_event_registrationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ind_event_registrationPayload>
          }
          findFirst: {
            args: Prisma.Ind_event_registrationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ind_event_registrationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Ind_event_registrationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ind_event_registrationPayload>
          }
          findMany: {
            args: Prisma.Ind_event_registrationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ind_event_registrationPayload>[]
          }
          create: {
            args: Prisma.Ind_event_registrationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ind_event_registrationPayload>
          }
          createMany: {
            args: Prisma.Ind_event_registrationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Ind_event_registrationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ind_event_registrationPayload>[]
          }
          delete: {
            args: Prisma.Ind_event_registrationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ind_event_registrationPayload>
          }
          update: {
            args: Prisma.Ind_event_registrationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ind_event_registrationPayload>
          }
          deleteMany: {
            args: Prisma.Ind_event_registrationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Ind_event_registrationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Ind_event_registrationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ind_event_registrationPayload>[]
          }
          upsert: {
            args: Prisma.Ind_event_registrationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ind_event_registrationPayload>
          }
          aggregate: {
            args: Prisma.Ind_event_registrationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInd_event_registration>
          }
          groupBy: {
            args: Prisma.Ind_event_registrationGroupByArgs<ExtArgs>
            result: $Utils.Optional<Ind_event_registrationGroupByOutputType>[]
          }
          count: {
            args: Prisma.Ind_event_registrationCountArgs<ExtArgs>
            result: $Utils.Optional<Ind_event_registrationCountAggregateOutputType> | number
          }
        }
      }
      Mst_age_category: {
        payload: Prisma.$Mst_age_categoryPayload<ExtArgs>
        fields: Prisma.Mst_age_categoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Mst_age_categoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_age_categoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Mst_age_categoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_age_categoryPayload>
          }
          findFirst: {
            args: Prisma.Mst_age_categoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_age_categoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Mst_age_categoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_age_categoryPayload>
          }
          findMany: {
            args: Prisma.Mst_age_categoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_age_categoryPayload>[]
          }
          create: {
            args: Prisma.Mst_age_categoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_age_categoryPayload>
          }
          createMany: {
            args: Prisma.Mst_age_categoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Mst_age_categoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_age_categoryPayload>[]
          }
          delete: {
            args: Prisma.Mst_age_categoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_age_categoryPayload>
          }
          update: {
            args: Prisma.Mst_age_categoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_age_categoryPayload>
          }
          deleteMany: {
            args: Prisma.Mst_age_categoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Mst_age_categoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Mst_age_categoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_age_categoryPayload>[]
          }
          upsert: {
            args: Prisma.Mst_age_categoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_age_categoryPayload>
          }
          aggregate: {
            args: Prisma.Mst_age_categoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMst_age_category>
          }
          groupBy: {
            args: Prisma.Mst_age_categoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mst_age_categoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.Mst_age_categoryCountArgs<ExtArgs>
            result: $Utils.Optional<Mst_age_categoryCountAggregateOutputType> | number
          }
        }
      }
      Mst_event: {
        payload: Prisma.$Mst_eventPayload<ExtArgs>
        fields: Prisma.Mst_eventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Mst_eventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_eventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Mst_eventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_eventPayload>
          }
          findFirst: {
            args: Prisma.Mst_eventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_eventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Mst_eventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_eventPayload>
          }
          findMany: {
            args: Prisma.Mst_eventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_eventPayload>[]
          }
          create: {
            args: Prisma.Mst_eventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_eventPayload>
          }
          createMany: {
            args: Prisma.Mst_eventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Mst_eventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_eventPayload>[]
          }
          delete: {
            args: Prisma.Mst_eventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_eventPayload>
          }
          update: {
            args: Prisma.Mst_eventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_eventPayload>
          }
          deleteMany: {
            args: Prisma.Mst_eventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Mst_eventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Mst_eventUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_eventPayload>[]
          }
          upsert: {
            args: Prisma.Mst_eventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_eventPayload>
          }
          aggregate: {
            args: Prisma.Mst_eventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMst_event>
          }
          groupBy: {
            args: Prisma.Mst_eventGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mst_eventGroupByOutputType>[]
          }
          count: {
            args: Prisma.Mst_eventCountArgs<ExtArgs>
            result: $Utils.Optional<Mst_eventCountAggregateOutputType> | number
          }
        }
      }
      Mst_event_result: {
        payload: Prisma.$Mst_event_resultPayload<ExtArgs>
        fields: Prisma.Mst_event_resultFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Mst_event_resultFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_resultPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Mst_event_resultFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_resultPayload>
          }
          findFirst: {
            args: Prisma.Mst_event_resultFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_resultPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Mst_event_resultFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_resultPayload>
          }
          findMany: {
            args: Prisma.Mst_event_resultFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_resultPayload>[]
          }
          create: {
            args: Prisma.Mst_event_resultCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_resultPayload>
          }
          createMany: {
            args: Prisma.Mst_event_resultCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Mst_event_resultCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_resultPayload>[]
          }
          delete: {
            args: Prisma.Mst_event_resultDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_resultPayload>
          }
          update: {
            args: Prisma.Mst_event_resultUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_resultPayload>
          }
          deleteMany: {
            args: Prisma.Mst_event_resultDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Mst_event_resultUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Mst_event_resultUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_resultPayload>[]
          }
          upsert: {
            args: Prisma.Mst_event_resultUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_resultPayload>
          }
          aggregate: {
            args: Prisma.Mst_event_resultAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMst_event_result>
          }
          groupBy: {
            args: Prisma.Mst_event_resultGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mst_event_resultGroupByOutputType>[]
          }
          count: {
            args: Prisma.Mst_event_resultCountArgs<ExtArgs>
            result: $Utils.Optional<Mst_event_resultCountAggregateOutputType> | number
          }
        }
      }
      Mst_event_type: {
        payload: Prisma.$Mst_event_typePayload<ExtArgs>
        fields: Prisma.Mst_event_typeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Mst_event_typeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_typePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Mst_event_typeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_typePayload>
          }
          findFirst: {
            args: Prisma.Mst_event_typeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_typePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Mst_event_typeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_typePayload>
          }
          findMany: {
            args: Prisma.Mst_event_typeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_typePayload>[]
          }
          create: {
            args: Prisma.Mst_event_typeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_typePayload>
          }
          createMany: {
            args: Prisma.Mst_event_typeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Mst_event_typeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_typePayload>[]
          }
          delete: {
            args: Prisma.Mst_event_typeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_typePayload>
          }
          update: {
            args: Prisma.Mst_event_typeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_typePayload>
          }
          deleteMany: {
            args: Prisma.Mst_event_typeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Mst_event_typeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Mst_event_typeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_typePayload>[]
          }
          upsert: {
            args: Prisma.Mst_event_typeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_event_typePayload>
          }
          aggregate: {
            args: Prisma.Mst_event_typeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMst_event_type>
          }
          groupBy: {
            args: Prisma.Mst_event_typeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mst_event_typeGroupByOutputType>[]
          }
          count: {
            args: Prisma.Mst_event_typeCountArgs<ExtArgs>
            result: $Utils.Optional<Mst_event_typeCountAggregateOutputType> | number
          }
        }
      }
      Mst_role: {
        payload: Prisma.$Mst_rolePayload<ExtArgs>
        fields: Prisma.Mst_roleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Mst_roleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_rolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Mst_roleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_rolePayload>
          }
          findFirst: {
            args: Prisma.Mst_roleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_rolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Mst_roleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_rolePayload>
          }
          findMany: {
            args: Prisma.Mst_roleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_rolePayload>[]
          }
          create: {
            args: Prisma.Mst_roleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_rolePayload>
          }
          createMany: {
            args: Prisma.Mst_roleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Mst_roleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_rolePayload>[]
          }
          delete: {
            args: Prisma.Mst_roleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_rolePayload>
          }
          update: {
            args: Prisma.Mst_roleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_rolePayload>
          }
          deleteMany: {
            args: Prisma.Mst_roleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Mst_roleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Mst_roleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_rolePayload>[]
          }
          upsert: {
            args: Prisma.Mst_roleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_rolePayload>
          }
          aggregate: {
            args: Prisma.Mst_roleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMst_role>
          }
          groupBy: {
            args: Prisma.Mst_roleGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mst_roleGroupByOutputType>[]
          }
          count: {
            args: Prisma.Mst_roleCountArgs<ExtArgs>
            result: $Utils.Optional<Mst_roleCountAggregateOutputType> | number
          }
        }
      }
      Mst_temple: {
        payload: Prisma.$Mst_templePayload<ExtArgs>
        fields: Prisma.Mst_templeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Mst_templeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_templePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Mst_templeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_templePayload>
          }
          findFirst: {
            args: Prisma.Mst_templeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_templePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Mst_templeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_templePayload>
          }
          findMany: {
            args: Prisma.Mst_templeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_templePayload>[]
          }
          create: {
            args: Prisma.Mst_templeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_templePayload>
          }
          createMany: {
            args: Prisma.Mst_templeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Mst_templeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_templePayload>[]
          }
          delete: {
            args: Prisma.Mst_templeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_templePayload>
          }
          update: {
            args: Prisma.Mst_templeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_templePayload>
          }
          deleteMany: {
            args: Prisma.Mst_templeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Mst_templeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Mst_templeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_templePayload>[]
          }
          upsert: {
            args: Prisma.Mst_templeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Mst_templePayload>
          }
          aggregate: {
            args: Prisma.Mst_templeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMst_temple>
          }
          groupBy: {
            args: Prisma.Mst_templeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mst_templeGroupByOutputType>[]
          }
          count: {
            args: Prisma.Mst_templeCountArgs<ExtArgs>
            result: $Utils.Optional<Mst_templeCountAggregateOutputType> | number
          }
        }
      }
      Profile: {
        payload: Prisma.$ProfilePayload<ExtArgs>
        fields: Prisma.ProfileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProfileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProfileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          findFirst: {
            args: Prisma.ProfileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProfileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          findMany: {
            args: Prisma.ProfileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          create: {
            args: Prisma.ProfileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          createMany: {
            args: Prisma.ProfileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProfileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          delete: {
            args: Prisma.ProfileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          update: {
            args: Prisma.ProfileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          deleteMany: {
            args: Prisma.ProfileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProfileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProfileUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          upsert: {
            args: Prisma.ProfileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          aggregate: {
            args: Prisma.ProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProfile>
          }
          groupBy: {
            args: Prisma.ProfileGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProfileCountArgs<ExtArgs>
            result: $Utils.Optional<ProfileCountAggregateOutputType> | number
          }
        }
      }
      Settings: {
        payload: Prisma.$SettingsPayload<ExtArgs>
        fields: Prisma.SettingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SettingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SettingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingsPayload>
          }
          findFirst: {
            args: Prisma.SettingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SettingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingsPayload>
          }
          findMany: {
            args: Prisma.SettingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingsPayload>[]
          }
          create: {
            args: Prisma.SettingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingsPayload>
          }
          createMany: {
            args: Prisma.SettingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SettingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingsPayload>[]
          }
          delete: {
            args: Prisma.SettingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingsPayload>
          }
          update: {
            args: Prisma.SettingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingsPayload>
          }
          deleteMany: {
            args: Prisma.SettingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SettingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SettingsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingsPayload>[]
          }
          upsert: {
            args: Prisma.SettingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingsPayload>
          }
          aggregate: {
            args: Prisma.SettingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSettings>
          }
          groupBy: {
            args: Prisma.SettingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.SettingsCountArgs<ExtArgs>
            result: $Utils.Optional<SettingsCountAggregateOutputType> | number
          }
        }
      }
      Team_event_registration: {
        payload: Prisma.$Team_event_registrationPayload<ExtArgs>
        fields: Prisma.Team_event_registrationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Team_event_registrationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Team_event_registrationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Team_event_registrationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Team_event_registrationPayload>
          }
          findFirst: {
            args: Prisma.Team_event_registrationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Team_event_registrationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Team_event_registrationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Team_event_registrationPayload>
          }
          findMany: {
            args: Prisma.Team_event_registrationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Team_event_registrationPayload>[]
          }
          create: {
            args: Prisma.Team_event_registrationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Team_event_registrationPayload>
          }
          createMany: {
            args: Prisma.Team_event_registrationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Team_event_registrationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Team_event_registrationPayload>[]
          }
          delete: {
            args: Prisma.Team_event_registrationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Team_event_registrationPayload>
          }
          update: {
            args: Prisma.Team_event_registrationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Team_event_registrationPayload>
          }
          deleteMany: {
            args: Prisma.Team_event_registrationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Team_event_registrationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Team_event_registrationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Team_event_registrationPayload>[]
          }
          upsert: {
            args: Prisma.Team_event_registrationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Team_event_registrationPayload>
          }
          aggregate: {
            args: Prisma.Team_event_registrationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTeam_event_registration>
          }
          groupBy: {
            args: Prisma.Team_event_registrationGroupByArgs<ExtArgs>
            result: $Utils.Optional<Team_event_registrationGroupByOutputType>[]
          }
          count: {
            args: Prisma.Team_event_registrationCountArgs<ExtArgs>
            result: $Utils.Optional<Team_event_registrationCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      User_role: {
        payload: Prisma.$User_rolePayload<ExtArgs>
        fields: Prisma.User_roleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.User_roleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_rolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.User_roleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_rolePayload>
          }
          findFirst: {
            args: Prisma.User_roleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_rolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.User_roleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_rolePayload>
          }
          findMany: {
            args: Prisma.User_roleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_rolePayload>[]
          }
          create: {
            args: Prisma.User_roleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_rolePayload>
          }
          createMany: {
            args: Prisma.User_roleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.User_roleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_rolePayload>[]
          }
          delete: {
            args: Prisma.User_roleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_rolePayload>
          }
          update: {
            args: Prisma.User_roleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_rolePayload>
          }
          deleteMany: {
            args: Prisma.User_roleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.User_roleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.User_roleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_rolePayload>[]
          }
          upsert: {
            args: Prisma.User_roleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_rolePayload>
          }
          aggregate: {
            args: Prisma.User_roleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_role>
          }
          groupBy: {
            args: Prisma.User_roleGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_roleGroupByOutputType>[]
          }
          count: {
            args: Prisma.User_roleCountArgs<ExtArgs>
            result: $Utils.Optional<User_roleCountAggregateOutputType> | number
          }
        }
      }
      Audit_log: {
        payload: Prisma.$Audit_logPayload<ExtArgs>
        fields: Prisma.Audit_logFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Audit_logFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Audit_logPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Audit_logFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Audit_logPayload>
          }
          findFirst: {
            args: Prisma.Audit_logFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Audit_logPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Audit_logFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Audit_logPayload>
          }
          findMany: {
            args: Prisma.Audit_logFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Audit_logPayload>[]
          }
          create: {
            args: Prisma.Audit_logCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Audit_logPayload>
          }
          createMany: {
            args: Prisma.Audit_logCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Audit_logCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Audit_logPayload>[]
          }
          delete: {
            args: Prisma.Audit_logDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Audit_logPayload>
          }
          update: {
            args: Prisma.Audit_logUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Audit_logPayload>
          }
          deleteMany: {
            args: Prisma.Audit_logDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Audit_logUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Audit_logUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Audit_logPayload>[]
          }
          upsert: {
            args: Prisma.Audit_logUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Audit_logPayload>
          }
          aggregate: {
            args: Prisma.Audit_logAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAudit_log>
          }
          groupBy: {
            args: Prisma.Audit_logGroupByArgs<ExtArgs>
            result: $Utils.Optional<Audit_logGroupByOutputType>[]
          }
          count: {
            args: Prisma.Audit_logCountArgs<ExtArgs>
            result: $Utils.Optional<Audit_logCountAggregateOutputType> | number
          }
        }
      }
      event_schedule: {
        payload: Prisma.$event_schedulePayload<ExtArgs>
        fields: Prisma.event_scheduleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.event_scheduleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_schedulePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.event_scheduleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_schedulePayload>
          }
          findFirst: {
            args: Prisma.event_scheduleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_schedulePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.event_scheduleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_schedulePayload>
          }
          findMany: {
            args: Prisma.event_scheduleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_schedulePayload>[]
          }
          create: {
            args: Prisma.event_scheduleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_schedulePayload>
          }
          createMany: {
            args: Prisma.event_scheduleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.event_scheduleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_schedulePayload>[]
          }
          delete: {
            args: Prisma.event_scheduleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_schedulePayload>
          }
          update: {
            args: Prisma.event_scheduleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_schedulePayload>
          }
          deleteMany: {
            args: Prisma.event_scheduleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.event_scheduleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.event_scheduleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_schedulePayload>[]
          }
          upsert: {
            args: Prisma.event_scheduleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$event_schedulePayload>
          }
          aggregate: {
            args: Prisma.Event_scheduleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvent_schedule>
          }
          groupBy: {
            args: Prisma.event_scheduleGroupByArgs<ExtArgs>
            result: $Utils.Optional<Event_scheduleGroupByOutputType>[]
          }
          count: {
            args: Prisma.event_scheduleCountArgs<ExtArgs>
            result: $Utils.Optional<Event_scheduleCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    champion?: ChampionOmit
    ind_event_registration?: Ind_event_registrationOmit
    mst_age_category?: Mst_age_categoryOmit
    mst_event?: Mst_eventOmit
    mst_event_result?: Mst_event_resultOmit
    mst_event_type?: Mst_event_typeOmit
    mst_role?: Mst_roleOmit
    mst_temple?: Mst_templeOmit
    profile?: ProfileOmit
    settings?: SettingsOmit
    team_event_registration?: Team_event_registrationOmit
    user?: UserOmit
    user_role?: User_roleOmit
    audit_log?: Audit_logOmit
    event_schedule?: event_scheduleOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Mst_age_categoryCountOutputType
   */

  export type Mst_age_categoryCountOutputType = {
    events: number
  }

  export type Mst_age_categoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    events?: boolean | Mst_age_categoryCountOutputTypeCountEventsArgs
  }

  // Custom InputTypes
  /**
   * Mst_age_categoryCountOutputType without action
   */
  export type Mst_age_categoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_age_categoryCountOutputType
     */
    select?: Mst_age_categoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Mst_age_categoryCountOutputType without action
   */
  export type Mst_age_categoryCountOutputTypeCountEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Mst_eventWhereInput
  }


  /**
   * Count Type Mst_eventCountOutputType
   */

  export type Mst_eventCountOutputType = {
    registrations: number
    team_registrations: number
    schedules: number
  }

  export type Mst_eventCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | Mst_eventCountOutputTypeCountRegistrationsArgs
    team_registrations?: boolean | Mst_eventCountOutputTypeCountTeam_registrationsArgs
    schedules?: boolean | Mst_eventCountOutputTypeCountSchedulesArgs
  }

  // Custom InputTypes
  /**
   * Mst_eventCountOutputType without action
   */
  export type Mst_eventCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_eventCountOutputType
     */
    select?: Mst_eventCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Mst_eventCountOutputType without action
   */
  export type Mst_eventCountOutputTypeCountRegistrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Ind_event_registrationWhereInput
  }

  /**
   * Mst_eventCountOutputType without action
   */
  export type Mst_eventCountOutputTypeCountTeam_registrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Team_event_registrationWhereInput
  }

  /**
   * Mst_eventCountOutputType without action
   */
  export type Mst_eventCountOutputTypeCountSchedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: event_scheduleWhereInput
  }


  /**
   * Count Type Mst_event_resultCountOutputType
   */

  export type Mst_event_resultCountOutputType = {
    ind_event_registrations: number
    team_event_registrations: number
  }

  export type Mst_event_resultCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ind_event_registrations?: boolean | Mst_event_resultCountOutputTypeCountInd_event_registrationsArgs
    team_event_registrations?: boolean | Mst_event_resultCountOutputTypeCountTeam_event_registrationsArgs
  }

  // Custom InputTypes
  /**
   * Mst_event_resultCountOutputType without action
   */
  export type Mst_event_resultCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_resultCountOutputType
     */
    select?: Mst_event_resultCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Mst_event_resultCountOutputType without action
   */
  export type Mst_event_resultCountOutputTypeCountInd_event_registrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Ind_event_registrationWhereInput
  }

  /**
   * Mst_event_resultCountOutputType without action
   */
  export type Mst_event_resultCountOutputTypeCountTeam_event_registrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Team_event_registrationWhereInput
  }


  /**
   * Count Type Mst_event_typeCountOutputType
   */

  export type Mst_event_typeCountOutputType = {
    events: number
    results: number
  }

  export type Mst_event_typeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    events?: boolean | Mst_event_typeCountOutputTypeCountEventsArgs
    results?: boolean | Mst_event_typeCountOutputTypeCountResultsArgs
  }

  // Custom InputTypes
  /**
   * Mst_event_typeCountOutputType without action
   */
  export type Mst_event_typeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_typeCountOutputType
     */
    select?: Mst_event_typeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Mst_event_typeCountOutputType without action
   */
  export type Mst_event_typeCountOutputTypeCountEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Mst_eventWhereInput
  }

  /**
   * Mst_event_typeCountOutputType without action
   */
  export type Mst_event_typeCountOutputTypeCountResultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Mst_event_resultWhereInput
  }


  /**
   * Count Type Mst_roleCountOutputType
   */

  export type Mst_roleCountOutputType = {
    profiles: number
    user_roles: number
  }

  export type Mst_roleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    profiles?: boolean | Mst_roleCountOutputTypeCountProfilesArgs
    user_roles?: boolean | Mst_roleCountOutputTypeCountUser_rolesArgs
  }

  // Custom InputTypes
  /**
   * Mst_roleCountOutputType without action
   */
  export type Mst_roleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_roleCountOutputType
     */
    select?: Mst_roleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Mst_roleCountOutputType without action
   */
  export type Mst_roleCountOutputTypeCountProfilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfileWhereInput
  }

  /**
   * Mst_roleCountOutputType without action
   */
  export type Mst_roleCountOutputTypeCountUser_rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: User_roleWhereInput
  }


  /**
   * Count Type Mst_templeCountOutputType
   */

  export type Mst_templeCountOutputType = {
    champions: number
    host_champions: number
    profiles: number
    team_registrations: number
  }

  export type Mst_templeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    champions?: boolean | Mst_templeCountOutputTypeCountChampionsArgs
    host_champions?: boolean | Mst_templeCountOutputTypeCountHost_championsArgs
    profiles?: boolean | Mst_templeCountOutputTypeCountProfilesArgs
    team_registrations?: boolean | Mst_templeCountOutputTypeCountTeam_registrationsArgs
  }

  // Custom InputTypes
  /**
   * Mst_templeCountOutputType without action
   */
  export type Mst_templeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_templeCountOutputType
     */
    select?: Mst_templeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Mst_templeCountOutputType without action
   */
  export type Mst_templeCountOutputTypeCountChampionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChampionWhereInput
  }

  /**
   * Mst_templeCountOutputType without action
   */
  export type Mst_templeCountOutputTypeCountHost_championsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChampionWhereInput
  }

  /**
   * Mst_templeCountOutputType without action
   */
  export type Mst_templeCountOutputTypeCountProfilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfileWhereInput
  }

  /**
   * Mst_templeCountOutputType without action
   */
  export type Mst_templeCountOutputTypeCountTeam_registrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Team_event_registrationWhereInput
  }


  /**
   * Count Type ProfileCountOutputType
   */

  export type ProfileCountOutputType = {
    registrations: number
  }

  export type ProfileCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | ProfileCountOutputTypeCountRegistrationsArgs
  }

  // Custom InputTypes
  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfileCountOutputType
     */
    select?: ProfileCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountRegistrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Ind_event_registrationWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    user_roles: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_roles?: boolean | UserCountOutputTypeCountUser_rolesArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUser_rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: User_roleWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Champion
   */

  export type AggregateChampion = {
    _count: ChampionCountAggregateOutputType | null
    _avg: ChampionAvgAggregateOutputType | null
    _sum: ChampionSumAggregateOutputType | null
    _min: ChampionMinAggregateOutputType | null
    _max: ChampionMaxAggregateOutputType | null
  }

  export type ChampionAvgAggregateOutputType = {
    id: number | null
    temple_id: number | null
    year: number | null
    host_temple_id: number | null
  }

  export type ChampionSumAggregateOutputType = {
    id: number | null
    temple_id: number | null
    year: number | null
    host_temple_id: number | null
  }

  export type ChampionMinAggregateOutputType = {
    id: number | null
    temple_id: number | null
    year: number | null
    host_temple_id: number | null
    created_at: Date | null
    modified_at: Date | null
  }

  export type ChampionMaxAggregateOutputType = {
    id: number | null
    temple_id: number | null
    year: number | null
    host_temple_id: number | null
    created_at: Date | null
    modified_at: Date | null
  }

  export type ChampionCountAggregateOutputType = {
    id: number
    temple_id: number
    year: number
    host_temple_id: number
    created_at: number
    modified_at: number
    _all: number
  }


  export type ChampionAvgAggregateInputType = {
    id?: true
    temple_id?: true
    year?: true
    host_temple_id?: true
  }

  export type ChampionSumAggregateInputType = {
    id?: true
    temple_id?: true
    year?: true
    host_temple_id?: true
  }

  export type ChampionMinAggregateInputType = {
    id?: true
    temple_id?: true
    year?: true
    host_temple_id?: true
    created_at?: true
    modified_at?: true
  }

  export type ChampionMaxAggregateInputType = {
    id?: true
    temple_id?: true
    year?: true
    host_temple_id?: true
    created_at?: true
    modified_at?: true
  }

  export type ChampionCountAggregateInputType = {
    id?: true
    temple_id?: true
    year?: true
    host_temple_id?: true
    created_at?: true
    modified_at?: true
    _all?: true
  }

  export type ChampionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Champion to aggregate.
     */
    where?: ChampionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Champions to fetch.
     */
    orderBy?: ChampionOrderByWithRelationInput | ChampionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChampionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Champions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Champions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Champions
    **/
    _count?: true | ChampionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChampionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChampionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChampionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChampionMaxAggregateInputType
  }

  export type GetChampionAggregateType<T extends ChampionAggregateArgs> = {
        [P in keyof T & keyof AggregateChampion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChampion[P]>
      : GetScalarType<T[P], AggregateChampion[P]>
  }




  export type ChampionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChampionWhereInput
    orderBy?: ChampionOrderByWithAggregationInput | ChampionOrderByWithAggregationInput[]
    by: ChampionScalarFieldEnum[] | ChampionScalarFieldEnum
    having?: ChampionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChampionCountAggregateInputType | true
    _avg?: ChampionAvgAggregateInputType
    _sum?: ChampionSumAggregateInputType
    _min?: ChampionMinAggregateInputType
    _max?: ChampionMaxAggregateInputType
  }

  export type ChampionGroupByOutputType = {
    id: number
    temple_id: number
    year: number
    host_temple_id: number
    created_at: Date
    modified_at: Date
    _count: ChampionCountAggregateOutputType | null
    _avg: ChampionAvgAggregateOutputType | null
    _sum: ChampionSumAggregateOutputType | null
    _min: ChampionMinAggregateOutputType | null
    _max: ChampionMaxAggregateOutputType | null
  }

  type GetChampionGroupByPayload<T extends ChampionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChampionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChampionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChampionGroupByOutputType[P]>
            : GetScalarType<T[P], ChampionGroupByOutputType[P]>
        }
      >
    >


  export type ChampionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    temple_id?: boolean
    year?: boolean
    host_temple_id?: boolean
    created_at?: boolean
    modified_at?: boolean
    temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
    host_temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["champion"]>

  export type ChampionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    temple_id?: boolean
    year?: boolean
    host_temple_id?: boolean
    created_at?: boolean
    modified_at?: boolean
    temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
    host_temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["champion"]>

  export type ChampionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    temple_id?: boolean
    year?: boolean
    host_temple_id?: boolean
    created_at?: boolean
    modified_at?: boolean
    temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
    host_temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["champion"]>

  export type ChampionSelectScalar = {
    id?: boolean
    temple_id?: boolean
    year?: boolean
    host_temple_id?: boolean
    created_at?: boolean
    modified_at?: boolean
  }

  export type ChampionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "temple_id" | "year" | "host_temple_id" | "created_at" | "modified_at", ExtArgs["result"]["champion"]>
  export type ChampionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
    host_temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
  }
  export type ChampionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
    host_temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
  }
  export type ChampionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
    host_temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
  }

  export type $ChampionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Champion"
    objects: {
      temple: Prisma.$Mst_templePayload<ExtArgs>
      host_temple: Prisma.$Mst_templePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      temple_id: number
      year: number
      host_temple_id: number
      created_at: Date
      modified_at: Date
    }, ExtArgs["result"]["champion"]>
    composites: {}
  }

  type ChampionGetPayload<S extends boolean | null | undefined | ChampionDefaultArgs> = $Result.GetResult<Prisma.$ChampionPayload, S>

  type ChampionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChampionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChampionCountAggregateInputType | true
    }

  export interface ChampionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Champion'], meta: { name: 'Champion' } }
    /**
     * Find zero or one Champion that matches the filter.
     * @param {ChampionFindUniqueArgs} args - Arguments to find a Champion
     * @example
     * // Get one Champion
     * const champion = await prisma.champion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChampionFindUniqueArgs>(args: SelectSubset<T, ChampionFindUniqueArgs<ExtArgs>>): Prisma__ChampionClient<$Result.GetResult<Prisma.$ChampionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Champion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChampionFindUniqueOrThrowArgs} args - Arguments to find a Champion
     * @example
     * // Get one Champion
     * const champion = await prisma.champion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChampionFindUniqueOrThrowArgs>(args: SelectSubset<T, ChampionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChampionClient<$Result.GetResult<Prisma.$ChampionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Champion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChampionFindFirstArgs} args - Arguments to find a Champion
     * @example
     * // Get one Champion
     * const champion = await prisma.champion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChampionFindFirstArgs>(args?: SelectSubset<T, ChampionFindFirstArgs<ExtArgs>>): Prisma__ChampionClient<$Result.GetResult<Prisma.$ChampionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Champion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChampionFindFirstOrThrowArgs} args - Arguments to find a Champion
     * @example
     * // Get one Champion
     * const champion = await prisma.champion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChampionFindFirstOrThrowArgs>(args?: SelectSubset<T, ChampionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChampionClient<$Result.GetResult<Prisma.$ChampionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Champions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChampionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Champions
     * const champions = await prisma.champion.findMany()
     * 
     * // Get first 10 Champions
     * const champions = await prisma.champion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const championWithIdOnly = await prisma.champion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChampionFindManyArgs>(args?: SelectSubset<T, ChampionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChampionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Champion.
     * @param {ChampionCreateArgs} args - Arguments to create a Champion.
     * @example
     * // Create one Champion
     * const Champion = await prisma.champion.create({
     *   data: {
     *     // ... data to create a Champion
     *   }
     * })
     * 
     */
    create<T extends ChampionCreateArgs>(args: SelectSubset<T, ChampionCreateArgs<ExtArgs>>): Prisma__ChampionClient<$Result.GetResult<Prisma.$ChampionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Champions.
     * @param {ChampionCreateManyArgs} args - Arguments to create many Champions.
     * @example
     * // Create many Champions
     * const champion = await prisma.champion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChampionCreateManyArgs>(args?: SelectSubset<T, ChampionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Champions and returns the data saved in the database.
     * @param {ChampionCreateManyAndReturnArgs} args - Arguments to create many Champions.
     * @example
     * // Create many Champions
     * const champion = await prisma.champion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Champions and only return the `id`
     * const championWithIdOnly = await prisma.champion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ChampionCreateManyAndReturnArgs>(args?: SelectSubset<T, ChampionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChampionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Champion.
     * @param {ChampionDeleteArgs} args - Arguments to delete one Champion.
     * @example
     * // Delete one Champion
     * const Champion = await prisma.champion.delete({
     *   where: {
     *     // ... filter to delete one Champion
     *   }
     * })
     * 
     */
    delete<T extends ChampionDeleteArgs>(args: SelectSubset<T, ChampionDeleteArgs<ExtArgs>>): Prisma__ChampionClient<$Result.GetResult<Prisma.$ChampionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Champion.
     * @param {ChampionUpdateArgs} args - Arguments to update one Champion.
     * @example
     * // Update one Champion
     * const champion = await prisma.champion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChampionUpdateArgs>(args: SelectSubset<T, ChampionUpdateArgs<ExtArgs>>): Prisma__ChampionClient<$Result.GetResult<Prisma.$ChampionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Champions.
     * @param {ChampionDeleteManyArgs} args - Arguments to filter Champions to delete.
     * @example
     * // Delete a few Champions
     * const { count } = await prisma.champion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChampionDeleteManyArgs>(args?: SelectSubset<T, ChampionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Champions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChampionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Champions
     * const champion = await prisma.champion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChampionUpdateManyArgs>(args: SelectSubset<T, ChampionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Champions and returns the data updated in the database.
     * @param {ChampionUpdateManyAndReturnArgs} args - Arguments to update many Champions.
     * @example
     * // Update many Champions
     * const champion = await prisma.champion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Champions and only return the `id`
     * const championWithIdOnly = await prisma.champion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ChampionUpdateManyAndReturnArgs>(args: SelectSubset<T, ChampionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChampionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Champion.
     * @param {ChampionUpsertArgs} args - Arguments to update or create a Champion.
     * @example
     * // Update or create a Champion
     * const champion = await prisma.champion.upsert({
     *   create: {
     *     // ... data to create a Champion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Champion we want to update
     *   }
     * })
     */
    upsert<T extends ChampionUpsertArgs>(args: SelectSubset<T, ChampionUpsertArgs<ExtArgs>>): Prisma__ChampionClient<$Result.GetResult<Prisma.$ChampionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Champions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChampionCountArgs} args - Arguments to filter Champions to count.
     * @example
     * // Count the number of Champions
     * const count = await prisma.champion.count({
     *   where: {
     *     // ... the filter for the Champions we want to count
     *   }
     * })
    **/
    count<T extends ChampionCountArgs>(
      args?: Subset<T, ChampionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChampionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Champion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChampionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChampionAggregateArgs>(args: Subset<T, ChampionAggregateArgs>): Prisma.PrismaPromise<GetChampionAggregateType<T>>

    /**
     * Group by Champion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChampionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChampionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChampionGroupByArgs['orderBy'] }
        : { orderBy?: ChampionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChampionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChampionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Champion model
   */
  readonly fields: ChampionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Champion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChampionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    temple<T extends Mst_templeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Mst_templeDefaultArgs<ExtArgs>>): Prisma__Mst_templeClient<$Result.GetResult<Prisma.$Mst_templePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    host_temple<T extends Mst_templeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Mst_templeDefaultArgs<ExtArgs>>): Prisma__Mst_templeClient<$Result.GetResult<Prisma.$Mst_templePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Champion model
   */
  interface ChampionFieldRefs {
    readonly id: FieldRef<"Champion", 'Int'>
    readonly temple_id: FieldRef<"Champion", 'Int'>
    readonly year: FieldRef<"Champion", 'Int'>
    readonly host_temple_id: FieldRef<"Champion", 'Int'>
    readonly created_at: FieldRef<"Champion", 'DateTime'>
    readonly modified_at: FieldRef<"Champion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Champion findUnique
   */
  export type ChampionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Champion
     */
    select?: ChampionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Champion
     */
    omit?: ChampionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChampionInclude<ExtArgs> | null
    /**
     * Filter, which Champion to fetch.
     */
    where: ChampionWhereUniqueInput
  }

  /**
   * Champion findUniqueOrThrow
   */
  export type ChampionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Champion
     */
    select?: ChampionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Champion
     */
    omit?: ChampionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChampionInclude<ExtArgs> | null
    /**
     * Filter, which Champion to fetch.
     */
    where: ChampionWhereUniqueInput
  }

  /**
   * Champion findFirst
   */
  export type ChampionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Champion
     */
    select?: ChampionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Champion
     */
    omit?: ChampionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChampionInclude<ExtArgs> | null
    /**
     * Filter, which Champion to fetch.
     */
    where?: ChampionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Champions to fetch.
     */
    orderBy?: ChampionOrderByWithRelationInput | ChampionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Champions.
     */
    cursor?: ChampionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Champions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Champions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Champions.
     */
    distinct?: ChampionScalarFieldEnum | ChampionScalarFieldEnum[]
  }

  /**
   * Champion findFirstOrThrow
   */
  export type ChampionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Champion
     */
    select?: ChampionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Champion
     */
    omit?: ChampionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChampionInclude<ExtArgs> | null
    /**
     * Filter, which Champion to fetch.
     */
    where?: ChampionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Champions to fetch.
     */
    orderBy?: ChampionOrderByWithRelationInput | ChampionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Champions.
     */
    cursor?: ChampionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Champions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Champions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Champions.
     */
    distinct?: ChampionScalarFieldEnum | ChampionScalarFieldEnum[]
  }

  /**
   * Champion findMany
   */
  export type ChampionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Champion
     */
    select?: ChampionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Champion
     */
    omit?: ChampionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChampionInclude<ExtArgs> | null
    /**
     * Filter, which Champions to fetch.
     */
    where?: ChampionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Champions to fetch.
     */
    orderBy?: ChampionOrderByWithRelationInput | ChampionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Champions.
     */
    cursor?: ChampionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Champions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Champions.
     */
    skip?: number
    distinct?: ChampionScalarFieldEnum | ChampionScalarFieldEnum[]
  }

  /**
   * Champion create
   */
  export type ChampionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Champion
     */
    select?: ChampionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Champion
     */
    omit?: ChampionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChampionInclude<ExtArgs> | null
    /**
     * The data needed to create a Champion.
     */
    data: XOR<ChampionCreateInput, ChampionUncheckedCreateInput>
  }

  /**
   * Champion createMany
   */
  export type ChampionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Champions.
     */
    data: ChampionCreateManyInput | ChampionCreateManyInput[]
  }

  /**
   * Champion createManyAndReturn
   */
  export type ChampionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Champion
     */
    select?: ChampionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Champion
     */
    omit?: ChampionOmit<ExtArgs> | null
    /**
     * The data used to create many Champions.
     */
    data: ChampionCreateManyInput | ChampionCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChampionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Champion update
   */
  export type ChampionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Champion
     */
    select?: ChampionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Champion
     */
    omit?: ChampionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChampionInclude<ExtArgs> | null
    /**
     * The data needed to update a Champion.
     */
    data: XOR<ChampionUpdateInput, ChampionUncheckedUpdateInput>
    /**
     * Choose, which Champion to update.
     */
    where: ChampionWhereUniqueInput
  }

  /**
   * Champion updateMany
   */
  export type ChampionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Champions.
     */
    data: XOR<ChampionUpdateManyMutationInput, ChampionUncheckedUpdateManyInput>
    /**
     * Filter which Champions to update
     */
    where?: ChampionWhereInput
    /**
     * Limit how many Champions to update.
     */
    limit?: number
  }

  /**
   * Champion updateManyAndReturn
   */
  export type ChampionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Champion
     */
    select?: ChampionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Champion
     */
    omit?: ChampionOmit<ExtArgs> | null
    /**
     * The data used to update Champions.
     */
    data: XOR<ChampionUpdateManyMutationInput, ChampionUncheckedUpdateManyInput>
    /**
     * Filter which Champions to update
     */
    where?: ChampionWhereInput
    /**
     * Limit how many Champions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChampionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Champion upsert
   */
  export type ChampionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Champion
     */
    select?: ChampionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Champion
     */
    omit?: ChampionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChampionInclude<ExtArgs> | null
    /**
     * The filter to search for the Champion to update in case it exists.
     */
    where: ChampionWhereUniqueInput
    /**
     * In case the Champion found by the `where` argument doesn't exist, create a new Champion with this data.
     */
    create: XOR<ChampionCreateInput, ChampionUncheckedCreateInput>
    /**
     * In case the Champion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChampionUpdateInput, ChampionUncheckedUpdateInput>
  }

  /**
   * Champion delete
   */
  export type ChampionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Champion
     */
    select?: ChampionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Champion
     */
    omit?: ChampionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChampionInclude<ExtArgs> | null
    /**
     * Filter which Champion to delete.
     */
    where: ChampionWhereUniqueInput
  }

  /**
   * Champion deleteMany
   */
  export type ChampionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Champions to delete
     */
    where?: ChampionWhereInput
    /**
     * Limit how many Champions to delete.
     */
    limit?: number
  }

  /**
   * Champion without action
   */
  export type ChampionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Champion
     */
    select?: ChampionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Champion
     */
    omit?: ChampionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChampionInclude<ExtArgs> | null
  }


  /**
   * Model Ind_event_registration
   */

  export type AggregateInd_event_registration = {
    _count: Ind_event_registrationCountAggregateOutputType | null
    _avg: Ind_event_registrationAvgAggregateOutputType | null
    _sum: Ind_event_registrationSumAggregateOutputType | null
    _min: Ind_event_registrationMinAggregateOutputType | null
    _max: Ind_event_registrationMaxAggregateOutputType | null
  }

  export type Ind_event_registrationAvgAggregateOutputType = {
    id: number | null
    event_id: number | null
    user_id: number | null
    event_result_id: number | null
  }

  export type Ind_event_registrationSumAggregateOutputType = {
    id: number | null
    event_id: number | null
    user_id: number | null
    event_result_id: number | null
  }

  export type Ind_event_registrationMinAggregateOutputType = {
    id: number | null
    event_id: number | null
    user_id: number | null
    event_result_id: number | null
    created_at: Date | null
    modified_at: Date | null
    is_deleted: boolean | null
    status: $Enums.RegistrationStatus | null
  }

  export type Ind_event_registrationMaxAggregateOutputType = {
    id: number | null
    event_id: number | null
    user_id: number | null
    event_result_id: number | null
    created_at: Date | null
    modified_at: Date | null
    is_deleted: boolean | null
    status: $Enums.RegistrationStatus | null
  }

  export type Ind_event_registrationCountAggregateOutputType = {
    id: number
    event_id: number
    user_id: number
    event_result_id: number
    created_at: number
    modified_at: number
    is_deleted: number
    status: number
    _all: number
  }


  export type Ind_event_registrationAvgAggregateInputType = {
    id?: true
    event_id?: true
    user_id?: true
    event_result_id?: true
  }

  export type Ind_event_registrationSumAggregateInputType = {
    id?: true
    event_id?: true
    user_id?: true
    event_result_id?: true
  }

  export type Ind_event_registrationMinAggregateInputType = {
    id?: true
    event_id?: true
    user_id?: true
    event_result_id?: true
    created_at?: true
    modified_at?: true
    is_deleted?: true
    status?: true
  }

  export type Ind_event_registrationMaxAggregateInputType = {
    id?: true
    event_id?: true
    user_id?: true
    event_result_id?: true
    created_at?: true
    modified_at?: true
    is_deleted?: true
    status?: true
  }

  export type Ind_event_registrationCountAggregateInputType = {
    id?: true
    event_id?: true
    user_id?: true
    event_result_id?: true
    created_at?: true
    modified_at?: true
    is_deleted?: true
    status?: true
    _all?: true
  }

  export type Ind_event_registrationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ind_event_registration to aggregate.
     */
    where?: Ind_event_registrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ind_event_registrations to fetch.
     */
    orderBy?: Ind_event_registrationOrderByWithRelationInput | Ind_event_registrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Ind_event_registrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ind_event_registrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ind_event_registrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ind_event_registrations
    **/
    _count?: true | Ind_event_registrationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Ind_event_registrationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Ind_event_registrationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ind_event_registrationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ind_event_registrationMaxAggregateInputType
  }

  export type GetInd_event_registrationAggregateType<T extends Ind_event_registrationAggregateArgs> = {
        [P in keyof T & keyof AggregateInd_event_registration]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInd_event_registration[P]>
      : GetScalarType<T[P], AggregateInd_event_registration[P]>
  }




  export type Ind_event_registrationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Ind_event_registrationWhereInput
    orderBy?: Ind_event_registrationOrderByWithAggregationInput | Ind_event_registrationOrderByWithAggregationInput[]
    by: Ind_event_registrationScalarFieldEnum[] | Ind_event_registrationScalarFieldEnum
    having?: Ind_event_registrationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ind_event_registrationCountAggregateInputType | true
    _avg?: Ind_event_registrationAvgAggregateInputType
    _sum?: Ind_event_registrationSumAggregateInputType
    _min?: Ind_event_registrationMinAggregateInputType
    _max?: Ind_event_registrationMaxAggregateInputType
  }

  export type Ind_event_registrationGroupByOutputType = {
    id: number
    event_id: number
    user_id: number
    event_result_id: number | null
    created_at: Date
    modified_at: Date
    is_deleted: boolean
    status: $Enums.RegistrationStatus
    _count: Ind_event_registrationCountAggregateOutputType | null
    _avg: Ind_event_registrationAvgAggregateOutputType | null
    _sum: Ind_event_registrationSumAggregateOutputType | null
    _min: Ind_event_registrationMinAggregateOutputType | null
    _max: Ind_event_registrationMaxAggregateOutputType | null
  }

  type GetInd_event_registrationGroupByPayload<T extends Ind_event_registrationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Ind_event_registrationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ind_event_registrationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ind_event_registrationGroupByOutputType[P]>
            : GetScalarType<T[P], Ind_event_registrationGroupByOutputType[P]>
        }
      >
    >


  export type Ind_event_registrationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    event_id?: boolean
    user_id?: boolean
    event_result_id?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
    status?: boolean
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    event_result?: boolean | Ind_event_registration$event_resultArgs<ExtArgs>
  }, ExtArgs["result"]["ind_event_registration"]>

  export type Ind_event_registrationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    event_id?: boolean
    user_id?: boolean
    event_result_id?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
    status?: boolean
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    event_result?: boolean | Ind_event_registration$event_resultArgs<ExtArgs>
  }, ExtArgs["result"]["ind_event_registration"]>

  export type Ind_event_registrationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    event_id?: boolean
    user_id?: boolean
    event_result_id?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
    status?: boolean
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    event_result?: boolean | Ind_event_registration$event_resultArgs<ExtArgs>
  }, ExtArgs["result"]["ind_event_registration"]>

  export type Ind_event_registrationSelectScalar = {
    id?: boolean
    event_id?: boolean
    user_id?: boolean
    event_result_id?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
    status?: boolean
  }

  export type Ind_event_registrationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "event_id" | "user_id" | "event_result_id" | "created_at" | "modified_at" | "is_deleted" | "status", ExtArgs["result"]["ind_event_registration"]>
  export type Ind_event_registrationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    event_result?: boolean | Ind_event_registration$event_resultArgs<ExtArgs>
  }
  export type Ind_event_registrationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    event_result?: boolean | Ind_event_registration$event_resultArgs<ExtArgs>
  }
  export type Ind_event_registrationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    event_result?: boolean | Ind_event_registration$event_resultArgs<ExtArgs>
  }

  export type $Ind_event_registrationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Ind_event_registration"
    objects: {
      event: Prisma.$Mst_eventPayload<ExtArgs>
      user: Prisma.$ProfilePayload<ExtArgs>
      event_result: Prisma.$Mst_event_resultPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      event_id: number
      user_id: number
      event_result_id: number | null
      created_at: Date
      modified_at: Date
      is_deleted: boolean
      status: $Enums.RegistrationStatus
    }, ExtArgs["result"]["ind_event_registration"]>
    composites: {}
  }

  type Ind_event_registrationGetPayload<S extends boolean | null | undefined | Ind_event_registrationDefaultArgs> = $Result.GetResult<Prisma.$Ind_event_registrationPayload, S>

  type Ind_event_registrationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Ind_event_registrationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Ind_event_registrationCountAggregateInputType | true
    }

  export interface Ind_event_registrationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ind_event_registration'], meta: { name: 'Ind_event_registration' } }
    /**
     * Find zero or one Ind_event_registration that matches the filter.
     * @param {Ind_event_registrationFindUniqueArgs} args - Arguments to find a Ind_event_registration
     * @example
     * // Get one Ind_event_registration
     * const ind_event_registration = await prisma.ind_event_registration.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Ind_event_registrationFindUniqueArgs>(args: SelectSubset<T, Ind_event_registrationFindUniqueArgs<ExtArgs>>): Prisma__Ind_event_registrationClient<$Result.GetResult<Prisma.$Ind_event_registrationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ind_event_registration that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Ind_event_registrationFindUniqueOrThrowArgs} args - Arguments to find a Ind_event_registration
     * @example
     * // Get one Ind_event_registration
     * const ind_event_registration = await prisma.ind_event_registration.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Ind_event_registrationFindUniqueOrThrowArgs>(args: SelectSubset<T, Ind_event_registrationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Ind_event_registrationClient<$Result.GetResult<Prisma.$Ind_event_registrationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ind_event_registration that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ind_event_registrationFindFirstArgs} args - Arguments to find a Ind_event_registration
     * @example
     * // Get one Ind_event_registration
     * const ind_event_registration = await prisma.ind_event_registration.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Ind_event_registrationFindFirstArgs>(args?: SelectSubset<T, Ind_event_registrationFindFirstArgs<ExtArgs>>): Prisma__Ind_event_registrationClient<$Result.GetResult<Prisma.$Ind_event_registrationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ind_event_registration that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ind_event_registrationFindFirstOrThrowArgs} args - Arguments to find a Ind_event_registration
     * @example
     * // Get one Ind_event_registration
     * const ind_event_registration = await prisma.ind_event_registration.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Ind_event_registrationFindFirstOrThrowArgs>(args?: SelectSubset<T, Ind_event_registrationFindFirstOrThrowArgs<ExtArgs>>): Prisma__Ind_event_registrationClient<$Result.GetResult<Prisma.$Ind_event_registrationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ind_event_registrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ind_event_registrationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ind_event_registrations
     * const ind_event_registrations = await prisma.ind_event_registration.findMany()
     * 
     * // Get first 10 Ind_event_registrations
     * const ind_event_registrations = await prisma.ind_event_registration.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ind_event_registrationWithIdOnly = await prisma.ind_event_registration.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Ind_event_registrationFindManyArgs>(args?: SelectSubset<T, Ind_event_registrationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Ind_event_registrationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ind_event_registration.
     * @param {Ind_event_registrationCreateArgs} args - Arguments to create a Ind_event_registration.
     * @example
     * // Create one Ind_event_registration
     * const Ind_event_registration = await prisma.ind_event_registration.create({
     *   data: {
     *     // ... data to create a Ind_event_registration
     *   }
     * })
     * 
     */
    create<T extends Ind_event_registrationCreateArgs>(args: SelectSubset<T, Ind_event_registrationCreateArgs<ExtArgs>>): Prisma__Ind_event_registrationClient<$Result.GetResult<Prisma.$Ind_event_registrationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ind_event_registrations.
     * @param {Ind_event_registrationCreateManyArgs} args - Arguments to create many Ind_event_registrations.
     * @example
     * // Create many Ind_event_registrations
     * const ind_event_registration = await prisma.ind_event_registration.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Ind_event_registrationCreateManyArgs>(args?: SelectSubset<T, Ind_event_registrationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ind_event_registrations and returns the data saved in the database.
     * @param {Ind_event_registrationCreateManyAndReturnArgs} args - Arguments to create many Ind_event_registrations.
     * @example
     * // Create many Ind_event_registrations
     * const ind_event_registration = await prisma.ind_event_registration.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ind_event_registrations and only return the `id`
     * const ind_event_registrationWithIdOnly = await prisma.ind_event_registration.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Ind_event_registrationCreateManyAndReturnArgs>(args?: SelectSubset<T, Ind_event_registrationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Ind_event_registrationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ind_event_registration.
     * @param {Ind_event_registrationDeleteArgs} args - Arguments to delete one Ind_event_registration.
     * @example
     * // Delete one Ind_event_registration
     * const Ind_event_registration = await prisma.ind_event_registration.delete({
     *   where: {
     *     // ... filter to delete one Ind_event_registration
     *   }
     * })
     * 
     */
    delete<T extends Ind_event_registrationDeleteArgs>(args: SelectSubset<T, Ind_event_registrationDeleteArgs<ExtArgs>>): Prisma__Ind_event_registrationClient<$Result.GetResult<Prisma.$Ind_event_registrationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ind_event_registration.
     * @param {Ind_event_registrationUpdateArgs} args - Arguments to update one Ind_event_registration.
     * @example
     * // Update one Ind_event_registration
     * const ind_event_registration = await prisma.ind_event_registration.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Ind_event_registrationUpdateArgs>(args: SelectSubset<T, Ind_event_registrationUpdateArgs<ExtArgs>>): Prisma__Ind_event_registrationClient<$Result.GetResult<Prisma.$Ind_event_registrationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ind_event_registrations.
     * @param {Ind_event_registrationDeleteManyArgs} args - Arguments to filter Ind_event_registrations to delete.
     * @example
     * // Delete a few Ind_event_registrations
     * const { count } = await prisma.ind_event_registration.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Ind_event_registrationDeleteManyArgs>(args?: SelectSubset<T, Ind_event_registrationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ind_event_registrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ind_event_registrationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ind_event_registrations
     * const ind_event_registration = await prisma.ind_event_registration.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Ind_event_registrationUpdateManyArgs>(args: SelectSubset<T, Ind_event_registrationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ind_event_registrations and returns the data updated in the database.
     * @param {Ind_event_registrationUpdateManyAndReturnArgs} args - Arguments to update many Ind_event_registrations.
     * @example
     * // Update many Ind_event_registrations
     * const ind_event_registration = await prisma.ind_event_registration.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ind_event_registrations and only return the `id`
     * const ind_event_registrationWithIdOnly = await prisma.ind_event_registration.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Ind_event_registrationUpdateManyAndReturnArgs>(args: SelectSubset<T, Ind_event_registrationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Ind_event_registrationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ind_event_registration.
     * @param {Ind_event_registrationUpsertArgs} args - Arguments to update or create a Ind_event_registration.
     * @example
     * // Update or create a Ind_event_registration
     * const ind_event_registration = await prisma.ind_event_registration.upsert({
     *   create: {
     *     // ... data to create a Ind_event_registration
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ind_event_registration we want to update
     *   }
     * })
     */
    upsert<T extends Ind_event_registrationUpsertArgs>(args: SelectSubset<T, Ind_event_registrationUpsertArgs<ExtArgs>>): Prisma__Ind_event_registrationClient<$Result.GetResult<Prisma.$Ind_event_registrationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ind_event_registrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ind_event_registrationCountArgs} args - Arguments to filter Ind_event_registrations to count.
     * @example
     * // Count the number of Ind_event_registrations
     * const count = await prisma.ind_event_registration.count({
     *   where: {
     *     // ... the filter for the Ind_event_registrations we want to count
     *   }
     * })
    **/
    count<T extends Ind_event_registrationCountArgs>(
      args?: Subset<T, Ind_event_registrationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ind_event_registrationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ind_event_registration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ind_event_registrationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ind_event_registrationAggregateArgs>(args: Subset<T, Ind_event_registrationAggregateArgs>): Prisma.PrismaPromise<GetInd_event_registrationAggregateType<T>>

    /**
     * Group by Ind_event_registration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ind_event_registrationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Ind_event_registrationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Ind_event_registrationGroupByArgs['orderBy'] }
        : { orderBy?: Ind_event_registrationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Ind_event_registrationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInd_event_registrationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Ind_event_registration model
   */
  readonly fields: Ind_event_registrationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Ind_event_registration.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Ind_event_registrationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    event<T extends Mst_eventDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Mst_eventDefaultArgs<ExtArgs>>): Prisma__Mst_eventClient<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    event_result<T extends Ind_event_registration$event_resultArgs<ExtArgs> = {}>(args?: Subset<T, Ind_event_registration$event_resultArgs<ExtArgs>>): Prisma__Mst_event_resultClient<$Result.GetResult<Prisma.$Mst_event_resultPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Ind_event_registration model
   */
  interface Ind_event_registrationFieldRefs {
    readonly id: FieldRef<"Ind_event_registration", 'Int'>
    readonly event_id: FieldRef<"Ind_event_registration", 'Int'>
    readonly user_id: FieldRef<"Ind_event_registration", 'Int'>
    readonly event_result_id: FieldRef<"Ind_event_registration", 'Int'>
    readonly created_at: FieldRef<"Ind_event_registration", 'DateTime'>
    readonly modified_at: FieldRef<"Ind_event_registration", 'DateTime'>
    readonly is_deleted: FieldRef<"Ind_event_registration", 'Boolean'>
    readonly status: FieldRef<"Ind_event_registration", 'RegistrationStatus'>
  }
    

  // Custom InputTypes
  /**
   * Ind_event_registration findUnique
   */
  export type Ind_event_registrationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ind_event_registration
     */
    select?: Ind_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ind_event_registration
     */
    omit?: Ind_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ind_event_registrationInclude<ExtArgs> | null
    /**
     * Filter, which Ind_event_registration to fetch.
     */
    where: Ind_event_registrationWhereUniqueInput
  }

  /**
   * Ind_event_registration findUniqueOrThrow
   */
  export type Ind_event_registrationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ind_event_registration
     */
    select?: Ind_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ind_event_registration
     */
    omit?: Ind_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ind_event_registrationInclude<ExtArgs> | null
    /**
     * Filter, which Ind_event_registration to fetch.
     */
    where: Ind_event_registrationWhereUniqueInput
  }

  /**
   * Ind_event_registration findFirst
   */
  export type Ind_event_registrationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ind_event_registration
     */
    select?: Ind_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ind_event_registration
     */
    omit?: Ind_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ind_event_registrationInclude<ExtArgs> | null
    /**
     * Filter, which Ind_event_registration to fetch.
     */
    where?: Ind_event_registrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ind_event_registrations to fetch.
     */
    orderBy?: Ind_event_registrationOrderByWithRelationInput | Ind_event_registrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ind_event_registrations.
     */
    cursor?: Ind_event_registrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ind_event_registrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ind_event_registrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ind_event_registrations.
     */
    distinct?: Ind_event_registrationScalarFieldEnum | Ind_event_registrationScalarFieldEnum[]
  }

  /**
   * Ind_event_registration findFirstOrThrow
   */
  export type Ind_event_registrationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ind_event_registration
     */
    select?: Ind_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ind_event_registration
     */
    omit?: Ind_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ind_event_registrationInclude<ExtArgs> | null
    /**
     * Filter, which Ind_event_registration to fetch.
     */
    where?: Ind_event_registrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ind_event_registrations to fetch.
     */
    orderBy?: Ind_event_registrationOrderByWithRelationInput | Ind_event_registrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ind_event_registrations.
     */
    cursor?: Ind_event_registrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ind_event_registrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ind_event_registrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ind_event_registrations.
     */
    distinct?: Ind_event_registrationScalarFieldEnum | Ind_event_registrationScalarFieldEnum[]
  }

  /**
   * Ind_event_registration findMany
   */
  export type Ind_event_registrationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ind_event_registration
     */
    select?: Ind_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ind_event_registration
     */
    omit?: Ind_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ind_event_registrationInclude<ExtArgs> | null
    /**
     * Filter, which Ind_event_registrations to fetch.
     */
    where?: Ind_event_registrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ind_event_registrations to fetch.
     */
    orderBy?: Ind_event_registrationOrderByWithRelationInput | Ind_event_registrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ind_event_registrations.
     */
    cursor?: Ind_event_registrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ind_event_registrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ind_event_registrations.
     */
    skip?: number
    distinct?: Ind_event_registrationScalarFieldEnum | Ind_event_registrationScalarFieldEnum[]
  }

  /**
   * Ind_event_registration create
   */
  export type Ind_event_registrationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ind_event_registration
     */
    select?: Ind_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ind_event_registration
     */
    omit?: Ind_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ind_event_registrationInclude<ExtArgs> | null
    /**
     * The data needed to create a Ind_event_registration.
     */
    data: XOR<Ind_event_registrationCreateInput, Ind_event_registrationUncheckedCreateInput>
  }

  /**
   * Ind_event_registration createMany
   */
  export type Ind_event_registrationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ind_event_registrations.
     */
    data: Ind_event_registrationCreateManyInput | Ind_event_registrationCreateManyInput[]
  }

  /**
   * Ind_event_registration createManyAndReturn
   */
  export type Ind_event_registrationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ind_event_registration
     */
    select?: Ind_event_registrationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Ind_event_registration
     */
    omit?: Ind_event_registrationOmit<ExtArgs> | null
    /**
     * The data used to create many Ind_event_registrations.
     */
    data: Ind_event_registrationCreateManyInput | Ind_event_registrationCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ind_event_registrationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Ind_event_registration update
   */
  export type Ind_event_registrationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ind_event_registration
     */
    select?: Ind_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ind_event_registration
     */
    omit?: Ind_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ind_event_registrationInclude<ExtArgs> | null
    /**
     * The data needed to update a Ind_event_registration.
     */
    data: XOR<Ind_event_registrationUpdateInput, Ind_event_registrationUncheckedUpdateInput>
    /**
     * Choose, which Ind_event_registration to update.
     */
    where: Ind_event_registrationWhereUniqueInput
  }

  /**
   * Ind_event_registration updateMany
   */
  export type Ind_event_registrationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ind_event_registrations.
     */
    data: XOR<Ind_event_registrationUpdateManyMutationInput, Ind_event_registrationUncheckedUpdateManyInput>
    /**
     * Filter which Ind_event_registrations to update
     */
    where?: Ind_event_registrationWhereInput
    /**
     * Limit how many Ind_event_registrations to update.
     */
    limit?: number
  }

  /**
   * Ind_event_registration updateManyAndReturn
   */
  export type Ind_event_registrationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ind_event_registration
     */
    select?: Ind_event_registrationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Ind_event_registration
     */
    omit?: Ind_event_registrationOmit<ExtArgs> | null
    /**
     * The data used to update Ind_event_registrations.
     */
    data: XOR<Ind_event_registrationUpdateManyMutationInput, Ind_event_registrationUncheckedUpdateManyInput>
    /**
     * Filter which Ind_event_registrations to update
     */
    where?: Ind_event_registrationWhereInput
    /**
     * Limit how many Ind_event_registrations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ind_event_registrationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Ind_event_registration upsert
   */
  export type Ind_event_registrationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ind_event_registration
     */
    select?: Ind_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ind_event_registration
     */
    omit?: Ind_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ind_event_registrationInclude<ExtArgs> | null
    /**
     * The filter to search for the Ind_event_registration to update in case it exists.
     */
    where: Ind_event_registrationWhereUniqueInput
    /**
     * In case the Ind_event_registration found by the `where` argument doesn't exist, create a new Ind_event_registration with this data.
     */
    create: XOR<Ind_event_registrationCreateInput, Ind_event_registrationUncheckedCreateInput>
    /**
     * In case the Ind_event_registration was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Ind_event_registrationUpdateInput, Ind_event_registrationUncheckedUpdateInput>
  }

  /**
   * Ind_event_registration delete
   */
  export type Ind_event_registrationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ind_event_registration
     */
    select?: Ind_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ind_event_registration
     */
    omit?: Ind_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ind_event_registrationInclude<ExtArgs> | null
    /**
     * Filter which Ind_event_registration to delete.
     */
    where: Ind_event_registrationWhereUniqueInput
  }

  /**
   * Ind_event_registration deleteMany
   */
  export type Ind_event_registrationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ind_event_registrations to delete
     */
    where?: Ind_event_registrationWhereInput
    /**
     * Limit how many Ind_event_registrations to delete.
     */
    limit?: number
  }

  /**
   * Ind_event_registration.event_result
   */
  export type Ind_event_registration$event_resultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_result
     */
    select?: Mst_event_resultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_result
     */
    omit?: Mst_event_resultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_resultInclude<ExtArgs> | null
    where?: Mst_event_resultWhereInput
  }

  /**
   * Ind_event_registration without action
   */
  export type Ind_event_registrationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ind_event_registration
     */
    select?: Ind_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ind_event_registration
     */
    omit?: Ind_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ind_event_registrationInclude<ExtArgs> | null
  }


  /**
   * Model Mst_age_category
   */

  export type AggregateMst_age_category = {
    _count: Mst_age_categoryCountAggregateOutputType | null
    _avg: Mst_age_categoryAvgAggregateOutputType | null
    _sum: Mst_age_categorySumAggregateOutputType | null
    _min: Mst_age_categoryMinAggregateOutputType | null
    _max: Mst_age_categoryMaxAggregateOutputType | null
  }

  export type Mst_age_categoryAvgAggregateOutputType = {
    id: number | null
    from_age: number | null
    to_age: number | null
  }

  export type Mst_age_categorySumAggregateOutputType = {
    id: number | null
    from_age: number | null
    to_age: number | null
  }

  export type Mst_age_categoryMinAggregateOutputType = {
    id: number | null
    name: string | null
    from_age: number | null
    to_age: number | null
    is_deleted: boolean | null
  }

  export type Mst_age_categoryMaxAggregateOutputType = {
    id: number | null
    name: string | null
    from_age: number | null
    to_age: number | null
    is_deleted: boolean | null
  }

  export type Mst_age_categoryCountAggregateOutputType = {
    id: number
    name: number
    from_age: number
    to_age: number
    is_deleted: number
    _all: number
  }


  export type Mst_age_categoryAvgAggregateInputType = {
    id?: true
    from_age?: true
    to_age?: true
  }

  export type Mst_age_categorySumAggregateInputType = {
    id?: true
    from_age?: true
    to_age?: true
  }

  export type Mst_age_categoryMinAggregateInputType = {
    id?: true
    name?: true
    from_age?: true
    to_age?: true
    is_deleted?: true
  }

  export type Mst_age_categoryMaxAggregateInputType = {
    id?: true
    name?: true
    from_age?: true
    to_age?: true
    is_deleted?: true
  }

  export type Mst_age_categoryCountAggregateInputType = {
    id?: true
    name?: true
    from_age?: true
    to_age?: true
    is_deleted?: true
    _all?: true
  }

  export type Mst_age_categoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mst_age_category to aggregate.
     */
    where?: Mst_age_categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_age_categories to fetch.
     */
    orderBy?: Mst_age_categoryOrderByWithRelationInput | Mst_age_categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Mst_age_categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_age_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_age_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Mst_age_categories
    **/
    _count?: true | Mst_age_categoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Mst_age_categoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Mst_age_categorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mst_age_categoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mst_age_categoryMaxAggregateInputType
  }

  export type GetMst_age_categoryAggregateType<T extends Mst_age_categoryAggregateArgs> = {
        [P in keyof T & keyof AggregateMst_age_category]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMst_age_category[P]>
      : GetScalarType<T[P], AggregateMst_age_category[P]>
  }




  export type Mst_age_categoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Mst_age_categoryWhereInput
    orderBy?: Mst_age_categoryOrderByWithAggregationInput | Mst_age_categoryOrderByWithAggregationInput[]
    by: Mst_age_categoryScalarFieldEnum[] | Mst_age_categoryScalarFieldEnum
    having?: Mst_age_categoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mst_age_categoryCountAggregateInputType | true
    _avg?: Mst_age_categoryAvgAggregateInputType
    _sum?: Mst_age_categorySumAggregateInputType
    _min?: Mst_age_categoryMinAggregateInputType
    _max?: Mst_age_categoryMaxAggregateInputType
  }

  export type Mst_age_categoryGroupByOutputType = {
    id: number
    name: string
    from_age: number
    to_age: number
    is_deleted: boolean
    _count: Mst_age_categoryCountAggregateOutputType | null
    _avg: Mst_age_categoryAvgAggregateOutputType | null
    _sum: Mst_age_categorySumAggregateOutputType | null
    _min: Mst_age_categoryMinAggregateOutputType | null
    _max: Mst_age_categoryMaxAggregateOutputType | null
  }

  type GetMst_age_categoryGroupByPayload<T extends Mst_age_categoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mst_age_categoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mst_age_categoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mst_age_categoryGroupByOutputType[P]>
            : GetScalarType<T[P], Mst_age_categoryGroupByOutputType[P]>
        }
      >
    >


  export type Mst_age_categorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    from_age?: boolean
    to_age?: boolean
    is_deleted?: boolean
    events?: boolean | Mst_age_category$eventsArgs<ExtArgs>
    _count?: boolean | Mst_age_categoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mst_age_category"]>

  export type Mst_age_categorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    from_age?: boolean
    to_age?: boolean
    is_deleted?: boolean
  }, ExtArgs["result"]["mst_age_category"]>

  export type Mst_age_categorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    from_age?: boolean
    to_age?: boolean
    is_deleted?: boolean
  }, ExtArgs["result"]["mst_age_category"]>

  export type Mst_age_categorySelectScalar = {
    id?: boolean
    name?: boolean
    from_age?: boolean
    to_age?: boolean
    is_deleted?: boolean
  }

  export type Mst_age_categoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "from_age" | "to_age" | "is_deleted", ExtArgs["result"]["mst_age_category"]>
  export type Mst_age_categoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    events?: boolean | Mst_age_category$eventsArgs<ExtArgs>
    _count?: boolean | Mst_age_categoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Mst_age_categoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type Mst_age_categoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $Mst_age_categoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Mst_age_category"
    objects: {
      events: Prisma.$Mst_eventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      from_age: number
      to_age: number
      is_deleted: boolean
    }, ExtArgs["result"]["mst_age_category"]>
    composites: {}
  }

  type Mst_age_categoryGetPayload<S extends boolean | null | undefined | Mst_age_categoryDefaultArgs> = $Result.GetResult<Prisma.$Mst_age_categoryPayload, S>

  type Mst_age_categoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Mst_age_categoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mst_age_categoryCountAggregateInputType | true
    }

  export interface Mst_age_categoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mst_age_category'], meta: { name: 'Mst_age_category' } }
    /**
     * Find zero or one Mst_age_category that matches the filter.
     * @param {Mst_age_categoryFindUniqueArgs} args - Arguments to find a Mst_age_category
     * @example
     * // Get one Mst_age_category
     * const mst_age_category = await prisma.mst_age_category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Mst_age_categoryFindUniqueArgs>(args: SelectSubset<T, Mst_age_categoryFindUniqueArgs<ExtArgs>>): Prisma__Mst_age_categoryClient<$Result.GetResult<Prisma.$Mst_age_categoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mst_age_category that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Mst_age_categoryFindUniqueOrThrowArgs} args - Arguments to find a Mst_age_category
     * @example
     * // Get one Mst_age_category
     * const mst_age_category = await prisma.mst_age_category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Mst_age_categoryFindUniqueOrThrowArgs>(args: SelectSubset<T, Mst_age_categoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Mst_age_categoryClient<$Result.GetResult<Prisma.$Mst_age_categoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mst_age_category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_age_categoryFindFirstArgs} args - Arguments to find a Mst_age_category
     * @example
     * // Get one Mst_age_category
     * const mst_age_category = await prisma.mst_age_category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Mst_age_categoryFindFirstArgs>(args?: SelectSubset<T, Mst_age_categoryFindFirstArgs<ExtArgs>>): Prisma__Mst_age_categoryClient<$Result.GetResult<Prisma.$Mst_age_categoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mst_age_category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_age_categoryFindFirstOrThrowArgs} args - Arguments to find a Mst_age_category
     * @example
     * // Get one Mst_age_category
     * const mst_age_category = await prisma.mst_age_category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Mst_age_categoryFindFirstOrThrowArgs>(args?: SelectSubset<T, Mst_age_categoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__Mst_age_categoryClient<$Result.GetResult<Prisma.$Mst_age_categoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mst_age_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_age_categoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mst_age_categories
     * const mst_age_categories = await prisma.mst_age_category.findMany()
     * 
     * // Get first 10 Mst_age_categories
     * const mst_age_categories = await prisma.mst_age_category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mst_age_categoryWithIdOnly = await prisma.mst_age_category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Mst_age_categoryFindManyArgs>(args?: SelectSubset<T, Mst_age_categoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_age_categoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mst_age_category.
     * @param {Mst_age_categoryCreateArgs} args - Arguments to create a Mst_age_category.
     * @example
     * // Create one Mst_age_category
     * const Mst_age_category = await prisma.mst_age_category.create({
     *   data: {
     *     // ... data to create a Mst_age_category
     *   }
     * })
     * 
     */
    create<T extends Mst_age_categoryCreateArgs>(args: SelectSubset<T, Mst_age_categoryCreateArgs<ExtArgs>>): Prisma__Mst_age_categoryClient<$Result.GetResult<Prisma.$Mst_age_categoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mst_age_categories.
     * @param {Mst_age_categoryCreateManyArgs} args - Arguments to create many Mst_age_categories.
     * @example
     * // Create many Mst_age_categories
     * const mst_age_category = await prisma.mst_age_category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Mst_age_categoryCreateManyArgs>(args?: SelectSubset<T, Mst_age_categoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mst_age_categories and returns the data saved in the database.
     * @param {Mst_age_categoryCreateManyAndReturnArgs} args - Arguments to create many Mst_age_categories.
     * @example
     * // Create many Mst_age_categories
     * const mst_age_category = await prisma.mst_age_category.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mst_age_categories and only return the `id`
     * const mst_age_categoryWithIdOnly = await prisma.mst_age_category.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Mst_age_categoryCreateManyAndReturnArgs>(args?: SelectSubset<T, Mst_age_categoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_age_categoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mst_age_category.
     * @param {Mst_age_categoryDeleteArgs} args - Arguments to delete one Mst_age_category.
     * @example
     * // Delete one Mst_age_category
     * const Mst_age_category = await prisma.mst_age_category.delete({
     *   where: {
     *     // ... filter to delete one Mst_age_category
     *   }
     * })
     * 
     */
    delete<T extends Mst_age_categoryDeleteArgs>(args: SelectSubset<T, Mst_age_categoryDeleteArgs<ExtArgs>>): Prisma__Mst_age_categoryClient<$Result.GetResult<Prisma.$Mst_age_categoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mst_age_category.
     * @param {Mst_age_categoryUpdateArgs} args - Arguments to update one Mst_age_category.
     * @example
     * // Update one Mst_age_category
     * const mst_age_category = await prisma.mst_age_category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Mst_age_categoryUpdateArgs>(args: SelectSubset<T, Mst_age_categoryUpdateArgs<ExtArgs>>): Prisma__Mst_age_categoryClient<$Result.GetResult<Prisma.$Mst_age_categoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mst_age_categories.
     * @param {Mst_age_categoryDeleteManyArgs} args - Arguments to filter Mst_age_categories to delete.
     * @example
     * // Delete a few Mst_age_categories
     * const { count } = await prisma.mst_age_category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Mst_age_categoryDeleteManyArgs>(args?: SelectSubset<T, Mst_age_categoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mst_age_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_age_categoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mst_age_categories
     * const mst_age_category = await prisma.mst_age_category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Mst_age_categoryUpdateManyArgs>(args: SelectSubset<T, Mst_age_categoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mst_age_categories and returns the data updated in the database.
     * @param {Mst_age_categoryUpdateManyAndReturnArgs} args - Arguments to update many Mst_age_categories.
     * @example
     * // Update many Mst_age_categories
     * const mst_age_category = await prisma.mst_age_category.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mst_age_categories and only return the `id`
     * const mst_age_categoryWithIdOnly = await prisma.mst_age_category.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Mst_age_categoryUpdateManyAndReturnArgs>(args: SelectSubset<T, Mst_age_categoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_age_categoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mst_age_category.
     * @param {Mst_age_categoryUpsertArgs} args - Arguments to update or create a Mst_age_category.
     * @example
     * // Update or create a Mst_age_category
     * const mst_age_category = await prisma.mst_age_category.upsert({
     *   create: {
     *     // ... data to create a Mst_age_category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mst_age_category we want to update
     *   }
     * })
     */
    upsert<T extends Mst_age_categoryUpsertArgs>(args: SelectSubset<T, Mst_age_categoryUpsertArgs<ExtArgs>>): Prisma__Mst_age_categoryClient<$Result.GetResult<Prisma.$Mst_age_categoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mst_age_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_age_categoryCountArgs} args - Arguments to filter Mst_age_categories to count.
     * @example
     * // Count the number of Mst_age_categories
     * const count = await prisma.mst_age_category.count({
     *   where: {
     *     // ... the filter for the Mst_age_categories we want to count
     *   }
     * })
    **/
    count<T extends Mst_age_categoryCountArgs>(
      args?: Subset<T, Mst_age_categoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mst_age_categoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mst_age_category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_age_categoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mst_age_categoryAggregateArgs>(args: Subset<T, Mst_age_categoryAggregateArgs>): Prisma.PrismaPromise<GetMst_age_categoryAggregateType<T>>

    /**
     * Group by Mst_age_category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_age_categoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Mst_age_categoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Mst_age_categoryGroupByArgs['orderBy'] }
        : { orderBy?: Mst_age_categoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Mst_age_categoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMst_age_categoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Mst_age_category model
   */
  readonly fields: Mst_age_categoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Mst_age_category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Mst_age_categoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    events<T extends Mst_age_category$eventsArgs<ExtArgs> = {}>(args?: Subset<T, Mst_age_category$eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Mst_age_category model
   */
  interface Mst_age_categoryFieldRefs {
    readonly id: FieldRef<"Mst_age_category", 'Int'>
    readonly name: FieldRef<"Mst_age_category", 'String'>
    readonly from_age: FieldRef<"Mst_age_category", 'Int'>
    readonly to_age: FieldRef<"Mst_age_category", 'Int'>
    readonly is_deleted: FieldRef<"Mst_age_category", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Mst_age_category findUnique
   */
  export type Mst_age_categoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_age_category
     */
    select?: Mst_age_categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_age_category
     */
    omit?: Mst_age_categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_age_categoryInclude<ExtArgs> | null
    /**
     * Filter, which Mst_age_category to fetch.
     */
    where: Mst_age_categoryWhereUniqueInput
  }

  /**
   * Mst_age_category findUniqueOrThrow
   */
  export type Mst_age_categoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_age_category
     */
    select?: Mst_age_categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_age_category
     */
    omit?: Mst_age_categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_age_categoryInclude<ExtArgs> | null
    /**
     * Filter, which Mst_age_category to fetch.
     */
    where: Mst_age_categoryWhereUniqueInput
  }

  /**
   * Mst_age_category findFirst
   */
  export type Mst_age_categoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_age_category
     */
    select?: Mst_age_categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_age_category
     */
    omit?: Mst_age_categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_age_categoryInclude<ExtArgs> | null
    /**
     * Filter, which Mst_age_category to fetch.
     */
    where?: Mst_age_categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_age_categories to fetch.
     */
    orderBy?: Mst_age_categoryOrderByWithRelationInput | Mst_age_categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mst_age_categories.
     */
    cursor?: Mst_age_categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_age_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_age_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mst_age_categories.
     */
    distinct?: Mst_age_categoryScalarFieldEnum | Mst_age_categoryScalarFieldEnum[]
  }

  /**
   * Mst_age_category findFirstOrThrow
   */
  export type Mst_age_categoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_age_category
     */
    select?: Mst_age_categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_age_category
     */
    omit?: Mst_age_categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_age_categoryInclude<ExtArgs> | null
    /**
     * Filter, which Mst_age_category to fetch.
     */
    where?: Mst_age_categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_age_categories to fetch.
     */
    orderBy?: Mst_age_categoryOrderByWithRelationInput | Mst_age_categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mst_age_categories.
     */
    cursor?: Mst_age_categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_age_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_age_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mst_age_categories.
     */
    distinct?: Mst_age_categoryScalarFieldEnum | Mst_age_categoryScalarFieldEnum[]
  }

  /**
   * Mst_age_category findMany
   */
  export type Mst_age_categoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_age_category
     */
    select?: Mst_age_categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_age_category
     */
    omit?: Mst_age_categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_age_categoryInclude<ExtArgs> | null
    /**
     * Filter, which Mst_age_categories to fetch.
     */
    where?: Mst_age_categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_age_categories to fetch.
     */
    orderBy?: Mst_age_categoryOrderByWithRelationInput | Mst_age_categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Mst_age_categories.
     */
    cursor?: Mst_age_categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_age_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_age_categories.
     */
    skip?: number
    distinct?: Mst_age_categoryScalarFieldEnum | Mst_age_categoryScalarFieldEnum[]
  }

  /**
   * Mst_age_category create
   */
  export type Mst_age_categoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_age_category
     */
    select?: Mst_age_categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_age_category
     */
    omit?: Mst_age_categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_age_categoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Mst_age_category.
     */
    data: XOR<Mst_age_categoryCreateInput, Mst_age_categoryUncheckedCreateInput>
  }

  /**
   * Mst_age_category createMany
   */
  export type Mst_age_categoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Mst_age_categories.
     */
    data: Mst_age_categoryCreateManyInput | Mst_age_categoryCreateManyInput[]
  }

  /**
   * Mst_age_category createManyAndReturn
   */
  export type Mst_age_categoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_age_category
     */
    select?: Mst_age_categorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_age_category
     */
    omit?: Mst_age_categoryOmit<ExtArgs> | null
    /**
     * The data used to create many Mst_age_categories.
     */
    data: Mst_age_categoryCreateManyInput | Mst_age_categoryCreateManyInput[]
  }

  /**
   * Mst_age_category update
   */
  export type Mst_age_categoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_age_category
     */
    select?: Mst_age_categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_age_category
     */
    omit?: Mst_age_categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_age_categoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Mst_age_category.
     */
    data: XOR<Mst_age_categoryUpdateInput, Mst_age_categoryUncheckedUpdateInput>
    /**
     * Choose, which Mst_age_category to update.
     */
    where: Mst_age_categoryWhereUniqueInput
  }

  /**
   * Mst_age_category updateMany
   */
  export type Mst_age_categoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Mst_age_categories.
     */
    data: XOR<Mst_age_categoryUpdateManyMutationInput, Mst_age_categoryUncheckedUpdateManyInput>
    /**
     * Filter which Mst_age_categories to update
     */
    where?: Mst_age_categoryWhereInput
    /**
     * Limit how many Mst_age_categories to update.
     */
    limit?: number
  }

  /**
   * Mst_age_category updateManyAndReturn
   */
  export type Mst_age_categoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_age_category
     */
    select?: Mst_age_categorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_age_category
     */
    omit?: Mst_age_categoryOmit<ExtArgs> | null
    /**
     * The data used to update Mst_age_categories.
     */
    data: XOR<Mst_age_categoryUpdateManyMutationInput, Mst_age_categoryUncheckedUpdateManyInput>
    /**
     * Filter which Mst_age_categories to update
     */
    where?: Mst_age_categoryWhereInput
    /**
     * Limit how many Mst_age_categories to update.
     */
    limit?: number
  }

  /**
   * Mst_age_category upsert
   */
  export type Mst_age_categoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_age_category
     */
    select?: Mst_age_categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_age_category
     */
    omit?: Mst_age_categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_age_categoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Mst_age_category to update in case it exists.
     */
    where: Mst_age_categoryWhereUniqueInput
    /**
     * In case the Mst_age_category found by the `where` argument doesn't exist, create a new Mst_age_category with this data.
     */
    create: XOR<Mst_age_categoryCreateInput, Mst_age_categoryUncheckedCreateInput>
    /**
     * In case the Mst_age_category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Mst_age_categoryUpdateInput, Mst_age_categoryUncheckedUpdateInput>
  }

  /**
   * Mst_age_category delete
   */
  export type Mst_age_categoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_age_category
     */
    select?: Mst_age_categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_age_category
     */
    omit?: Mst_age_categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_age_categoryInclude<ExtArgs> | null
    /**
     * Filter which Mst_age_category to delete.
     */
    where: Mst_age_categoryWhereUniqueInput
  }

  /**
   * Mst_age_category deleteMany
   */
  export type Mst_age_categoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mst_age_categories to delete
     */
    where?: Mst_age_categoryWhereInput
    /**
     * Limit how many Mst_age_categories to delete.
     */
    limit?: number
  }

  /**
   * Mst_age_category.events
   */
  export type Mst_age_category$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event
     */
    select?: Mst_eventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event
     */
    omit?: Mst_eventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_eventInclude<ExtArgs> | null
    where?: Mst_eventWhereInput
    orderBy?: Mst_eventOrderByWithRelationInput | Mst_eventOrderByWithRelationInput[]
    cursor?: Mst_eventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Mst_eventScalarFieldEnum | Mst_eventScalarFieldEnum[]
  }

  /**
   * Mst_age_category without action
   */
  export type Mst_age_categoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_age_category
     */
    select?: Mst_age_categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_age_category
     */
    omit?: Mst_age_categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_age_categoryInclude<ExtArgs> | null
  }


  /**
   * Model Mst_event
   */

  export type AggregateMst_event = {
    _count: Mst_eventCountAggregateOutputType | null
    _avg: Mst_eventAvgAggregateOutputType | null
    _sum: Mst_eventSumAggregateOutputType | null
    _min: Mst_eventMinAggregateOutputType | null
    _max: Mst_eventMaxAggregateOutputType | null
  }

  export type Mst_eventAvgAggregateOutputType = {
    id: number | null
    event_type_id: number | null
    age_category_id: number | null
  }

  export type Mst_eventSumAggregateOutputType = {
    id: number | null
    event_type_id: number | null
    age_category_id: number | null
  }

  export type Mst_eventMinAggregateOutputType = {
    id: number | null
    name: string | null
    event_type_id: number | null
    age_category_id: number | null
    gender: $Enums.Gender | null
    is_deleted: boolean | null
    is_closed: boolean | null
  }

  export type Mst_eventMaxAggregateOutputType = {
    id: number | null
    name: string | null
    event_type_id: number | null
    age_category_id: number | null
    gender: $Enums.Gender | null
    is_deleted: boolean | null
    is_closed: boolean | null
  }

  export type Mst_eventCountAggregateOutputType = {
    id: number
    name: number
    event_type_id: number
    age_category_id: number
    gender: number
    is_deleted: number
    is_closed: number
    _all: number
  }


  export type Mst_eventAvgAggregateInputType = {
    id?: true
    event_type_id?: true
    age_category_id?: true
  }

  export type Mst_eventSumAggregateInputType = {
    id?: true
    event_type_id?: true
    age_category_id?: true
  }

  export type Mst_eventMinAggregateInputType = {
    id?: true
    name?: true
    event_type_id?: true
    age_category_id?: true
    gender?: true
    is_deleted?: true
    is_closed?: true
  }

  export type Mst_eventMaxAggregateInputType = {
    id?: true
    name?: true
    event_type_id?: true
    age_category_id?: true
    gender?: true
    is_deleted?: true
    is_closed?: true
  }

  export type Mst_eventCountAggregateInputType = {
    id?: true
    name?: true
    event_type_id?: true
    age_category_id?: true
    gender?: true
    is_deleted?: true
    is_closed?: true
    _all?: true
  }

  export type Mst_eventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mst_event to aggregate.
     */
    where?: Mst_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_events to fetch.
     */
    orderBy?: Mst_eventOrderByWithRelationInput | Mst_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Mst_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Mst_events
    **/
    _count?: true | Mst_eventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Mst_eventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Mst_eventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mst_eventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mst_eventMaxAggregateInputType
  }

  export type GetMst_eventAggregateType<T extends Mst_eventAggregateArgs> = {
        [P in keyof T & keyof AggregateMst_event]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMst_event[P]>
      : GetScalarType<T[P], AggregateMst_event[P]>
  }




  export type Mst_eventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Mst_eventWhereInput
    orderBy?: Mst_eventOrderByWithAggregationInput | Mst_eventOrderByWithAggregationInput[]
    by: Mst_eventScalarFieldEnum[] | Mst_eventScalarFieldEnum
    having?: Mst_eventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mst_eventCountAggregateInputType | true
    _avg?: Mst_eventAvgAggregateInputType
    _sum?: Mst_eventSumAggregateInputType
    _min?: Mst_eventMinAggregateInputType
    _max?: Mst_eventMaxAggregateInputType
  }

  export type Mst_eventGroupByOutputType = {
    id: number
    name: string
    event_type_id: number
    age_category_id: number
    gender: $Enums.Gender
    is_deleted: boolean
    is_closed: boolean
    _count: Mst_eventCountAggregateOutputType | null
    _avg: Mst_eventAvgAggregateOutputType | null
    _sum: Mst_eventSumAggregateOutputType | null
    _min: Mst_eventMinAggregateOutputType | null
    _max: Mst_eventMaxAggregateOutputType | null
  }

  type GetMst_eventGroupByPayload<T extends Mst_eventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mst_eventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mst_eventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mst_eventGroupByOutputType[P]>
            : GetScalarType<T[P], Mst_eventGroupByOutputType[P]>
        }
      >
    >


  export type Mst_eventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    event_type_id?: boolean
    age_category_id?: boolean
    gender?: boolean
    is_deleted?: boolean
    is_closed?: boolean
    event_type?: boolean | Mst_event_typeDefaultArgs<ExtArgs>
    age_category?: boolean | Mst_age_categoryDefaultArgs<ExtArgs>
    registrations?: boolean | Mst_event$registrationsArgs<ExtArgs>
    team_registrations?: boolean | Mst_event$team_registrationsArgs<ExtArgs>
    schedules?: boolean | Mst_event$schedulesArgs<ExtArgs>
    _count?: boolean | Mst_eventCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mst_event"]>

  export type Mst_eventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    event_type_id?: boolean
    age_category_id?: boolean
    gender?: boolean
    is_deleted?: boolean
    is_closed?: boolean
    event_type?: boolean | Mst_event_typeDefaultArgs<ExtArgs>
    age_category?: boolean | Mst_age_categoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mst_event"]>

  export type Mst_eventSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    event_type_id?: boolean
    age_category_id?: boolean
    gender?: boolean
    is_deleted?: boolean
    is_closed?: boolean
    event_type?: boolean | Mst_event_typeDefaultArgs<ExtArgs>
    age_category?: boolean | Mst_age_categoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mst_event"]>

  export type Mst_eventSelectScalar = {
    id?: boolean
    name?: boolean
    event_type_id?: boolean
    age_category_id?: boolean
    gender?: boolean
    is_deleted?: boolean
    is_closed?: boolean
  }

  export type Mst_eventOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "event_type_id" | "age_category_id" | "gender" | "is_deleted" | "is_closed", ExtArgs["result"]["mst_event"]>
  export type Mst_eventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event_type?: boolean | Mst_event_typeDefaultArgs<ExtArgs>
    age_category?: boolean | Mst_age_categoryDefaultArgs<ExtArgs>
    registrations?: boolean | Mst_event$registrationsArgs<ExtArgs>
    team_registrations?: boolean | Mst_event$team_registrationsArgs<ExtArgs>
    schedules?: boolean | Mst_event$schedulesArgs<ExtArgs>
    _count?: boolean | Mst_eventCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Mst_eventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event_type?: boolean | Mst_event_typeDefaultArgs<ExtArgs>
    age_category?: boolean | Mst_age_categoryDefaultArgs<ExtArgs>
  }
  export type Mst_eventIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event_type?: boolean | Mst_event_typeDefaultArgs<ExtArgs>
    age_category?: boolean | Mst_age_categoryDefaultArgs<ExtArgs>
  }

  export type $Mst_eventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Mst_event"
    objects: {
      event_type: Prisma.$Mst_event_typePayload<ExtArgs>
      age_category: Prisma.$Mst_age_categoryPayload<ExtArgs>
      registrations: Prisma.$Ind_event_registrationPayload<ExtArgs>[]
      team_registrations: Prisma.$Team_event_registrationPayload<ExtArgs>[]
      schedules: Prisma.$event_schedulePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      event_type_id: number
      age_category_id: number
      gender: $Enums.Gender
      is_deleted: boolean
      is_closed: boolean
    }, ExtArgs["result"]["mst_event"]>
    composites: {}
  }

  type Mst_eventGetPayload<S extends boolean | null | undefined | Mst_eventDefaultArgs> = $Result.GetResult<Prisma.$Mst_eventPayload, S>

  type Mst_eventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Mst_eventFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mst_eventCountAggregateInputType | true
    }

  export interface Mst_eventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mst_event'], meta: { name: 'Mst_event' } }
    /**
     * Find zero or one Mst_event that matches the filter.
     * @param {Mst_eventFindUniqueArgs} args - Arguments to find a Mst_event
     * @example
     * // Get one Mst_event
     * const mst_event = await prisma.mst_event.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Mst_eventFindUniqueArgs>(args: SelectSubset<T, Mst_eventFindUniqueArgs<ExtArgs>>): Prisma__Mst_eventClient<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mst_event that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Mst_eventFindUniqueOrThrowArgs} args - Arguments to find a Mst_event
     * @example
     * // Get one Mst_event
     * const mst_event = await prisma.mst_event.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Mst_eventFindUniqueOrThrowArgs>(args: SelectSubset<T, Mst_eventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Mst_eventClient<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mst_event that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_eventFindFirstArgs} args - Arguments to find a Mst_event
     * @example
     * // Get one Mst_event
     * const mst_event = await prisma.mst_event.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Mst_eventFindFirstArgs>(args?: SelectSubset<T, Mst_eventFindFirstArgs<ExtArgs>>): Prisma__Mst_eventClient<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mst_event that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_eventFindFirstOrThrowArgs} args - Arguments to find a Mst_event
     * @example
     * // Get one Mst_event
     * const mst_event = await prisma.mst_event.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Mst_eventFindFirstOrThrowArgs>(args?: SelectSubset<T, Mst_eventFindFirstOrThrowArgs<ExtArgs>>): Prisma__Mst_eventClient<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mst_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_eventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mst_events
     * const mst_events = await prisma.mst_event.findMany()
     * 
     * // Get first 10 Mst_events
     * const mst_events = await prisma.mst_event.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mst_eventWithIdOnly = await prisma.mst_event.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Mst_eventFindManyArgs>(args?: SelectSubset<T, Mst_eventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mst_event.
     * @param {Mst_eventCreateArgs} args - Arguments to create a Mst_event.
     * @example
     * // Create one Mst_event
     * const Mst_event = await prisma.mst_event.create({
     *   data: {
     *     // ... data to create a Mst_event
     *   }
     * })
     * 
     */
    create<T extends Mst_eventCreateArgs>(args: SelectSubset<T, Mst_eventCreateArgs<ExtArgs>>): Prisma__Mst_eventClient<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mst_events.
     * @param {Mst_eventCreateManyArgs} args - Arguments to create many Mst_events.
     * @example
     * // Create many Mst_events
     * const mst_event = await prisma.mst_event.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Mst_eventCreateManyArgs>(args?: SelectSubset<T, Mst_eventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mst_events and returns the data saved in the database.
     * @param {Mst_eventCreateManyAndReturnArgs} args - Arguments to create many Mst_events.
     * @example
     * // Create many Mst_events
     * const mst_event = await prisma.mst_event.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mst_events and only return the `id`
     * const mst_eventWithIdOnly = await prisma.mst_event.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Mst_eventCreateManyAndReturnArgs>(args?: SelectSubset<T, Mst_eventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mst_event.
     * @param {Mst_eventDeleteArgs} args - Arguments to delete one Mst_event.
     * @example
     * // Delete one Mst_event
     * const Mst_event = await prisma.mst_event.delete({
     *   where: {
     *     // ... filter to delete one Mst_event
     *   }
     * })
     * 
     */
    delete<T extends Mst_eventDeleteArgs>(args: SelectSubset<T, Mst_eventDeleteArgs<ExtArgs>>): Prisma__Mst_eventClient<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mst_event.
     * @param {Mst_eventUpdateArgs} args - Arguments to update one Mst_event.
     * @example
     * // Update one Mst_event
     * const mst_event = await prisma.mst_event.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Mst_eventUpdateArgs>(args: SelectSubset<T, Mst_eventUpdateArgs<ExtArgs>>): Prisma__Mst_eventClient<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mst_events.
     * @param {Mst_eventDeleteManyArgs} args - Arguments to filter Mst_events to delete.
     * @example
     * // Delete a few Mst_events
     * const { count } = await prisma.mst_event.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Mst_eventDeleteManyArgs>(args?: SelectSubset<T, Mst_eventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mst_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_eventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mst_events
     * const mst_event = await prisma.mst_event.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Mst_eventUpdateManyArgs>(args: SelectSubset<T, Mst_eventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mst_events and returns the data updated in the database.
     * @param {Mst_eventUpdateManyAndReturnArgs} args - Arguments to update many Mst_events.
     * @example
     * // Update many Mst_events
     * const mst_event = await prisma.mst_event.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mst_events and only return the `id`
     * const mst_eventWithIdOnly = await prisma.mst_event.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Mst_eventUpdateManyAndReturnArgs>(args: SelectSubset<T, Mst_eventUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mst_event.
     * @param {Mst_eventUpsertArgs} args - Arguments to update or create a Mst_event.
     * @example
     * // Update or create a Mst_event
     * const mst_event = await prisma.mst_event.upsert({
     *   create: {
     *     // ... data to create a Mst_event
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mst_event we want to update
     *   }
     * })
     */
    upsert<T extends Mst_eventUpsertArgs>(args: SelectSubset<T, Mst_eventUpsertArgs<ExtArgs>>): Prisma__Mst_eventClient<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mst_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_eventCountArgs} args - Arguments to filter Mst_events to count.
     * @example
     * // Count the number of Mst_events
     * const count = await prisma.mst_event.count({
     *   where: {
     *     // ... the filter for the Mst_events we want to count
     *   }
     * })
    **/
    count<T extends Mst_eventCountArgs>(
      args?: Subset<T, Mst_eventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mst_eventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mst_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_eventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mst_eventAggregateArgs>(args: Subset<T, Mst_eventAggregateArgs>): Prisma.PrismaPromise<GetMst_eventAggregateType<T>>

    /**
     * Group by Mst_event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_eventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Mst_eventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Mst_eventGroupByArgs['orderBy'] }
        : { orderBy?: Mst_eventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Mst_eventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMst_eventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Mst_event model
   */
  readonly fields: Mst_eventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Mst_event.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Mst_eventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    event_type<T extends Mst_event_typeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Mst_event_typeDefaultArgs<ExtArgs>>): Prisma__Mst_event_typeClient<$Result.GetResult<Prisma.$Mst_event_typePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    age_category<T extends Mst_age_categoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Mst_age_categoryDefaultArgs<ExtArgs>>): Prisma__Mst_age_categoryClient<$Result.GetResult<Prisma.$Mst_age_categoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    registrations<T extends Mst_event$registrationsArgs<ExtArgs> = {}>(args?: Subset<T, Mst_event$registrationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Ind_event_registrationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    team_registrations<T extends Mst_event$team_registrationsArgs<ExtArgs> = {}>(args?: Subset<T, Mst_event$team_registrationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Team_event_registrationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    schedules<T extends Mst_event$schedulesArgs<ExtArgs> = {}>(args?: Subset<T, Mst_event$schedulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$event_schedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Mst_event model
   */
  interface Mst_eventFieldRefs {
    readonly id: FieldRef<"Mst_event", 'Int'>
    readonly name: FieldRef<"Mst_event", 'String'>
    readonly event_type_id: FieldRef<"Mst_event", 'Int'>
    readonly age_category_id: FieldRef<"Mst_event", 'Int'>
    readonly gender: FieldRef<"Mst_event", 'Gender'>
    readonly is_deleted: FieldRef<"Mst_event", 'Boolean'>
    readonly is_closed: FieldRef<"Mst_event", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Mst_event findUnique
   */
  export type Mst_eventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event
     */
    select?: Mst_eventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event
     */
    omit?: Mst_eventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_eventInclude<ExtArgs> | null
    /**
     * Filter, which Mst_event to fetch.
     */
    where: Mst_eventWhereUniqueInput
  }

  /**
   * Mst_event findUniqueOrThrow
   */
  export type Mst_eventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event
     */
    select?: Mst_eventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event
     */
    omit?: Mst_eventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_eventInclude<ExtArgs> | null
    /**
     * Filter, which Mst_event to fetch.
     */
    where: Mst_eventWhereUniqueInput
  }

  /**
   * Mst_event findFirst
   */
  export type Mst_eventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event
     */
    select?: Mst_eventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event
     */
    omit?: Mst_eventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_eventInclude<ExtArgs> | null
    /**
     * Filter, which Mst_event to fetch.
     */
    where?: Mst_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_events to fetch.
     */
    orderBy?: Mst_eventOrderByWithRelationInput | Mst_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mst_events.
     */
    cursor?: Mst_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mst_events.
     */
    distinct?: Mst_eventScalarFieldEnum | Mst_eventScalarFieldEnum[]
  }

  /**
   * Mst_event findFirstOrThrow
   */
  export type Mst_eventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event
     */
    select?: Mst_eventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event
     */
    omit?: Mst_eventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_eventInclude<ExtArgs> | null
    /**
     * Filter, which Mst_event to fetch.
     */
    where?: Mst_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_events to fetch.
     */
    orderBy?: Mst_eventOrderByWithRelationInput | Mst_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mst_events.
     */
    cursor?: Mst_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mst_events.
     */
    distinct?: Mst_eventScalarFieldEnum | Mst_eventScalarFieldEnum[]
  }

  /**
   * Mst_event findMany
   */
  export type Mst_eventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event
     */
    select?: Mst_eventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event
     */
    omit?: Mst_eventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_eventInclude<ExtArgs> | null
    /**
     * Filter, which Mst_events to fetch.
     */
    where?: Mst_eventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_events to fetch.
     */
    orderBy?: Mst_eventOrderByWithRelationInput | Mst_eventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Mst_events.
     */
    cursor?: Mst_eventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_events.
     */
    skip?: number
    distinct?: Mst_eventScalarFieldEnum | Mst_eventScalarFieldEnum[]
  }

  /**
   * Mst_event create
   */
  export type Mst_eventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event
     */
    select?: Mst_eventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event
     */
    omit?: Mst_eventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_eventInclude<ExtArgs> | null
    /**
     * The data needed to create a Mst_event.
     */
    data: XOR<Mst_eventCreateInput, Mst_eventUncheckedCreateInput>
  }

  /**
   * Mst_event createMany
   */
  export type Mst_eventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Mst_events.
     */
    data: Mst_eventCreateManyInput | Mst_eventCreateManyInput[]
  }

  /**
   * Mst_event createManyAndReturn
   */
  export type Mst_eventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event
     */
    select?: Mst_eventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event
     */
    omit?: Mst_eventOmit<ExtArgs> | null
    /**
     * The data used to create many Mst_events.
     */
    data: Mst_eventCreateManyInput | Mst_eventCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_eventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Mst_event update
   */
  export type Mst_eventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event
     */
    select?: Mst_eventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event
     */
    omit?: Mst_eventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_eventInclude<ExtArgs> | null
    /**
     * The data needed to update a Mst_event.
     */
    data: XOR<Mst_eventUpdateInput, Mst_eventUncheckedUpdateInput>
    /**
     * Choose, which Mst_event to update.
     */
    where: Mst_eventWhereUniqueInput
  }

  /**
   * Mst_event updateMany
   */
  export type Mst_eventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Mst_events.
     */
    data: XOR<Mst_eventUpdateManyMutationInput, Mst_eventUncheckedUpdateManyInput>
    /**
     * Filter which Mst_events to update
     */
    where?: Mst_eventWhereInput
    /**
     * Limit how many Mst_events to update.
     */
    limit?: number
  }

  /**
   * Mst_event updateManyAndReturn
   */
  export type Mst_eventUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event
     */
    select?: Mst_eventSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event
     */
    omit?: Mst_eventOmit<ExtArgs> | null
    /**
     * The data used to update Mst_events.
     */
    data: XOR<Mst_eventUpdateManyMutationInput, Mst_eventUncheckedUpdateManyInput>
    /**
     * Filter which Mst_events to update
     */
    where?: Mst_eventWhereInput
    /**
     * Limit how many Mst_events to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_eventIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Mst_event upsert
   */
  export type Mst_eventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event
     */
    select?: Mst_eventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event
     */
    omit?: Mst_eventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_eventInclude<ExtArgs> | null
    /**
     * The filter to search for the Mst_event to update in case it exists.
     */
    where: Mst_eventWhereUniqueInput
    /**
     * In case the Mst_event found by the `where` argument doesn't exist, create a new Mst_event with this data.
     */
    create: XOR<Mst_eventCreateInput, Mst_eventUncheckedCreateInput>
    /**
     * In case the Mst_event was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Mst_eventUpdateInput, Mst_eventUncheckedUpdateInput>
  }

  /**
   * Mst_event delete
   */
  export type Mst_eventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event
     */
    select?: Mst_eventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event
     */
    omit?: Mst_eventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_eventInclude<ExtArgs> | null
    /**
     * Filter which Mst_event to delete.
     */
    where: Mst_eventWhereUniqueInput
  }

  /**
   * Mst_event deleteMany
   */
  export type Mst_eventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mst_events to delete
     */
    where?: Mst_eventWhereInput
    /**
     * Limit how many Mst_events to delete.
     */
    limit?: number
  }

  /**
   * Mst_event.registrations
   */
  export type Mst_event$registrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ind_event_registration
     */
    select?: Ind_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ind_event_registration
     */
    omit?: Ind_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ind_event_registrationInclude<ExtArgs> | null
    where?: Ind_event_registrationWhereInput
    orderBy?: Ind_event_registrationOrderByWithRelationInput | Ind_event_registrationOrderByWithRelationInput[]
    cursor?: Ind_event_registrationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ind_event_registrationScalarFieldEnum | Ind_event_registrationScalarFieldEnum[]
  }

  /**
   * Mst_event.team_registrations
   */
  export type Mst_event$team_registrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_event_registration
     */
    select?: Team_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Team_event_registration
     */
    omit?: Team_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Team_event_registrationInclude<ExtArgs> | null
    where?: Team_event_registrationWhereInput
    orderBy?: Team_event_registrationOrderByWithRelationInput | Team_event_registrationOrderByWithRelationInput[]
    cursor?: Team_event_registrationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Team_event_registrationScalarFieldEnum | Team_event_registrationScalarFieldEnum[]
  }

  /**
   * Mst_event.schedules
   */
  export type Mst_event$schedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_schedule
     */
    select?: event_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_schedule
     */
    omit?: event_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_scheduleInclude<ExtArgs> | null
    where?: event_scheduleWhereInput
    orderBy?: event_scheduleOrderByWithRelationInput | event_scheduleOrderByWithRelationInput[]
    cursor?: event_scheduleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Event_scheduleScalarFieldEnum | Event_scheduleScalarFieldEnum[]
  }

  /**
   * Mst_event without action
   */
  export type Mst_eventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event
     */
    select?: Mst_eventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event
     */
    omit?: Mst_eventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_eventInclude<ExtArgs> | null
  }


  /**
   * Model Mst_event_result
   */

  export type AggregateMst_event_result = {
    _count: Mst_event_resultCountAggregateOutputType | null
    _avg: Mst_event_resultAvgAggregateOutputType | null
    _sum: Mst_event_resultSumAggregateOutputType | null
    _min: Mst_event_resultMinAggregateOutputType | null
    _max: Mst_event_resultMaxAggregateOutputType | null
  }

  export type Mst_event_resultAvgAggregateOutputType = {
    id: number | null
    event_type_id: number | null
    points: number | null
  }

  export type Mst_event_resultSumAggregateOutputType = {
    id: number | null
    event_type_id: number | null
    points: number | null
  }

  export type Mst_event_resultMinAggregateOutputType = {
    id: number | null
    event_type_id: number | null
    rank: $Enums.Rank | null
    points: number | null
  }

  export type Mst_event_resultMaxAggregateOutputType = {
    id: number | null
    event_type_id: number | null
    rank: $Enums.Rank | null
    points: number | null
  }

  export type Mst_event_resultCountAggregateOutputType = {
    id: number
    event_type_id: number
    rank: number
    points: number
    _all: number
  }


  export type Mst_event_resultAvgAggregateInputType = {
    id?: true
    event_type_id?: true
    points?: true
  }

  export type Mst_event_resultSumAggregateInputType = {
    id?: true
    event_type_id?: true
    points?: true
  }

  export type Mst_event_resultMinAggregateInputType = {
    id?: true
    event_type_id?: true
    rank?: true
    points?: true
  }

  export type Mst_event_resultMaxAggregateInputType = {
    id?: true
    event_type_id?: true
    rank?: true
    points?: true
  }

  export type Mst_event_resultCountAggregateInputType = {
    id?: true
    event_type_id?: true
    rank?: true
    points?: true
    _all?: true
  }

  export type Mst_event_resultAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mst_event_result to aggregate.
     */
    where?: Mst_event_resultWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_event_results to fetch.
     */
    orderBy?: Mst_event_resultOrderByWithRelationInput | Mst_event_resultOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Mst_event_resultWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_event_results from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_event_results.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Mst_event_results
    **/
    _count?: true | Mst_event_resultCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Mst_event_resultAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Mst_event_resultSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mst_event_resultMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mst_event_resultMaxAggregateInputType
  }

  export type GetMst_event_resultAggregateType<T extends Mst_event_resultAggregateArgs> = {
        [P in keyof T & keyof AggregateMst_event_result]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMst_event_result[P]>
      : GetScalarType<T[P], AggregateMst_event_result[P]>
  }




  export type Mst_event_resultGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Mst_event_resultWhereInput
    orderBy?: Mst_event_resultOrderByWithAggregationInput | Mst_event_resultOrderByWithAggregationInput[]
    by: Mst_event_resultScalarFieldEnum[] | Mst_event_resultScalarFieldEnum
    having?: Mst_event_resultScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mst_event_resultCountAggregateInputType | true
    _avg?: Mst_event_resultAvgAggregateInputType
    _sum?: Mst_event_resultSumAggregateInputType
    _min?: Mst_event_resultMinAggregateInputType
    _max?: Mst_event_resultMaxAggregateInputType
  }

  export type Mst_event_resultGroupByOutputType = {
    id: number
    event_type_id: number
    rank: $Enums.Rank
    points: number
    _count: Mst_event_resultCountAggregateOutputType | null
    _avg: Mst_event_resultAvgAggregateOutputType | null
    _sum: Mst_event_resultSumAggregateOutputType | null
    _min: Mst_event_resultMinAggregateOutputType | null
    _max: Mst_event_resultMaxAggregateOutputType | null
  }

  type GetMst_event_resultGroupByPayload<T extends Mst_event_resultGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mst_event_resultGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mst_event_resultGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mst_event_resultGroupByOutputType[P]>
            : GetScalarType<T[P], Mst_event_resultGroupByOutputType[P]>
        }
      >
    >


  export type Mst_event_resultSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    event_type_id?: boolean
    rank?: boolean
    points?: boolean
    event_type?: boolean | Mst_event_typeDefaultArgs<ExtArgs>
    ind_event_registrations?: boolean | Mst_event_result$ind_event_registrationsArgs<ExtArgs>
    team_event_registrations?: boolean | Mst_event_result$team_event_registrationsArgs<ExtArgs>
    _count?: boolean | Mst_event_resultCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mst_event_result"]>

  export type Mst_event_resultSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    event_type_id?: boolean
    rank?: boolean
    points?: boolean
    event_type?: boolean | Mst_event_typeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mst_event_result"]>

  export type Mst_event_resultSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    event_type_id?: boolean
    rank?: boolean
    points?: boolean
    event_type?: boolean | Mst_event_typeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mst_event_result"]>

  export type Mst_event_resultSelectScalar = {
    id?: boolean
    event_type_id?: boolean
    rank?: boolean
    points?: boolean
  }

  export type Mst_event_resultOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "event_type_id" | "rank" | "points", ExtArgs["result"]["mst_event_result"]>
  export type Mst_event_resultInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event_type?: boolean | Mst_event_typeDefaultArgs<ExtArgs>
    ind_event_registrations?: boolean | Mst_event_result$ind_event_registrationsArgs<ExtArgs>
    team_event_registrations?: boolean | Mst_event_result$team_event_registrationsArgs<ExtArgs>
    _count?: boolean | Mst_event_resultCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Mst_event_resultIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event_type?: boolean | Mst_event_typeDefaultArgs<ExtArgs>
  }
  export type Mst_event_resultIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event_type?: boolean | Mst_event_typeDefaultArgs<ExtArgs>
  }

  export type $Mst_event_resultPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Mst_event_result"
    objects: {
      event_type: Prisma.$Mst_event_typePayload<ExtArgs>
      ind_event_registrations: Prisma.$Ind_event_registrationPayload<ExtArgs>[]
      team_event_registrations: Prisma.$Team_event_registrationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      event_type_id: number
      rank: $Enums.Rank
      points: number
    }, ExtArgs["result"]["mst_event_result"]>
    composites: {}
  }

  type Mst_event_resultGetPayload<S extends boolean | null | undefined | Mst_event_resultDefaultArgs> = $Result.GetResult<Prisma.$Mst_event_resultPayload, S>

  type Mst_event_resultCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Mst_event_resultFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mst_event_resultCountAggregateInputType | true
    }

  export interface Mst_event_resultDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mst_event_result'], meta: { name: 'Mst_event_result' } }
    /**
     * Find zero or one Mst_event_result that matches the filter.
     * @param {Mst_event_resultFindUniqueArgs} args - Arguments to find a Mst_event_result
     * @example
     * // Get one Mst_event_result
     * const mst_event_result = await prisma.mst_event_result.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Mst_event_resultFindUniqueArgs>(args: SelectSubset<T, Mst_event_resultFindUniqueArgs<ExtArgs>>): Prisma__Mst_event_resultClient<$Result.GetResult<Prisma.$Mst_event_resultPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mst_event_result that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Mst_event_resultFindUniqueOrThrowArgs} args - Arguments to find a Mst_event_result
     * @example
     * // Get one Mst_event_result
     * const mst_event_result = await prisma.mst_event_result.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Mst_event_resultFindUniqueOrThrowArgs>(args: SelectSubset<T, Mst_event_resultFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Mst_event_resultClient<$Result.GetResult<Prisma.$Mst_event_resultPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mst_event_result that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_event_resultFindFirstArgs} args - Arguments to find a Mst_event_result
     * @example
     * // Get one Mst_event_result
     * const mst_event_result = await prisma.mst_event_result.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Mst_event_resultFindFirstArgs>(args?: SelectSubset<T, Mst_event_resultFindFirstArgs<ExtArgs>>): Prisma__Mst_event_resultClient<$Result.GetResult<Prisma.$Mst_event_resultPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mst_event_result that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_event_resultFindFirstOrThrowArgs} args - Arguments to find a Mst_event_result
     * @example
     * // Get one Mst_event_result
     * const mst_event_result = await prisma.mst_event_result.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Mst_event_resultFindFirstOrThrowArgs>(args?: SelectSubset<T, Mst_event_resultFindFirstOrThrowArgs<ExtArgs>>): Prisma__Mst_event_resultClient<$Result.GetResult<Prisma.$Mst_event_resultPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mst_event_results that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_event_resultFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mst_event_results
     * const mst_event_results = await prisma.mst_event_result.findMany()
     * 
     * // Get first 10 Mst_event_results
     * const mst_event_results = await prisma.mst_event_result.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mst_event_resultWithIdOnly = await prisma.mst_event_result.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Mst_event_resultFindManyArgs>(args?: SelectSubset<T, Mst_event_resultFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_event_resultPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mst_event_result.
     * @param {Mst_event_resultCreateArgs} args - Arguments to create a Mst_event_result.
     * @example
     * // Create one Mst_event_result
     * const Mst_event_result = await prisma.mst_event_result.create({
     *   data: {
     *     // ... data to create a Mst_event_result
     *   }
     * })
     * 
     */
    create<T extends Mst_event_resultCreateArgs>(args: SelectSubset<T, Mst_event_resultCreateArgs<ExtArgs>>): Prisma__Mst_event_resultClient<$Result.GetResult<Prisma.$Mst_event_resultPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mst_event_results.
     * @param {Mst_event_resultCreateManyArgs} args - Arguments to create many Mst_event_results.
     * @example
     * // Create many Mst_event_results
     * const mst_event_result = await prisma.mst_event_result.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Mst_event_resultCreateManyArgs>(args?: SelectSubset<T, Mst_event_resultCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mst_event_results and returns the data saved in the database.
     * @param {Mst_event_resultCreateManyAndReturnArgs} args - Arguments to create many Mst_event_results.
     * @example
     * // Create many Mst_event_results
     * const mst_event_result = await prisma.mst_event_result.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mst_event_results and only return the `id`
     * const mst_event_resultWithIdOnly = await prisma.mst_event_result.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Mst_event_resultCreateManyAndReturnArgs>(args?: SelectSubset<T, Mst_event_resultCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_event_resultPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mst_event_result.
     * @param {Mst_event_resultDeleteArgs} args - Arguments to delete one Mst_event_result.
     * @example
     * // Delete one Mst_event_result
     * const Mst_event_result = await prisma.mst_event_result.delete({
     *   where: {
     *     // ... filter to delete one Mst_event_result
     *   }
     * })
     * 
     */
    delete<T extends Mst_event_resultDeleteArgs>(args: SelectSubset<T, Mst_event_resultDeleteArgs<ExtArgs>>): Prisma__Mst_event_resultClient<$Result.GetResult<Prisma.$Mst_event_resultPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mst_event_result.
     * @param {Mst_event_resultUpdateArgs} args - Arguments to update one Mst_event_result.
     * @example
     * // Update one Mst_event_result
     * const mst_event_result = await prisma.mst_event_result.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Mst_event_resultUpdateArgs>(args: SelectSubset<T, Mst_event_resultUpdateArgs<ExtArgs>>): Prisma__Mst_event_resultClient<$Result.GetResult<Prisma.$Mst_event_resultPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mst_event_results.
     * @param {Mst_event_resultDeleteManyArgs} args - Arguments to filter Mst_event_results to delete.
     * @example
     * // Delete a few Mst_event_results
     * const { count } = await prisma.mst_event_result.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Mst_event_resultDeleteManyArgs>(args?: SelectSubset<T, Mst_event_resultDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mst_event_results.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_event_resultUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mst_event_results
     * const mst_event_result = await prisma.mst_event_result.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Mst_event_resultUpdateManyArgs>(args: SelectSubset<T, Mst_event_resultUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mst_event_results and returns the data updated in the database.
     * @param {Mst_event_resultUpdateManyAndReturnArgs} args - Arguments to update many Mst_event_results.
     * @example
     * // Update many Mst_event_results
     * const mst_event_result = await prisma.mst_event_result.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mst_event_results and only return the `id`
     * const mst_event_resultWithIdOnly = await prisma.mst_event_result.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Mst_event_resultUpdateManyAndReturnArgs>(args: SelectSubset<T, Mst_event_resultUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_event_resultPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mst_event_result.
     * @param {Mst_event_resultUpsertArgs} args - Arguments to update or create a Mst_event_result.
     * @example
     * // Update or create a Mst_event_result
     * const mst_event_result = await prisma.mst_event_result.upsert({
     *   create: {
     *     // ... data to create a Mst_event_result
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mst_event_result we want to update
     *   }
     * })
     */
    upsert<T extends Mst_event_resultUpsertArgs>(args: SelectSubset<T, Mst_event_resultUpsertArgs<ExtArgs>>): Prisma__Mst_event_resultClient<$Result.GetResult<Prisma.$Mst_event_resultPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mst_event_results.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_event_resultCountArgs} args - Arguments to filter Mst_event_results to count.
     * @example
     * // Count the number of Mst_event_results
     * const count = await prisma.mst_event_result.count({
     *   where: {
     *     // ... the filter for the Mst_event_results we want to count
     *   }
     * })
    **/
    count<T extends Mst_event_resultCountArgs>(
      args?: Subset<T, Mst_event_resultCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mst_event_resultCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mst_event_result.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_event_resultAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mst_event_resultAggregateArgs>(args: Subset<T, Mst_event_resultAggregateArgs>): Prisma.PrismaPromise<GetMst_event_resultAggregateType<T>>

    /**
     * Group by Mst_event_result.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_event_resultGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Mst_event_resultGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Mst_event_resultGroupByArgs['orderBy'] }
        : { orderBy?: Mst_event_resultGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Mst_event_resultGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMst_event_resultGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Mst_event_result model
   */
  readonly fields: Mst_event_resultFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Mst_event_result.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Mst_event_resultClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    event_type<T extends Mst_event_typeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Mst_event_typeDefaultArgs<ExtArgs>>): Prisma__Mst_event_typeClient<$Result.GetResult<Prisma.$Mst_event_typePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ind_event_registrations<T extends Mst_event_result$ind_event_registrationsArgs<ExtArgs> = {}>(args?: Subset<T, Mst_event_result$ind_event_registrationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Ind_event_registrationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    team_event_registrations<T extends Mst_event_result$team_event_registrationsArgs<ExtArgs> = {}>(args?: Subset<T, Mst_event_result$team_event_registrationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Team_event_registrationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Mst_event_result model
   */
  interface Mst_event_resultFieldRefs {
    readonly id: FieldRef<"Mst_event_result", 'Int'>
    readonly event_type_id: FieldRef<"Mst_event_result", 'Int'>
    readonly rank: FieldRef<"Mst_event_result", 'Rank'>
    readonly points: FieldRef<"Mst_event_result", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Mst_event_result findUnique
   */
  export type Mst_event_resultFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_result
     */
    select?: Mst_event_resultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_result
     */
    omit?: Mst_event_resultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_resultInclude<ExtArgs> | null
    /**
     * Filter, which Mst_event_result to fetch.
     */
    where: Mst_event_resultWhereUniqueInput
  }

  /**
   * Mst_event_result findUniqueOrThrow
   */
  export type Mst_event_resultFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_result
     */
    select?: Mst_event_resultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_result
     */
    omit?: Mst_event_resultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_resultInclude<ExtArgs> | null
    /**
     * Filter, which Mst_event_result to fetch.
     */
    where: Mst_event_resultWhereUniqueInput
  }

  /**
   * Mst_event_result findFirst
   */
  export type Mst_event_resultFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_result
     */
    select?: Mst_event_resultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_result
     */
    omit?: Mst_event_resultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_resultInclude<ExtArgs> | null
    /**
     * Filter, which Mst_event_result to fetch.
     */
    where?: Mst_event_resultWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_event_results to fetch.
     */
    orderBy?: Mst_event_resultOrderByWithRelationInput | Mst_event_resultOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mst_event_results.
     */
    cursor?: Mst_event_resultWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_event_results from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_event_results.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mst_event_results.
     */
    distinct?: Mst_event_resultScalarFieldEnum | Mst_event_resultScalarFieldEnum[]
  }

  /**
   * Mst_event_result findFirstOrThrow
   */
  export type Mst_event_resultFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_result
     */
    select?: Mst_event_resultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_result
     */
    omit?: Mst_event_resultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_resultInclude<ExtArgs> | null
    /**
     * Filter, which Mst_event_result to fetch.
     */
    where?: Mst_event_resultWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_event_results to fetch.
     */
    orderBy?: Mst_event_resultOrderByWithRelationInput | Mst_event_resultOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mst_event_results.
     */
    cursor?: Mst_event_resultWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_event_results from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_event_results.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mst_event_results.
     */
    distinct?: Mst_event_resultScalarFieldEnum | Mst_event_resultScalarFieldEnum[]
  }

  /**
   * Mst_event_result findMany
   */
  export type Mst_event_resultFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_result
     */
    select?: Mst_event_resultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_result
     */
    omit?: Mst_event_resultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_resultInclude<ExtArgs> | null
    /**
     * Filter, which Mst_event_results to fetch.
     */
    where?: Mst_event_resultWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_event_results to fetch.
     */
    orderBy?: Mst_event_resultOrderByWithRelationInput | Mst_event_resultOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Mst_event_results.
     */
    cursor?: Mst_event_resultWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_event_results from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_event_results.
     */
    skip?: number
    distinct?: Mst_event_resultScalarFieldEnum | Mst_event_resultScalarFieldEnum[]
  }

  /**
   * Mst_event_result create
   */
  export type Mst_event_resultCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_result
     */
    select?: Mst_event_resultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_result
     */
    omit?: Mst_event_resultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_resultInclude<ExtArgs> | null
    /**
     * The data needed to create a Mst_event_result.
     */
    data: XOR<Mst_event_resultCreateInput, Mst_event_resultUncheckedCreateInput>
  }

  /**
   * Mst_event_result createMany
   */
  export type Mst_event_resultCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Mst_event_results.
     */
    data: Mst_event_resultCreateManyInput | Mst_event_resultCreateManyInput[]
  }

  /**
   * Mst_event_result createManyAndReturn
   */
  export type Mst_event_resultCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_result
     */
    select?: Mst_event_resultSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_result
     */
    omit?: Mst_event_resultOmit<ExtArgs> | null
    /**
     * The data used to create many Mst_event_results.
     */
    data: Mst_event_resultCreateManyInput | Mst_event_resultCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_resultIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Mst_event_result update
   */
  export type Mst_event_resultUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_result
     */
    select?: Mst_event_resultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_result
     */
    omit?: Mst_event_resultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_resultInclude<ExtArgs> | null
    /**
     * The data needed to update a Mst_event_result.
     */
    data: XOR<Mst_event_resultUpdateInput, Mst_event_resultUncheckedUpdateInput>
    /**
     * Choose, which Mst_event_result to update.
     */
    where: Mst_event_resultWhereUniqueInput
  }

  /**
   * Mst_event_result updateMany
   */
  export type Mst_event_resultUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Mst_event_results.
     */
    data: XOR<Mst_event_resultUpdateManyMutationInput, Mst_event_resultUncheckedUpdateManyInput>
    /**
     * Filter which Mst_event_results to update
     */
    where?: Mst_event_resultWhereInput
    /**
     * Limit how many Mst_event_results to update.
     */
    limit?: number
  }

  /**
   * Mst_event_result updateManyAndReturn
   */
  export type Mst_event_resultUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_result
     */
    select?: Mst_event_resultSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_result
     */
    omit?: Mst_event_resultOmit<ExtArgs> | null
    /**
     * The data used to update Mst_event_results.
     */
    data: XOR<Mst_event_resultUpdateManyMutationInput, Mst_event_resultUncheckedUpdateManyInput>
    /**
     * Filter which Mst_event_results to update
     */
    where?: Mst_event_resultWhereInput
    /**
     * Limit how many Mst_event_results to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_resultIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Mst_event_result upsert
   */
  export type Mst_event_resultUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_result
     */
    select?: Mst_event_resultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_result
     */
    omit?: Mst_event_resultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_resultInclude<ExtArgs> | null
    /**
     * The filter to search for the Mst_event_result to update in case it exists.
     */
    where: Mst_event_resultWhereUniqueInput
    /**
     * In case the Mst_event_result found by the `where` argument doesn't exist, create a new Mst_event_result with this data.
     */
    create: XOR<Mst_event_resultCreateInput, Mst_event_resultUncheckedCreateInput>
    /**
     * In case the Mst_event_result was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Mst_event_resultUpdateInput, Mst_event_resultUncheckedUpdateInput>
  }

  /**
   * Mst_event_result delete
   */
  export type Mst_event_resultDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_result
     */
    select?: Mst_event_resultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_result
     */
    omit?: Mst_event_resultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_resultInclude<ExtArgs> | null
    /**
     * Filter which Mst_event_result to delete.
     */
    where: Mst_event_resultWhereUniqueInput
  }

  /**
   * Mst_event_result deleteMany
   */
  export type Mst_event_resultDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mst_event_results to delete
     */
    where?: Mst_event_resultWhereInput
    /**
     * Limit how many Mst_event_results to delete.
     */
    limit?: number
  }

  /**
   * Mst_event_result.ind_event_registrations
   */
  export type Mst_event_result$ind_event_registrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ind_event_registration
     */
    select?: Ind_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ind_event_registration
     */
    omit?: Ind_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ind_event_registrationInclude<ExtArgs> | null
    where?: Ind_event_registrationWhereInput
    orderBy?: Ind_event_registrationOrderByWithRelationInput | Ind_event_registrationOrderByWithRelationInput[]
    cursor?: Ind_event_registrationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ind_event_registrationScalarFieldEnum | Ind_event_registrationScalarFieldEnum[]
  }

  /**
   * Mst_event_result.team_event_registrations
   */
  export type Mst_event_result$team_event_registrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_event_registration
     */
    select?: Team_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Team_event_registration
     */
    omit?: Team_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Team_event_registrationInclude<ExtArgs> | null
    where?: Team_event_registrationWhereInput
    orderBy?: Team_event_registrationOrderByWithRelationInput | Team_event_registrationOrderByWithRelationInput[]
    cursor?: Team_event_registrationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Team_event_registrationScalarFieldEnum | Team_event_registrationScalarFieldEnum[]
  }

  /**
   * Mst_event_result without action
   */
  export type Mst_event_resultDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_result
     */
    select?: Mst_event_resultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_result
     */
    omit?: Mst_event_resultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_resultInclude<ExtArgs> | null
  }


  /**
   * Model Mst_event_type
   */

  export type AggregateMst_event_type = {
    _count: Mst_event_typeCountAggregateOutputType | null
    _avg: Mst_event_typeAvgAggregateOutputType | null
    _sum: Mst_event_typeSumAggregateOutputType | null
    _min: Mst_event_typeMinAggregateOutputType | null
    _max: Mst_event_typeMaxAggregateOutputType | null
  }

  export type Mst_event_typeAvgAggregateOutputType = {
    id: number | null
    participant_count: number | null
  }

  export type Mst_event_typeSumAggregateOutputType = {
    id: number | null
    participant_count: number | null
  }

  export type Mst_event_typeMinAggregateOutputType = {
    id: number | null
    name: string | null
    type: $Enums.EventType | null
    participant_count: number | null
  }

  export type Mst_event_typeMaxAggregateOutputType = {
    id: number | null
    name: string | null
    type: $Enums.EventType | null
    participant_count: number | null
  }

  export type Mst_event_typeCountAggregateOutputType = {
    id: number
    name: number
    type: number
    participant_count: number
    _all: number
  }


  export type Mst_event_typeAvgAggregateInputType = {
    id?: true
    participant_count?: true
  }

  export type Mst_event_typeSumAggregateInputType = {
    id?: true
    participant_count?: true
  }

  export type Mst_event_typeMinAggregateInputType = {
    id?: true
    name?: true
    type?: true
    participant_count?: true
  }

  export type Mst_event_typeMaxAggregateInputType = {
    id?: true
    name?: true
    type?: true
    participant_count?: true
  }

  export type Mst_event_typeCountAggregateInputType = {
    id?: true
    name?: true
    type?: true
    participant_count?: true
    _all?: true
  }

  export type Mst_event_typeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mst_event_type to aggregate.
     */
    where?: Mst_event_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_event_types to fetch.
     */
    orderBy?: Mst_event_typeOrderByWithRelationInput | Mst_event_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Mst_event_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_event_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_event_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Mst_event_types
    **/
    _count?: true | Mst_event_typeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Mst_event_typeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Mst_event_typeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mst_event_typeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mst_event_typeMaxAggregateInputType
  }

  export type GetMst_event_typeAggregateType<T extends Mst_event_typeAggregateArgs> = {
        [P in keyof T & keyof AggregateMst_event_type]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMst_event_type[P]>
      : GetScalarType<T[P], AggregateMst_event_type[P]>
  }




  export type Mst_event_typeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Mst_event_typeWhereInput
    orderBy?: Mst_event_typeOrderByWithAggregationInput | Mst_event_typeOrderByWithAggregationInput[]
    by: Mst_event_typeScalarFieldEnum[] | Mst_event_typeScalarFieldEnum
    having?: Mst_event_typeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mst_event_typeCountAggregateInputType | true
    _avg?: Mst_event_typeAvgAggregateInputType
    _sum?: Mst_event_typeSumAggregateInputType
    _min?: Mst_event_typeMinAggregateInputType
    _max?: Mst_event_typeMaxAggregateInputType
  }

  export type Mst_event_typeGroupByOutputType = {
    id: number
    name: string
    type: $Enums.EventType
    participant_count: number
    _count: Mst_event_typeCountAggregateOutputType | null
    _avg: Mst_event_typeAvgAggregateOutputType | null
    _sum: Mst_event_typeSumAggregateOutputType | null
    _min: Mst_event_typeMinAggregateOutputType | null
    _max: Mst_event_typeMaxAggregateOutputType | null
  }

  type GetMst_event_typeGroupByPayload<T extends Mst_event_typeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mst_event_typeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mst_event_typeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mst_event_typeGroupByOutputType[P]>
            : GetScalarType<T[P], Mst_event_typeGroupByOutputType[P]>
        }
      >
    >


  export type Mst_event_typeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    participant_count?: boolean
    events?: boolean | Mst_event_type$eventsArgs<ExtArgs>
    results?: boolean | Mst_event_type$resultsArgs<ExtArgs>
    _count?: boolean | Mst_event_typeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mst_event_type"]>

  export type Mst_event_typeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    participant_count?: boolean
  }, ExtArgs["result"]["mst_event_type"]>

  export type Mst_event_typeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    participant_count?: boolean
  }, ExtArgs["result"]["mst_event_type"]>

  export type Mst_event_typeSelectScalar = {
    id?: boolean
    name?: boolean
    type?: boolean
    participant_count?: boolean
  }

  export type Mst_event_typeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "type" | "participant_count", ExtArgs["result"]["mst_event_type"]>
  export type Mst_event_typeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    events?: boolean | Mst_event_type$eventsArgs<ExtArgs>
    results?: boolean | Mst_event_type$resultsArgs<ExtArgs>
    _count?: boolean | Mst_event_typeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Mst_event_typeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type Mst_event_typeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $Mst_event_typePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Mst_event_type"
    objects: {
      events: Prisma.$Mst_eventPayload<ExtArgs>[]
      results: Prisma.$Mst_event_resultPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      type: $Enums.EventType
      participant_count: number
    }, ExtArgs["result"]["mst_event_type"]>
    composites: {}
  }

  type Mst_event_typeGetPayload<S extends boolean | null | undefined | Mst_event_typeDefaultArgs> = $Result.GetResult<Prisma.$Mst_event_typePayload, S>

  type Mst_event_typeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Mst_event_typeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mst_event_typeCountAggregateInputType | true
    }

  export interface Mst_event_typeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mst_event_type'], meta: { name: 'Mst_event_type' } }
    /**
     * Find zero or one Mst_event_type that matches the filter.
     * @param {Mst_event_typeFindUniqueArgs} args - Arguments to find a Mst_event_type
     * @example
     * // Get one Mst_event_type
     * const mst_event_type = await prisma.mst_event_type.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Mst_event_typeFindUniqueArgs>(args: SelectSubset<T, Mst_event_typeFindUniqueArgs<ExtArgs>>): Prisma__Mst_event_typeClient<$Result.GetResult<Prisma.$Mst_event_typePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mst_event_type that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Mst_event_typeFindUniqueOrThrowArgs} args - Arguments to find a Mst_event_type
     * @example
     * // Get one Mst_event_type
     * const mst_event_type = await prisma.mst_event_type.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Mst_event_typeFindUniqueOrThrowArgs>(args: SelectSubset<T, Mst_event_typeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Mst_event_typeClient<$Result.GetResult<Prisma.$Mst_event_typePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mst_event_type that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_event_typeFindFirstArgs} args - Arguments to find a Mst_event_type
     * @example
     * // Get one Mst_event_type
     * const mst_event_type = await prisma.mst_event_type.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Mst_event_typeFindFirstArgs>(args?: SelectSubset<T, Mst_event_typeFindFirstArgs<ExtArgs>>): Prisma__Mst_event_typeClient<$Result.GetResult<Prisma.$Mst_event_typePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mst_event_type that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_event_typeFindFirstOrThrowArgs} args - Arguments to find a Mst_event_type
     * @example
     * // Get one Mst_event_type
     * const mst_event_type = await prisma.mst_event_type.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Mst_event_typeFindFirstOrThrowArgs>(args?: SelectSubset<T, Mst_event_typeFindFirstOrThrowArgs<ExtArgs>>): Prisma__Mst_event_typeClient<$Result.GetResult<Prisma.$Mst_event_typePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mst_event_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_event_typeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mst_event_types
     * const mst_event_types = await prisma.mst_event_type.findMany()
     * 
     * // Get first 10 Mst_event_types
     * const mst_event_types = await prisma.mst_event_type.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mst_event_typeWithIdOnly = await prisma.mst_event_type.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Mst_event_typeFindManyArgs>(args?: SelectSubset<T, Mst_event_typeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_event_typePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mst_event_type.
     * @param {Mst_event_typeCreateArgs} args - Arguments to create a Mst_event_type.
     * @example
     * // Create one Mst_event_type
     * const Mst_event_type = await prisma.mst_event_type.create({
     *   data: {
     *     // ... data to create a Mst_event_type
     *   }
     * })
     * 
     */
    create<T extends Mst_event_typeCreateArgs>(args: SelectSubset<T, Mst_event_typeCreateArgs<ExtArgs>>): Prisma__Mst_event_typeClient<$Result.GetResult<Prisma.$Mst_event_typePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mst_event_types.
     * @param {Mst_event_typeCreateManyArgs} args - Arguments to create many Mst_event_types.
     * @example
     * // Create many Mst_event_types
     * const mst_event_type = await prisma.mst_event_type.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Mst_event_typeCreateManyArgs>(args?: SelectSubset<T, Mst_event_typeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mst_event_types and returns the data saved in the database.
     * @param {Mst_event_typeCreateManyAndReturnArgs} args - Arguments to create many Mst_event_types.
     * @example
     * // Create many Mst_event_types
     * const mst_event_type = await prisma.mst_event_type.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mst_event_types and only return the `id`
     * const mst_event_typeWithIdOnly = await prisma.mst_event_type.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Mst_event_typeCreateManyAndReturnArgs>(args?: SelectSubset<T, Mst_event_typeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_event_typePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mst_event_type.
     * @param {Mst_event_typeDeleteArgs} args - Arguments to delete one Mst_event_type.
     * @example
     * // Delete one Mst_event_type
     * const Mst_event_type = await prisma.mst_event_type.delete({
     *   where: {
     *     // ... filter to delete one Mst_event_type
     *   }
     * })
     * 
     */
    delete<T extends Mst_event_typeDeleteArgs>(args: SelectSubset<T, Mst_event_typeDeleteArgs<ExtArgs>>): Prisma__Mst_event_typeClient<$Result.GetResult<Prisma.$Mst_event_typePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mst_event_type.
     * @param {Mst_event_typeUpdateArgs} args - Arguments to update one Mst_event_type.
     * @example
     * // Update one Mst_event_type
     * const mst_event_type = await prisma.mst_event_type.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Mst_event_typeUpdateArgs>(args: SelectSubset<T, Mst_event_typeUpdateArgs<ExtArgs>>): Prisma__Mst_event_typeClient<$Result.GetResult<Prisma.$Mst_event_typePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mst_event_types.
     * @param {Mst_event_typeDeleteManyArgs} args - Arguments to filter Mst_event_types to delete.
     * @example
     * // Delete a few Mst_event_types
     * const { count } = await prisma.mst_event_type.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Mst_event_typeDeleteManyArgs>(args?: SelectSubset<T, Mst_event_typeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mst_event_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_event_typeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mst_event_types
     * const mst_event_type = await prisma.mst_event_type.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Mst_event_typeUpdateManyArgs>(args: SelectSubset<T, Mst_event_typeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mst_event_types and returns the data updated in the database.
     * @param {Mst_event_typeUpdateManyAndReturnArgs} args - Arguments to update many Mst_event_types.
     * @example
     * // Update many Mst_event_types
     * const mst_event_type = await prisma.mst_event_type.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mst_event_types and only return the `id`
     * const mst_event_typeWithIdOnly = await prisma.mst_event_type.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Mst_event_typeUpdateManyAndReturnArgs>(args: SelectSubset<T, Mst_event_typeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_event_typePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mst_event_type.
     * @param {Mst_event_typeUpsertArgs} args - Arguments to update or create a Mst_event_type.
     * @example
     * // Update or create a Mst_event_type
     * const mst_event_type = await prisma.mst_event_type.upsert({
     *   create: {
     *     // ... data to create a Mst_event_type
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mst_event_type we want to update
     *   }
     * })
     */
    upsert<T extends Mst_event_typeUpsertArgs>(args: SelectSubset<T, Mst_event_typeUpsertArgs<ExtArgs>>): Prisma__Mst_event_typeClient<$Result.GetResult<Prisma.$Mst_event_typePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mst_event_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_event_typeCountArgs} args - Arguments to filter Mst_event_types to count.
     * @example
     * // Count the number of Mst_event_types
     * const count = await prisma.mst_event_type.count({
     *   where: {
     *     // ... the filter for the Mst_event_types we want to count
     *   }
     * })
    **/
    count<T extends Mst_event_typeCountArgs>(
      args?: Subset<T, Mst_event_typeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mst_event_typeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mst_event_type.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_event_typeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mst_event_typeAggregateArgs>(args: Subset<T, Mst_event_typeAggregateArgs>): Prisma.PrismaPromise<GetMst_event_typeAggregateType<T>>

    /**
     * Group by Mst_event_type.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_event_typeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Mst_event_typeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Mst_event_typeGroupByArgs['orderBy'] }
        : { orderBy?: Mst_event_typeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Mst_event_typeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMst_event_typeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Mst_event_type model
   */
  readonly fields: Mst_event_typeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Mst_event_type.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Mst_event_typeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    events<T extends Mst_event_type$eventsArgs<ExtArgs> = {}>(args?: Subset<T, Mst_event_type$eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    results<T extends Mst_event_type$resultsArgs<ExtArgs> = {}>(args?: Subset<T, Mst_event_type$resultsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_event_resultPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Mst_event_type model
   */
  interface Mst_event_typeFieldRefs {
    readonly id: FieldRef<"Mst_event_type", 'Int'>
    readonly name: FieldRef<"Mst_event_type", 'String'>
    readonly type: FieldRef<"Mst_event_type", 'EventType'>
    readonly participant_count: FieldRef<"Mst_event_type", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Mst_event_type findUnique
   */
  export type Mst_event_typeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_type
     */
    select?: Mst_event_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_type
     */
    omit?: Mst_event_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_typeInclude<ExtArgs> | null
    /**
     * Filter, which Mst_event_type to fetch.
     */
    where: Mst_event_typeWhereUniqueInput
  }

  /**
   * Mst_event_type findUniqueOrThrow
   */
  export type Mst_event_typeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_type
     */
    select?: Mst_event_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_type
     */
    omit?: Mst_event_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_typeInclude<ExtArgs> | null
    /**
     * Filter, which Mst_event_type to fetch.
     */
    where: Mst_event_typeWhereUniqueInput
  }

  /**
   * Mst_event_type findFirst
   */
  export type Mst_event_typeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_type
     */
    select?: Mst_event_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_type
     */
    omit?: Mst_event_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_typeInclude<ExtArgs> | null
    /**
     * Filter, which Mst_event_type to fetch.
     */
    where?: Mst_event_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_event_types to fetch.
     */
    orderBy?: Mst_event_typeOrderByWithRelationInput | Mst_event_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mst_event_types.
     */
    cursor?: Mst_event_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_event_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_event_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mst_event_types.
     */
    distinct?: Mst_event_typeScalarFieldEnum | Mst_event_typeScalarFieldEnum[]
  }

  /**
   * Mst_event_type findFirstOrThrow
   */
  export type Mst_event_typeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_type
     */
    select?: Mst_event_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_type
     */
    omit?: Mst_event_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_typeInclude<ExtArgs> | null
    /**
     * Filter, which Mst_event_type to fetch.
     */
    where?: Mst_event_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_event_types to fetch.
     */
    orderBy?: Mst_event_typeOrderByWithRelationInput | Mst_event_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mst_event_types.
     */
    cursor?: Mst_event_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_event_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_event_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mst_event_types.
     */
    distinct?: Mst_event_typeScalarFieldEnum | Mst_event_typeScalarFieldEnum[]
  }

  /**
   * Mst_event_type findMany
   */
  export type Mst_event_typeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_type
     */
    select?: Mst_event_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_type
     */
    omit?: Mst_event_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_typeInclude<ExtArgs> | null
    /**
     * Filter, which Mst_event_types to fetch.
     */
    where?: Mst_event_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_event_types to fetch.
     */
    orderBy?: Mst_event_typeOrderByWithRelationInput | Mst_event_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Mst_event_types.
     */
    cursor?: Mst_event_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_event_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_event_types.
     */
    skip?: number
    distinct?: Mst_event_typeScalarFieldEnum | Mst_event_typeScalarFieldEnum[]
  }

  /**
   * Mst_event_type create
   */
  export type Mst_event_typeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_type
     */
    select?: Mst_event_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_type
     */
    omit?: Mst_event_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_typeInclude<ExtArgs> | null
    /**
     * The data needed to create a Mst_event_type.
     */
    data: XOR<Mst_event_typeCreateInput, Mst_event_typeUncheckedCreateInput>
  }

  /**
   * Mst_event_type createMany
   */
  export type Mst_event_typeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Mst_event_types.
     */
    data: Mst_event_typeCreateManyInput | Mst_event_typeCreateManyInput[]
  }

  /**
   * Mst_event_type createManyAndReturn
   */
  export type Mst_event_typeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_type
     */
    select?: Mst_event_typeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_type
     */
    omit?: Mst_event_typeOmit<ExtArgs> | null
    /**
     * The data used to create many Mst_event_types.
     */
    data: Mst_event_typeCreateManyInput | Mst_event_typeCreateManyInput[]
  }

  /**
   * Mst_event_type update
   */
  export type Mst_event_typeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_type
     */
    select?: Mst_event_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_type
     */
    omit?: Mst_event_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_typeInclude<ExtArgs> | null
    /**
     * The data needed to update a Mst_event_type.
     */
    data: XOR<Mst_event_typeUpdateInput, Mst_event_typeUncheckedUpdateInput>
    /**
     * Choose, which Mst_event_type to update.
     */
    where: Mst_event_typeWhereUniqueInput
  }

  /**
   * Mst_event_type updateMany
   */
  export type Mst_event_typeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Mst_event_types.
     */
    data: XOR<Mst_event_typeUpdateManyMutationInput, Mst_event_typeUncheckedUpdateManyInput>
    /**
     * Filter which Mst_event_types to update
     */
    where?: Mst_event_typeWhereInput
    /**
     * Limit how many Mst_event_types to update.
     */
    limit?: number
  }

  /**
   * Mst_event_type updateManyAndReturn
   */
  export type Mst_event_typeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_type
     */
    select?: Mst_event_typeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_type
     */
    omit?: Mst_event_typeOmit<ExtArgs> | null
    /**
     * The data used to update Mst_event_types.
     */
    data: XOR<Mst_event_typeUpdateManyMutationInput, Mst_event_typeUncheckedUpdateManyInput>
    /**
     * Filter which Mst_event_types to update
     */
    where?: Mst_event_typeWhereInput
    /**
     * Limit how many Mst_event_types to update.
     */
    limit?: number
  }

  /**
   * Mst_event_type upsert
   */
  export type Mst_event_typeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_type
     */
    select?: Mst_event_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_type
     */
    omit?: Mst_event_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_typeInclude<ExtArgs> | null
    /**
     * The filter to search for the Mst_event_type to update in case it exists.
     */
    where: Mst_event_typeWhereUniqueInput
    /**
     * In case the Mst_event_type found by the `where` argument doesn't exist, create a new Mst_event_type with this data.
     */
    create: XOR<Mst_event_typeCreateInput, Mst_event_typeUncheckedCreateInput>
    /**
     * In case the Mst_event_type was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Mst_event_typeUpdateInput, Mst_event_typeUncheckedUpdateInput>
  }

  /**
   * Mst_event_type delete
   */
  export type Mst_event_typeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_type
     */
    select?: Mst_event_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_type
     */
    omit?: Mst_event_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_typeInclude<ExtArgs> | null
    /**
     * Filter which Mst_event_type to delete.
     */
    where: Mst_event_typeWhereUniqueInput
  }

  /**
   * Mst_event_type deleteMany
   */
  export type Mst_event_typeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mst_event_types to delete
     */
    where?: Mst_event_typeWhereInput
    /**
     * Limit how many Mst_event_types to delete.
     */
    limit?: number
  }

  /**
   * Mst_event_type.events
   */
  export type Mst_event_type$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event
     */
    select?: Mst_eventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event
     */
    omit?: Mst_eventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_eventInclude<ExtArgs> | null
    where?: Mst_eventWhereInput
    orderBy?: Mst_eventOrderByWithRelationInput | Mst_eventOrderByWithRelationInput[]
    cursor?: Mst_eventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Mst_eventScalarFieldEnum | Mst_eventScalarFieldEnum[]
  }

  /**
   * Mst_event_type.results
   */
  export type Mst_event_type$resultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_result
     */
    select?: Mst_event_resultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_result
     */
    omit?: Mst_event_resultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_resultInclude<ExtArgs> | null
    where?: Mst_event_resultWhereInput
    orderBy?: Mst_event_resultOrderByWithRelationInput | Mst_event_resultOrderByWithRelationInput[]
    cursor?: Mst_event_resultWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Mst_event_resultScalarFieldEnum | Mst_event_resultScalarFieldEnum[]
  }

  /**
   * Mst_event_type without action
   */
  export type Mst_event_typeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_type
     */
    select?: Mst_event_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_type
     */
    omit?: Mst_event_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_typeInclude<ExtArgs> | null
  }


  /**
   * Model Mst_role
   */

  export type AggregateMst_role = {
    _count: Mst_roleCountAggregateOutputType | null
    _avg: Mst_roleAvgAggregateOutputType | null
    _sum: Mst_roleSumAggregateOutputType | null
    _min: Mst_roleMinAggregateOutputType | null
    _max: Mst_roleMaxAggregateOutputType | null
  }

  export type Mst_roleAvgAggregateOutputType = {
    id: number | null
  }

  export type Mst_roleSumAggregateOutputType = {
    id: number | null
  }

  export type Mst_roleMinAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type Mst_roleMaxAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type Mst_roleCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type Mst_roleAvgAggregateInputType = {
    id?: true
  }

  export type Mst_roleSumAggregateInputType = {
    id?: true
  }

  export type Mst_roleMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type Mst_roleMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type Mst_roleCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type Mst_roleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mst_role to aggregate.
     */
    where?: Mst_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_roles to fetch.
     */
    orderBy?: Mst_roleOrderByWithRelationInput | Mst_roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Mst_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Mst_roles
    **/
    _count?: true | Mst_roleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Mst_roleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Mst_roleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mst_roleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mst_roleMaxAggregateInputType
  }

  export type GetMst_roleAggregateType<T extends Mst_roleAggregateArgs> = {
        [P in keyof T & keyof AggregateMst_role]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMst_role[P]>
      : GetScalarType<T[P], AggregateMst_role[P]>
  }




  export type Mst_roleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Mst_roleWhereInput
    orderBy?: Mst_roleOrderByWithAggregationInput | Mst_roleOrderByWithAggregationInput[]
    by: Mst_roleScalarFieldEnum[] | Mst_roleScalarFieldEnum
    having?: Mst_roleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mst_roleCountAggregateInputType | true
    _avg?: Mst_roleAvgAggregateInputType
    _sum?: Mst_roleSumAggregateInputType
    _min?: Mst_roleMinAggregateInputType
    _max?: Mst_roleMaxAggregateInputType
  }

  export type Mst_roleGroupByOutputType = {
    id: number
    name: string
    _count: Mst_roleCountAggregateOutputType | null
    _avg: Mst_roleAvgAggregateOutputType | null
    _sum: Mst_roleSumAggregateOutputType | null
    _min: Mst_roleMinAggregateOutputType | null
    _max: Mst_roleMaxAggregateOutputType | null
  }

  type GetMst_roleGroupByPayload<T extends Mst_roleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mst_roleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mst_roleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mst_roleGroupByOutputType[P]>
            : GetScalarType<T[P], Mst_roleGroupByOutputType[P]>
        }
      >
    >


  export type Mst_roleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    profiles?: boolean | Mst_role$profilesArgs<ExtArgs>
    user_roles?: boolean | Mst_role$user_rolesArgs<ExtArgs>
    _count?: boolean | Mst_roleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mst_role"]>

  export type Mst_roleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["mst_role"]>

  export type Mst_roleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["mst_role"]>

  export type Mst_roleSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type Mst_roleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["mst_role"]>
  export type Mst_roleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    profiles?: boolean | Mst_role$profilesArgs<ExtArgs>
    user_roles?: boolean | Mst_role$user_rolesArgs<ExtArgs>
    _count?: boolean | Mst_roleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Mst_roleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type Mst_roleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $Mst_rolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Mst_role"
    objects: {
      profiles: Prisma.$ProfilePayload<ExtArgs>[]
      user_roles: Prisma.$User_rolePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
    }, ExtArgs["result"]["mst_role"]>
    composites: {}
  }

  type Mst_roleGetPayload<S extends boolean | null | undefined | Mst_roleDefaultArgs> = $Result.GetResult<Prisma.$Mst_rolePayload, S>

  type Mst_roleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Mst_roleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mst_roleCountAggregateInputType | true
    }

  export interface Mst_roleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mst_role'], meta: { name: 'Mst_role' } }
    /**
     * Find zero or one Mst_role that matches the filter.
     * @param {Mst_roleFindUniqueArgs} args - Arguments to find a Mst_role
     * @example
     * // Get one Mst_role
     * const mst_role = await prisma.mst_role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Mst_roleFindUniqueArgs>(args: SelectSubset<T, Mst_roleFindUniqueArgs<ExtArgs>>): Prisma__Mst_roleClient<$Result.GetResult<Prisma.$Mst_rolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mst_role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Mst_roleFindUniqueOrThrowArgs} args - Arguments to find a Mst_role
     * @example
     * // Get one Mst_role
     * const mst_role = await prisma.mst_role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Mst_roleFindUniqueOrThrowArgs>(args: SelectSubset<T, Mst_roleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Mst_roleClient<$Result.GetResult<Prisma.$Mst_rolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mst_role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_roleFindFirstArgs} args - Arguments to find a Mst_role
     * @example
     * // Get one Mst_role
     * const mst_role = await prisma.mst_role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Mst_roleFindFirstArgs>(args?: SelectSubset<T, Mst_roleFindFirstArgs<ExtArgs>>): Prisma__Mst_roleClient<$Result.GetResult<Prisma.$Mst_rolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mst_role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_roleFindFirstOrThrowArgs} args - Arguments to find a Mst_role
     * @example
     * // Get one Mst_role
     * const mst_role = await prisma.mst_role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Mst_roleFindFirstOrThrowArgs>(args?: SelectSubset<T, Mst_roleFindFirstOrThrowArgs<ExtArgs>>): Prisma__Mst_roleClient<$Result.GetResult<Prisma.$Mst_rolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mst_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_roleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mst_roles
     * const mst_roles = await prisma.mst_role.findMany()
     * 
     * // Get first 10 Mst_roles
     * const mst_roles = await prisma.mst_role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mst_roleWithIdOnly = await prisma.mst_role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Mst_roleFindManyArgs>(args?: SelectSubset<T, Mst_roleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_rolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mst_role.
     * @param {Mst_roleCreateArgs} args - Arguments to create a Mst_role.
     * @example
     * // Create one Mst_role
     * const Mst_role = await prisma.mst_role.create({
     *   data: {
     *     // ... data to create a Mst_role
     *   }
     * })
     * 
     */
    create<T extends Mst_roleCreateArgs>(args: SelectSubset<T, Mst_roleCreateArgs<ExtArgs>>): Prisma__Mst_roleClient<$Result.GetResult<Prisma.$Mst_rolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mst_roles.
     * @param {Mst_roleCreateManyArgs} args - Arguments to create many Mst_roles.
     * @example
     * // Create many Mst_roles
     * const mst_role = await prisma.mst_role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Mst_roleCreateManyArgs>(args?: SelectSubset<T, Mst_roleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mst_roles and returns the data saved in the database.
     * @param {Mst_roleCreateManyAndReturnArgs} args - Arguments to create many Mst_roles.
     * @example
     * // Create many Mst_roles
     * const mst_role = await prisma.mst_role.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mst_roles and only return the `id`
     * const mst_roleWithIdOnly = await prisma.mst_role.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Mst_roleCreateManyAndReturnArgs>(args?: SelectSubset<T, Mst_roleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_rolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mst_role.
     * @param {Mst_roleDeleteArgs} args - Arguments to delete one Mst_role.
     * @example
     * // Delete one Mst_role
     * const Mst_role = await prisma.mst_role.delete({
     *   where: {
     *     // ... filter to delete one Mst_role
     *   }
     * })
     * 
     */
    delete<T extends Mst_roleDeleteArgs>(args: SelectSubset<T, Mst_roleDeleteArgs<ExtArgs>>): Prisma__Mst_roleClient<$Result.GetResult<Prisma.$Mst_rolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mst_role.
     * @param {Mst_roleUpdateArgs} args - Arguments to update one Mst_role.
     * @example
     * // Update one Mst_role
     * const mst_role = await prisma.mst_role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Mst_roleUpdateArgs>(args: SelectSubset<T, Mst_roleUpdateArgs<ExtArgs>>): Prisma__Mst_roleClient<$Result.GetResult<Prisma.$Mst_rolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mst_roles.
     * @param {Mst_roleDeleteManyArgs} args - Arguments to filter Mst_roles to delete.
     * @example
     * // Delete a few Mst_roles
     * const { count } = await prisma.mst_role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Mst_roleDeleteManyArgs>(args?: SelectSubset<T, Mst_roleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mst_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_roleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mst_roles
     * const mst_role = await prisma.mst_role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Mst_roleUpdateManyArgs>(args: SelectSubset<T, Mst_roleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mst_roles and returns the data updated in the database.
     * @param {Mst_roleUpdateManyAndReturnArgs} args - Arguments to update many Mst_roles.
     * @example
     * // Update many Mst_roles
     * const mst_role = await prisma.mst_role.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mst_roles and only return the `id`
     * const mst_roleWithIdOnly = await prisma.mst_role.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Mst_roleUpdateManyAndReturnArgs>(args: SelectSubset<T, Mst_roleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_rolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mst_role.
     * @param {Mst_roleUpsertArgs} args - Arguments to update or create a Mst_role.
     * @example
     * // Update or create a Mst_role
     * const mst_role = await prisma.mst_role.upsert({
     *   create: {
     *     // ... data to create a Mst_role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mst_role we want to update
     *   }
     * })
     */
    upsert<T extends Mst_roleUpsertArgs>(args: SelectSubset<T, Mst_roleUpsertArgs<ExtArgs>>): Prisma__Mst_roleClient<$Result.GetResult<Prisma.$Mst_rolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mst_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_roleCountArgs} args - Arguments to filter Mst_roles to count.
     * @example
     * // Count the number of Mst_roles
     * const count = await prisma.mst_role.count({
     *   where: {
     *     // ... the filter for the Mst_roles we want to count
     *   }
     * })
    **/
    count<T extends Mst_roleCountArgs>(
      args?: Subset<T, Mst_roleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mst_roleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mst_role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_roleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mst_roleAggregateArgs>(args: Subset<T, Mst_roleAggregateArgs>): Prisma.PrismaPromise<GetMst_roleAggregateType<T>>

    /**
     * Group by Mst_role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_roleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Mst_roleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Mst_roleGroupByArgs['orderBy'] }
        : { orderBy?: Mst_roleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Mst_roleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMst_roleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Mst_role model
   */
  readonly fields: Mst_roleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Mst_role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Mst_roleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    profiles<T extends Mst_role$profilesArgs<ExtArgs> = {}>(args?: Subset<T, Mst_role$profilesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_roles<T extends Mst_role$user_rolesArgs<ExtArgs> = {}>(args?: Subset<T, Mst_role$user_rolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$User_rolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Mst_role model
   */
  interface Mst_roleFieldRefs {
    readonly id: FieldRef<"Mst_role", 'Int'>
    readonly name: FieldRef<"Mst_role", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Mst_role findUnique
   */
  export type Mst_roleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_role
     */
    select?: Mst_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_role
     */
    omit?: Mst_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_roleInclude<ExtArgs> | null
    /**
     * Filter, which Mst_role to fetch.
     */
    where: Mst_roleWhereUniqueInput
  }

  /**
   * Mst_role findUniqueOrThrow
   */
  export type Mst_roleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_role
     */
    select?: Mst_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_role
     */
    omit?: Mst_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_roleInclude<ExtArgs> | null
    /**
     * Filter, which Mst_role to fetch.
     */
    where: Mst_roleWhereUniqueInput
  }

  /**
   * Mst_role findFirst
   */
  export type Mst_roleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_role
     */
    select?: Mst_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_role
     */
    omit?: Mst_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_roleInclude<ExtArgs> | null
    /**
     * Filter, which Mst_role to fetch.
     */
    where?: Mst_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_roles to fetch.
     */
    orderBy?: Mst_roleOrderByWithRelationInput | Mst_roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mst_roles.
     */
    cursor?: Mst_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mst_roles.
     */
    distinct?: Mst_roleScalarFieldEnum | Mst_roleScalarFieldEnum[]
  }

  /**
   * Mst_role findFirstOrThrow
   */
  export type Mst_roleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_role
     */
    select?: Mst_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_role
     */
    omit?: Mst_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_roleInclude<ExtArgs> | null
    /**
     * Filter, which Mst_role to fetch.
     */
    where?: Mst_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_roles to fetch.
     */
    orderBy?: Mst_roleOrderByWithRelationInput | Mst_roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mst_roles.
     */
    cursor?: Mst_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mst_roles.
     */
    distinct?: Mst_roleScalarFieldEnum | Mst_roleScalarFieldEnum[]
  }

  /**
   * Mst_role findMany
   */
  export type Mst_roleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_role
     */
    select?: Mst_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_role
     */
    omit?: Mst_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_roleInclude<ExtArgs> | null
    /**
     * Filter, which Mst_roles to fetch.
     */
    where?: Mst_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_roles to fetch.
     */
    orderBy?: Mst_roleOrderByWithRelationInput | Mst_roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Mst_roles.
     */
    cursor?: Mst_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_roles.
     */
    skip?: number
    distinct?: Mst_roleScalarFieldEnum | Mst_roleScalarFieldEnum[]
  }

  /**
   * Mst_role create
   */
  export type Mst_roleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_role
     */
    select?: Mst_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_role
     */
    omit?: Mst_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_roleInclude<ExtArgs> | null
    /**
     * The data needed to create a Mst_role.
     */
    data: XOR<Mst_roleCreateInput, Mst_roleUncheckedCreateInput>
  }

  /**
   * Mst_role createMany
   */
  export type Mst_roleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Mst_roles.
     */
    data: Mst_roleCreateManyInput | Mst_roleCreateManyInput[]
  }

  /**
   * Mst_role createManyAndReturn
   */
  export type Mst_roleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_role
     */
    select?: Mst_roleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_role
     */
    omit?: Mst_roleOmit<ExtArgs> | null
    /**
     * The data used to create many Mst_roles.
     */
    data: Mst_roleCreateManyInput | Mst_roleCreateManyInput[]
  }

  /**
   * Mst_role update
   */
  export type Mst_roleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_role
     */
    select?: Mst_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_role
     */
    omit?: Mst_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_roleInclude<ExtArgs> | null
    /**
     * The data needed to update a Mst_role.
     */
    data: XOR<Mst_roleUpdateInput, Mst_roleUncheckedUpdateInput>
    /**
     * Choose, which Mst_role to update.
     */
    where: Mst_roleWhereUniqueInput
  }

  /**
   * Mst_role updateMany
   */
  export type Mst_roleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Mst_roles.
     */
    data: XOR<Mst_roleUpdateManyMutationInput, Mst_roleUncheckedUpdateManyInput>
    /**
     * Filter which Mst_roles to update
     */
    where?: Mst_roleWhereInput
    /**
     * Limit how many Mst_roles to update.
     */
    limit?: number
  }

  /**
   * Mst_role updateManyAndReturn
   */
  export type Mst_roleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_role
     */
    select?: Mst_roleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_role
     */
    omit?: Mst_roleOmit<ExtArgs> | null
    /**
     * The data used to update Mst_roles.
     */
    data: XOR<Mst_roleUpdateManyMutationInput, Mst_roleUncheckedUpdateManyInput>
    /**
     * Filter which Mst_roles to update
     */
    where?: Mst_roleWhereInput
    /**
     * Limit how many Mst_roles to update.
     */
    limit?: number
  }

  /**
   * Mst_role upsert
   */
  export type Mst_roleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_role
     */
    select?: Mst_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_role
     */
    omit?: Mst_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_roleInclude<ExtArgs> | null
    /**
     * The filter to search for the Mst_role to update in case it exists.
     */
    where: Mst_roleWhereUniqueInput
    /**
     * In case the Mst_role found by the `where` argument doesn't exist, create a new Mst_role with this data.
     */
    create: XOR<Mst_roleCreateInput, Mst_roleUncheckedCreateInput>
    /**
     * In case the Mst_role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Mst_roleUpdateInput, Mst_roleUncheckedUpdateInput>
  }

  /**
   * Mst_role delete
   */
  export type Mst_roleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_role
     */
    select?: Mst_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_role
     */
    omit?: Mst_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_roleInclude<ExtArgs> | null
    /**
     * Filter which Mst_role to delete.
     */
    where: Mst_roleWhereUniqueInput
  }

  /**
   * Mst_role deleteMany
   */
  export type Mst_roleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mst_roles to delete
     */
    where?: Mst_roleWhereInput
    /**
     * Limit how many Mst_roles to delete.
     */
    limit?: number
  }

  /**
   * Mst_role.profiles
   */
  export type Mst_role$profilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    cursor?: ProfileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Mst_role.user_roles
   */
  export type Mst_role$user_rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_role
     */
    select?: User_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_role
     */
    omit?: User_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_roleInclude<ExtArgs> | null
    where?: User_roleWhereInput
    orderBy?: User_roleOrderByWithRelationInput | User_roleOrderByWithRelationInput[]
    cursor?: User_roleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_roleScalarFieldEnum | User_roleScalarFieldEnum[]
  }

  /**
   * Mst_role without action
   */
  export type Mst_roleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_role
     */
    select?: Mst_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_role
     */
    omit?: Mst_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_roleInclude<ExtArgs> | null
  }


  /**
   * Model Mst_temple
   */

  export type AggregateMst_temple = {
    _count: Mst_templeCountAggregateOutputType | null
    _avg: Mst_templeAvgAggregateOutputType | null
    _sum: Mst_templeSumAggregateOutputType | null
    _min: Mst_templeMinAggregateOutputType | null
    _max: Mst_templeMaxAggregateOutputType | null
  }

  export type Mst_templeAvgAggregateOutputType = {
    id: number | null
  }

  export type Mst_templeSumAggregateOutputType = {
    id: number | null
  }

  export type Mst_templeMinAggregateOutputType = {
    id: number | null
    code: string | null
    name: string | null
    address: string | null
    contact_name: string | null
    contact_phone: string | null
    is_deleted: boolean | null
    created_at: Date | null
    modified_at: Date | null
  }

  export type Mst_templeMaxAggregateOutputType = {
    id: number | null
    code: string | null
    name: string | null
    address: string | null
    contact_name: string | null
    contact_phone: string | null
    is_deleted: boolean | null
    created_at: Date | null
    modified_at: Date | null
  }

  export type Mst_templeCountAggregateOutputType = {
    id: number
    code: number
    name: number
    address: number
    contact_name: number
    contact_phone: number
    is_deleted: number
    created_at: number
    modified_at: number
    _all: number
  }


  export type Mst_templeAvgAggregateInputType = {
    id?: true
  }

  export type Mst_templeSumAggregateInputType = {
    id?: true
  }

  export type Mst_templeMinAggregateInputType = {
    id?: true
    code?: true
    name?: true
    address?: true
    contact_name?: true
    contact_phone?: true
    is_deleted?: true
    created_at?: true
    modified_at?: true
  }

  export type Mst_templeMaxAggregateInputType = {
    id?: true
    code?: true
    name?: true
    address?: true
    contact_name?: true
    contact_phone?: true
    is_deleted?: true
    created_at?: true
    modified_at?: true
  }

  export type Mst_templeCountAggregateInputType = {
    id?: true
    code?: true
    name?: true
    address?: true
    contact_name?: true
    contact_phone?: true
    is_deleted?: true
    created_at?: true
    modified_at?: true
    _all?: true
  }

  export type Mst_templeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mst_temple to aggregate.
     */
    where?: Mst_templeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_temples to fetch.
     */
    orderBy?: Mst_templeOrderByWithRelationInput | Mst_templeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Mst_templeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_temples from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_temples.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Mst_temples
    **/
    _count?: true | Mst_templeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Mst_templeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Mst_templeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mst_templeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mst_templeMaxAggregateInputType
  }

  export type GetMst_templeAggregateType<T extends Mst_templeAggregateArgs> = {
        [P in keyof T & keyof AggregateMst_temple]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMst_temple[P]>
      : GetScalarType<T[P], AggregateMst_temple[P]>
  }




  export type Mst_templeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Mst_templeWhereInput
    orderBy?: Mst_templeOrderByWithAggregationInput | Mst_templeOrderByWithAggregationInput[]
    by: Mst_templeScalarFieldEnum[] | Mst_templeScalarFieldEnum
    having?: Mst_templeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mst_templeCountAggregateInputType | true
    _avg?: Mst_templeAvgAggregateInputType
    _sum?: Mst_templeSumAggregateInputType
    _min?: Mst_templeMinAggregateInputType
    _max?: Mst_templeMaxAggregateInputType
  }

  export type Mst_templeGroupByOutputType = {
    id: number
    code: string
    name: string
    address: string | null
    contact_name: string | null
    contact_phone: string | null
    is_deleted: boolean
    created_at: Date
    modified_at: Date
    _count: Mst_templeCountAggregateOutputType | null
    _avg: Mst_templeAvgAggregateOutputType | null
    _sum: Mst_templeSumAggregateOutputType | null
    _min: Mst_templeMinAggregateOutputType | null
    _max: Mst_templeMaxAggregateOutputType | null
  }

  type GetMst_templeGroupByPayload<T extends Mst_templeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mst_templeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mst_templeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mst_templeGroupByOutputType[P]>
            : GetScalarType<T[P], Mst_templeGroupByOutputType[P]>
        }
      >
    >


  export type Mst_templeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    name?: boolean
    address?: boolean
    contact_name?: boolean
    contact_phone?: boolean
    is_deleted?: boolean
    created_at?: boolean
    modified_at?: boolean
    champions?: boolean | Mst_temple$championsArgs<ExtArgs>
    host_champions?: boolean | Mst_temple$host_championsArgs<ExtArgs>
    profiles?: boolean | Mst_temple$profilesArgs<ExtArgs>
    team_registrations?: boolean | Mst_temple$team_registrationsArgs<ExtArgs>
    _count?: boolean | Mst_templeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mst_temple"]>

  export type Mst_templeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    name?: boolean
    address?: boolean
    contact_name?: boolean
    contact_phone?: boolean
    is_deleted?: boolean
    created_at?: boolean
    modified_at?: boolean
  }, ExtArgs["result"]["mst_temple"]>

  export type Mst_templeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    name?: boolean
    address?: boolean
    contact_name?: boolean
    contact_phone?: boolean
    is_deleted?: boolean
    created_at?: boolean
    modified_at?: boolean
  }, ExtArgs["result"]["mst_temple"]>

  export type Mst_templeSelectScalar = {
    id?: boolean
    code?: boolean
    name?: boolean
    address?: boolean
    contact_name?: boolean
    contact_phone?: boolean
    is_deleted?: boolean
    created_at?: boolean
    modified_at?: boolean
  }

  export type Mst_templeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "code" | "name" | "address" | "contact_name" | "contact_phone" | "is_deleted" | "created_at" | "modified_at", ExtArgs["result"]["mst_temple"]>
  export type Mst_templeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    champions?: boolean | Mst_temple$championsArgs<ExtArgs>
    host_champions?: boolean | Mst_temple$host_championsArgs<ExtArgs>
    profiles?: boolean | Mst_temple$profilesArgs<ExtArgs>
    team_registrations?: boolean | Mst_temple$team_registrationsArgs<ExtArgs>
    _count?: boolean | Mst_templeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Mst_templeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type Mst_templeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $Mst_templePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Mst_temple"
    objects: {
      champions: Prisma.$ChampionPayload<ExtArgs>[]
      host_champions: Prisma.$ChampionPayload<ExtArgs>[]
      profiles: Prisma.$ProfilePayload<ExtArgs>[]
      team_registrations: Prisma.$Team_event_registrationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      code: string
      name: string
      address: string | null
      contact_name: string | null
      contact_phone: string | null
      is_deleted: boolean
      created_at: Date
      modified_at: Date
    }, ExtArgs["result"]["mst_temple"]>
    composites: {}
  }

  type Mst_templeGetPayload<S extends boolean | null | undefined | Mst_templeDefaultArgs> = $Result.GetResult<Prisma.$Mst_templePayload, S>

  type Mst_templeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Mst_templeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mst_templeCountAggregateInputType | true
    }

  export interface Mst_templeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mst_temple'], meta: { name: 'Mst_temple' } }
    /**
     * Find zero or one Mst_temple that matches the filter.
     * @param {Mst_templeFindUniqueArgs} args - Arguments to find a Mst_temple
     * @example
     * // Get one Mst_temple
     * const mst_temple = await prisma.mst_temple.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Mst_templeFindUniqueArgs>(args: SelectSubset<T, Mst_templeFindUniqueArgs<ExtArgs>>): Prisma__Mst_templeClient<$Result.GetResult<Prisma.$Mst_templePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mst_temple that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Mst_templeFindUniqueOrThrowArgs} args - Arguments to find a Mst_temple
     * @example
     * // Get one Mst_temple
     * const mst_temple = await prisma.mst_temple.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Mst_templeFindUniqueOrThrowArgs>(args: SelectSubset<T, Mst_templeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Mst_templeClient<$Result.GetResult<Prisma.$Mst_templePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mst_temple that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_templeFindFirstArgs} args - Arguments to find a Mst_temple
     * @example
     * // Get one Mst_temple
     * const mst_temple = await prisma.mst_temple.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Mst_templeFindFirstArgs>(args?: SelectSubset<T, Mst_templeFindFirstArgs<ExtArgs>>): Prisma__Mst_templeClient<$Result.GetResult<Prisma.$Mst_templePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mst_temple that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_templeFindFirstOrThrowArgs} args - Arguments to find a Mst_temple
     * @example
     * // Get one Mst_temple
     * const mst_temple = await prisma.mst_temple.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Mst_templeFindFirstOrThrowArgs>(args?: SelectSubset<T, Mst_templeFindFirstOrThrowArgs<ExtArgs>>): Prisma__Mst_templeClient<$Result.GetResult<Prisma.$Mst_templePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mst_temples that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_templeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mst_temples
     * const mst_temples = await prisma.mst_temple.findMany()
     * 
     * // Get first 10 Mst_temples
     * const mst_temples = await prisma.mst_temple.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mst_templeWithIdOnly = await prisma.mst_temple.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Mst_templeFindManyArgs>(args?: SelectSubset<T, Mst_templeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_templePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mst_temple.
     * @param {Mst_templeCreateArgs} args - Arguments to create a Mst_temple.
     * @example
     * // Create one Mst_temple
     * const Mst_temple = await prisma.mst_temple.create({
     *   data: {
     *     // ... data to create a Mst_temple
     *   }
     * })
     * 
     */
    create<T extends Mst_templeCreateArgs>(args: SelectSubset<T, Mst_templeCreateArgs<ExtArgs>>): Prisma__Mst_templeClient<$Result.GetResult<Prisma.$Mst_templePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mst_temples.
     * @param {Mst_templeCreateManyArgs} args - Arguments to create many Mst_temples.
     * @example
     * // Create many Mst_temples
     * const mst_temple = await prisma.mst_temple.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Mst_templeCreateManyArgs>(args?: SelectSubset<T, Mst_templeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mst_temples and returns the data saved in the database.
     * @param {Mst_templeCreateManyAndReturnArgs} args - Arguments to create many Mst_temples.
     * @example
     * // Create many Mst_temples
     * const mst_temple = await prisma.mst_temple.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mst_temples and only return the `id`
     * const mst_templeWithIdOnly = await prisma.mst_temple.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Mst_templeCreateManyAndReturnArgs>(args?: SelectSubset<T, Mst_templeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_templePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mst_temple.
     * @param {Mst_templeDeleteArgs} args - Arguments to delete one Mst_temple.
     * @example
     * // Delete one Mst_temple
     * const Mst_temple = await prisma.mst_temple.delete({
     *   where: {
     *     // ... filter to delete one Mst_temple
     *   }
     * })
     * 
     */
    delete<T extends Mst_templeDeleteArgs>(args: SelectSubset<T, Mst_templeDeleteArgs<ExtArgs>>): Prisma__Mst_templeClient<$Result.GetResult<Prisma.$Mst_templePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mst_temple.
     * @param {Mst_templeUpdateArgs} args - Arguments to update one Mst_temple.
     * @example
     * // Update one Mst_temple
     * const mst_temple = await prisma.mst_temple.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Mst_templeUpdateArgs>(args: SelectSubset<T, Mst_templeUpdateArgs<ExtArgs>>): Prisma__Mst_templeClient<$Result.GetResult<Prisma.$Mst_templePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mst_temples.
     * @param {Mst_templeDeleteManyArgs} args - Arguments to filter Mst_temples to delete.
     * @example
     * // Delete a few Mst_temples
     * const { count } = await prisma.mst_temple.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Mst_templeDeleteManyArgs>(args?: SelectSubset<T, Mst_templeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mst_temples.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_templeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mst_temples
     * const mst_temple = await prisma.mst_temple.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Mst_templeUpdateManyArgs>(args: SelectSubset<T, Mst_templeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mst_temples and returns the data updated in the database.
     * @param {Mst_templeUpdateManyAndReturnArgs} args - Arguments to update many Mst_temples.
     * @example
     * // Update many Mst_temples
     * const mst_temple = await prisma.mst_temple.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mst_temples and only return the `id`
     * const mst_templeWithIdOnly = await prisma.mst_temple.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Mst_templeUpdateManyAndReturnArgs>(args: SelectSubset<T, Mst_templeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Mst_templePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mst_temple.
     * @param {Mst_templeUpsertArgs} args - Arguments to update or create a Mst_temple.
     * @example
     * // Update or create a Mst_temple
     * const mst_temple = await prisma.mst_temple.upsert({
     *   create: {
     *     // ... data to create a Mst_temple
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mst_temple we want to update
     *   }
     * })
     */
    upsert<T extends Mst_templeUpsertArgs>(args: SelectSubset<T, Mst_templeUpsertArgs<ExtArgs>>): Prisma__Mst_templeClient<$Result.GetResult<Prisma.$Mst_templePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mst_temples.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_templeCountArgs} args - Arguments to filter Mst_temples to count.
     * @example
     * // Count the number of Mst_temples
     * const count = await prisma.mst_temple.count({
     *   where: {
     *     // ... the filter for the Mst_temples we want to count
     *   }
     * })
    **/
    count<T extends Mst_templeCountArgs>(
      args?: Subset<T, Mst_templeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mst_templeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mst_temple.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_templeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mst_templeAggregateArgs>(args: Subset<T, Mst_templeAggregateArgs>): Prisma.PrismaPromise<GetMst_templeAggregateType<T>>

    /**
     * Group by Mst_temple.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mst_templeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Mst_templeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Mst_templeGroupByArgs['orderBy'] }
        : { orderBy?: Mst_templeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Mst_templeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMst_templeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Mst_temple model
   */
  readonly fields: Mst_templeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Mst_temple.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Mst_templeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    champions<T extends Mst_temple$championsArgs<ExtArgs> = {}>(args?: Subset<T, Mst_temple$championsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChampionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    host_champions<T extends Mst_temple$host_championsArgs<ExtArgs> = {}>(args?: Subset<T, Mst_temple$host_championsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChampionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    profiles<T extends Mst_temple$profilesArgs<ExtArgs> = {}>(args?: Subset<T, Mst_temple$profilesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    team_registrations<T extends Mst_temple$team_registrationsArgs<ExtArgs> = {}>(args?: Subset<T, Mst_temple$team_registrationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Team_event_registrationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Mst_temple model
   */
  interface Mst_templeFieldRefs {
    readonly id: FieldRef<"Mst_temple", 'Int'>
    readonly code: FieldRef<"Mst_temple", 'String'>
    readonly name: FieldRef<"Mst_temple", 'String'>
    readonly address: FieldRef<"Mst_temple", 'String'>
    readonly contact_name: FieldRef<"Mst_temple", 'String'>
    readonly contact_phone: FieldRef<"Mst_temple", 'String'>
    readonly is_deleted: FieldRef<"Mst_temple", 'Boolean'>
    readonly created_at: FieldRef<"Mst_temple", 'DateTime'>
    readonly modified_at: FieldRef<"Mst_temple", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Mst_temple findUnique
   */
  export type Mst_templeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_temple
     */
    select?: Mst_templeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_temple
     */
    omit?: Mst_templeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_templeInclude<ExtArgs> | null
    /**
     * Filter, which Mst_temple to fetch.
     */
    where: Mst_templeWhereUniqueInput
  }

  /**
   * Mst_temple findUniqueOrThrow
   */
  export type Mst_templeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_temple
     */
    select?: Mst_templeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_temple
     */
    omit?: Mst_templeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_templeInclude<ExtArgs> | null
    /**
     * Filter, which Mst_temple to fetch.
     */
    where: Mst_templeWhereUniqueInput
  }

  /**
   * Mst_temple findFirst
   */
  export type Mst_templeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_temple
     */
    select?: Mst_templeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_temple
     */
    omit?: Mst_templeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_templeInclude<ExtArgs> | null
    /**
     * Filter, which Mst_temple to fetch.
     */
    where?: Mst_templeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_temples to fetch.
     */
    orderBy?: Mst_templeOrderByWithRelationInput | Mst_templeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mst_temples.
     */
    cursor?: Mst_templeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_temples from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_temples.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mst_temples.
     */
    distinct?: Mst_templeScalarFieldEnum | Mst_templeScalarFieldEnum[]
  }

  /**
   * Mst_temple findFirstOrThrow
   */
  export type Mst_templeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_temple
     */
    select?: Mst_templeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_temple
     */
    omit?: Mst_templeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_templeInclude<ExtArgs> | null
    /**
     * Filter, which Mst_temple to fetch.
     */
    where?: Mst_templeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_temples to fetch.
     */
    orderBy?: Mst_templeOrderByWithRelationInput | Mst_templeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mst_temples.
     */
    cursor?: Mst_templeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_temples from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_temples.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mst_temples.
     */
    distinct?: Mst_templeScalarFieldEnum | Mst_templeScalarFieldEnum[]
  }

  /**
   * Mst_temple findMany
   */
  export type Mst_templeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_temple
     */
    select?: Mst_templeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_temple
     */
    omit?: Mst_templeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_templeInclude<ExtArgs> | null
    /**
     * Filter, which Mst_temples to fetch.
     */
    where?: Mst_templeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mst_temples to fetch.
     */
    orderBy?: Mst_templeOrderByWithRelationInput | Mst_templeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Mst_temples.
     */
    cursor?: Mst_templeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mst_temples from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mst_temples.
     */
    skip?: number
    distinct?: Mst_templeScalarFieldEnum | Mst_templeScalarFieldEnum[]
  }

  /**
   * Mst_temple create
   */
  export type Mst_templeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_temple
     */
    select?: Mst_templeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_temple
     */
    omit?: Mst_templeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_templeInclude<ExtArgs> | null
    /**
     * The data needed to create a Mst_temple.
     */
    data: XOR<Mst_templeCreateInput, Mst_templeUncheckedCreateInput>
  }

  /**
   * Mst_temple createMany
   */
  export type Mst_templeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Mst_temples.
     */
    data: Mst_templeCreateManyInput | Mst_templeCreateManyInput[]
  }

  /**
   * Mst_temple createManyAndReturn
   */
  export type Mst_templeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_temple
     */
    select?: Mst_templeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_temple
     */
    omit?: Mst_templeOmit<ExtArgs> | null
    /**
     * The data used to create many Mst_temples.
     */
    data: Mst_templeCreateManyInput | Mst_templeCreateManyInput[]
  }

  /**
   * Mst_temple update
   */
  export type Mst_templeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_temple
     */
    select?: Mst_templeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_temple
     */
    omit?: Mst_templeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_templeInclude<ExtArgs> | null
    /**
     * The data needed to update a Mst_temple.
     */
    data: XOR<Mst_templeUpdateInput, Mst_templeUncheckedUpdateInput>
    /**
     * Choose, which Mst_temple to update.
     */
    where: Mst_templeWhereUniqueInput
  }

  /**
   * Mst_temple updateMany
   */
  export type Mst_templeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Mst_temples.
     */
    data: XOR<Mst_templeUpdateManyMutationInput, Mst_templeUncheckedUpdateManyInput>
    /**
     * Filter which Mst_temples to update
     */
    where?: Mst_templeWhereInput
    /**
     * Limit how many Mst_temples to update.
     */
    limit?: number
  }

  /**
   * Mst_temple updateManyAndReturn
   */
  export type Mst_templeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_temple
     */
    select?: Mst_templeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_temple
     */
    omit?: Mst_templeOmit<ExtArgs> | null
    /**
     * The data used to update Mst_temples.
     */
    data: XOR<Mst_templeUpdateManyMutationInput, Mst_templeUncheckedUpdateManyInput>
    /**
     * Filter which Mst_temples to update
     */
    where?: Mst_templeWhereInput
    /**
     * Limit how many Mst_temples to update.
     */
    limit?: number
  }

  /**
   * Mst_temple upsert
   */
  export type Mst_templeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_temple
     */
    select?: Mst_templeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_temple
     */
    omit?: Mst_templeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_templeInclude<ExtArgs> | null
    /**
     * The filter to search for the Mst_temple to update in case it exists.
     */
    where: Mst_templeWhereUniqueInput
    /**
     * In case the Mst_temple found by the `where` argument doesn't exist, create a new Mst_temple with this data.
     */
    create: XOR<Mst_templeCreateInput, Mst_templeUncheckedCreateInput>
    /**
     * In case the Mst_temple was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Mst_templeUpdateInput, Mst_templeUncheckedUpdateInput>
  }

  /**
   * Mst_temple delete
   */
  export type Mst_templeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_temple
     */
    select?: Mst_templeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_temple
     */
    omit?: Mst_templeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_templeInclude<ExtArgs> | null
    /**
     * Filter which Mst_temple to delete.
     */
    where: Mst_templeWhereUniqueInput
  }

  /**
   * Mst_temple deleteMany
   */
  export type Mst_templeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mst_temples to delete
     */
    where?: Mst_templeWhereInput
    /**
     * Limit how many Mst_temples to delete.
     */
    limit?: number
  }

  /**
   * Mst_temple.champions
   */
  export type Mst_temple$championsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Champion
     */
    select?: ChampionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Champion
     */
    omit?: ChampionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChampionInclude<ExtArgs> | null
    where?: ChampionWhereInput
    orderBy?: ChampionOrderByWithRelationInput | ChampionOrderByWithRelationInput[]
    cursor?: ChampionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChampionScalarFieldEnum | ChampionScalarFieldEnum[]
  }

  /**
   * Mst_temple.host_champions
   */
  export type Mst_temple$host_championsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Champion
     */
    select?: ChampionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Champion
     */
    omit?: ChampionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChampionInclude<ExtArgs> | null
    where?: ChampionWhereInput
    orderBy?: ChampionOrderByWithRelationInput | ChampionOrderByWithRelationInput[]
    cursor?: ChampionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChampionScalarFieldEnum | ChampionScalarFieldEnum[]
  }

  /**
   * Mst_temple.profiles
   */
  export type Mst_temple$profilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    cursor?: ProfileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Mst_temple.team_registrations
   */
  export type Mst_temple$team_registrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_event_registration
     */
    select?: Team_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Team_event_registration
     */
    omit?: Team_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Team_event_registrationInclude<ExtArgs> | null
    where?: Team_event_registrationWhereInput
    orderBy?: Team_event_registrationOrderByWithRelationInput | Team_event_registrationOrderByWithRelationInput[]
    cursor?: Team_event_registrationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Team_event_registrationScalarFieldEnum | Team_event_registrationScalarFieldEnum[]
  }

  /**
   * Mst_temple without action
   */
  export type Mst_templeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_temple
     */
    select?: Mst_templeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_temple
     */
    omit?: Mst_templeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_templeInclude<ExtArgs> | null
  }


  /**
   * Model Profile
   */

  export type AggregateProfile = {
    _count: ProfileCountAggregateOutputType | null
    _avg: ProfileAvgAggregateOutputType | null
    _sum: ProfileSumAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  export type ProfileAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    temple_id: number | null
    role_id: number | null
  }

  export type ProfileSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    temple_id: number | null
    role_id: number | null
  }

  export type ProfileMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    first_name: string | null
    last_name: string | null
    email: string | null
    phone: string | null
    aadhar_number: string | null
    created_at: Date | null
    modified_at: Date | null
    is_deleted: boolean | null
    is_verified: boolean | null
    temple_id: number | null
    dob: Date | null
    gender: $Enums.Gender | null
    role_id: number | null
  }

  export type ProfileMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    first_name: string | null
    last_name: string | null
    email: string | null
    phone: string | null
    aadhar_number: string | null
    created_at: Date | null
    modified_at: Date | null
    is_deleted: boolean | null
    is_verified: boolean | null
    temple_id: number | null
    dob: Date | null
    gender: $Enums.Gender | null
    role_id: number | null
  }

  export type ProfileCountAggregateOutputType = {
    id: number
    user_id: number
    first_name: number
    last_name: number
    email: number
    phone: number
    aadhar_number: number
    created_at: number
    modified_at: number
    is_deleted: number
    is_verified: number
    temple_id: number
    dob: number
    gender: number
    role_id: number
    _all: number
  }


  export type ProfileAvgAggregateInputType = {
    id?: true
    user_id?: true
    temple_id?: true
    role_id?: true
  }

  export type ProfileSumAggregateInputType = {
    id?: true
    user_id?: true
    temple_id?: true
    role_id?: true
  }

  export type ProfileMinAggregateInputType = {
    id?: true
    user_id?: true
    first_name?: true
    last_name?: true
    email?: true
    phone?: true
    aadhar_number?: true
    created_at?: true
    modified_at?: true
    is_deleted?: true
    is_verified?: true
    temple_id?: true
    dob?: true
    gender?: true
    role_id?: true
  }

  export type ProfileMaxAggregateInputType = {
    id?: true
    user_id?: true
    first_name?: true
    last_name?: true
    email?: true
    phone?: true
    aadhar_number?: true
    created_at?: true
    modified_at?: true
    is_deleted?: true
    is_verified?: true
    temple_id?: true
    dob?: true
    gender?: true
    role_id?: true
  }

  export type ProfileCountAggregateInputType = {
    id?: true
    user_id?: true
    first_name?: true
    last_name?: true
    email?: true
    phone?: true
    aadhar_number?: true
    created_at?: true
    modified_at?: true
    is_deleted?: true
    is_verified?: true
    temple_id?: true
    dob?: true
    gender?: true
    role_id?: true
    _all?: true
  }

  export type ProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Profile to aggregate.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Profiles
    **/
    _count?: true | ProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProfileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProfileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProfileMaxAggregateInputType
  }

  export type GetProfileAggregateType<T extends ProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfile[P]>
      : GetScalarType<T[P], AggregateProfile[P]>
  }




  export type ProfileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfileWhereInput
    orderBy?: ProfileOrderByWithAggregationInput | ProfileOrderByWithAggregationInput[]
    by: ProfileScalarFieldEnum[] | ProfileScalarFieldEnum
    having?: ProfileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProfileCountAggregateInputType | true
    _avg?: ProfileAvgAggregateInputType
    _sum?: ProfileSumAggregateInputType
    _min?: ProfileMinAggregateInputType
    _max?: ProfileMaxAggregateInputType
  }

  export type ProfileGroupByOutputType = {
    id: number
    user_id: number | null
    first_name: string
    last_name: string | null
    email: string | null
    phone: string | null
    aadhar_number: string | null
    created_at: Date
    modified_at: Date
    is_deleted: boolean
    is_verified: boolean
    temple_id: number | null
    dob: Date
    gender: $Enums.Gender
    role_id: number
    _count: ProfileCountAggregateOutputType | null
    _avg: ProfileAvgAggregateOutputType | null
    _sum: ProfileSumAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  type GetProfileGroupByPayload<T extends ProfileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProfileGroupByOutputType[P]>
            : GetScalarType<T[P], ProfileGroupByOutputType[P]>
        }
      >
    >


  export type ProfileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    phone?: boolean
    aadhar_number?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
    is_verified?: boolean
    temple_id?: boolean
    dob?: boolean
    gender?: boolean
    role_id?: boolean
    user?: boolean | Profile$userArgs<ExtArgs>
    temple?: boolean | Profile$templeArgs<ExtArgs>
    role?: boolean | Mst_roleDefaultArgs<ExtArgs>
    registrations?: boolean | Profile$registrationsArgs<ExtArgs>
    _count?: boolean | ProfileCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>

  export type ProfileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    phone?: boolean
    aadhar_number?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
    is_verified?: boolean
    temple_id?: boolean
    dob?: boolean
    gender?: boolean
    role_id?: boolean
    user?: boolean | Profile$userArgs<ExtArgs>
    temple?: boolean | Profile$templeArgs<ExtArgs>
    role?: boolean | Mst_roleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>

  export type ProfileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    phone?: boolean
    aadhar_number?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
    is_verified?: boolean
    temple_id?: boolean
    dob?: boolean
    gender?: boolean
    role_id?: boolean
    user?: boolean | Profile$userArgs<ExtArgs>
    temple?: boolean | Profile$templeArgs<ExtArgs>
    role?: boolean | Mst_roleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>

  export type ProfileSelectScalar = {
    id?: boolean
    user_id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    phone?: boolean
    aadhar_number?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
    is_verified?: boolean
    temple_id?: boolean
    dob?: boolean
    gender?: boolean
    role_id?: boolean
  }

  export type ProfileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "first_name" | "last_name" | "email" | "phone" | "aadhar_number" | "created_at" | "modified_at" | "is_deleted" | "is_verified" | "temple_id" | "dob" | "gender" | "role_id", ExtArgs["result"]["profile"]>
  export type ProfileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Profile$userArgs<ExtArgs>
    temple?: boolean | Profile$templeArgs<ExtArgs>
    role?: boolean | Mst_roleDefaultArgs<ExtArgs>
    registrations?: boolean | Profile$registrationsArgs<ExtArgs>
    _count?: boolean | ProfileCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProfileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Profile$userArgs<ExtArgs>
    temple?: boolean | Profile$templeArgs<ExtArgs>
    role?: boolean | Mst_roleDefaultArgs<ExtArgs>
  }
  export type ProfileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Profile$userArgs<ExtArgs>
    temple?: boolean | Profile$templeArgs<ExtArgs>
    role?: boolean | Mst_roleDefaultArgs<ExtArgs>
  }

  export type $ProfilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Profile"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
      temple: Prisma.$Mst_templePayload<ExtArgs> | null
      role: Prisma.$Mst_rolePayload<ExtArgs>
      registrations: Prisma.$Ind_event_registrationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number | null
      first_name: string
      last_name: string | null
      email: string | null
      phone: string | null
      aadhar_number: string | null
      created_at: Date
      modified_at: Date
      is_deleted: boolean
      is_verified: boolean
      temple_id: number | null
      dob: Date
      gender: $Enums.Gender
      role_id: number
    }, ExtArgs["result"]["profile"]>
    composites: {}
  }

  type ProfileGetPayload<S extends boolean | null | undefined | ProfileDefaultArgs> = $Result.GetResult<Prisma.$ProfilePayload, S>

  type ProfileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProfileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProfileCountAggregateInputType | true
    }

  export interface ProfileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Profile'], meta: { name: 'Profile' } }
    /**
     * Find zero or one Profile that matches the filter.
     * @param {ProfileFindUniqueArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProfileFindUniqueArgs>(args: SelectSubset<T, ProfileFindUniqueArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Profile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProfileFindUniqueOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProfileFindUniqueOrThrowArgs>(args: SelectSubset<T, ProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindFirstArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProfileFindFirstArgs>(args?: SelectSubset<T, ProfileFindFirstArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindFirstOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProfileFindFirstOrThrowArgs>(args?: SelectSubset<T, ProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Profiles
     * const profiles = await prisma.profile.findMany()
     * 
     * // Get first 10 Profiles
     * const profiles = await prisma.profile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const profileWithIdOnly = await prisma.profile.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProfileFindManyArgs>(args?: SelectSubset<T, ProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Profile.
     * @param {ProfileCreateArgs} args - Arguments to create a Profile.
     * @example
     * // Create one Profile
     * const Profile = await prisma.profile.create({
     *   data: {
     *     // ... data to create a Profile
     *   }
     * })
     * 
     */
    create<T extends ProfileCreateArgs>(args: SelectSubset<T, ProfileCreateArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Profiles.
     * @param {ProfileCreateManyArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProfileCreateManyArgs>(args?: SelectSubset<T, ProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Profiles and returns the data saved in the database.
     * @param {ProfileCreateManyAndReturnArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Profiles and only return the `id`
     * const profileWithIdOnly = await prisma.profile.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProfileCreateManyAndReturnArgs>(args?: SelectSubset<T, ProfileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Profile.
     * @param {ProfileDeleteArgs} args - Arguments to delete one Profile.
     * @example
     * // Delete one Profile
     * const Profile = await prisma.profile.delete({
     *   where: {
     *     // ... filter to delete one Profile
     *   }
     * })
     * 
     */
    delete<T extends ProfileDeleteArgs>(args: SelectSubset<T, ProfileDeleteArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Profile.
     * @param {ProfileUpdateArgs} args - Arguments to update one Profile.
     * @example
     * // Update one Profile
     * const profile = await prisma.profile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProfileUpdateArgs>(args: SelectSubset<T, ProfileUpdateArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Profiles.
     * @param {ProfileDeleteManyArgs} args - Arguments to filter Profiles to delete.
     * @example
     * // Delete a few Profiles
     * const { count } = await prisma.profile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProfileDeleteManyArgs>(args?: SelectSubset<T, ProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Profiles
     * const profile = await prisma.profile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProfileUpdateManyArgs>(args: SelectSubset<T, ProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles and returns the data updated in the database.
     * @param {ProfileUpdateManyAndReturnArgs} args - Arguments to update many Profiles.
     * @example
     * // Update many Profiles
     * const profile = await prisma.profile.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Profiles and only return the `id`
     * const profileWithIdOnly = await prisma.profile.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProfileUpdateManyAndReturnArgs>(args: SelectSubset<T, ProfileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Profile.
     * @param {ProfileUpsertArgs} args - Arguments to update or create a Profile.
     * @example
     * // Update or create a Profile
     * const profile = await prisma.profile.upsert({
     *   create: {
     *     // ... data to create a Profile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Profile we want to update
     *   }
     * })
     */
    upsert<T extends ProfileUpsertArgs>(args: SelectSubset<T, ProfileUpsertArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileCountArgs} args - Arguments to filter Profiles to count.
     * @example
     * // Count the number of Profiles
     * const count = await prisma.profile.count({
     *   where: {
     *     // ... the filter for the Profiles we want to count
     *   }
     * })
    **/
    count<T extends ProfileCountArgs>(
      args?: Subset<T, ProfileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProfileAggregateArgs>(args: Subset<T, ProfileAggregateArgs>): Prisma.PrismaPromise<GetProfileAggregateType<T>>

    /**
     * Group by Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProfileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProfileGroupByArgs['orderBy'] }
        : { orderBy?: ProfileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Profile model
   */
  readonly fields: ProfileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Profile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProfileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends Profile$userArgs<ExtArgs> = {}>(args?: Subset<T, Profile$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    temple<T extends Profile$templeArgs<ExtArgs> = {}>(args?: Subset<T, Profile$templeArgs<ExtArgs>>): Prisma__Mst_templeClient<$Result.GetResult<Prisma.$Mst_templePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    role<T extends Mst_roleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Mst_roleDefaultArgs<ExtArgs>>): Prisma__Mst_roleClient<$Result.GetResult<Prisma.$Mst_rolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    registrations<T extends Profile$registrationsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$registrationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Ind_event_registrationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Profile model
   */
  interface ProfileFieldRefs {
    readonly id: FieldRef<"Profile", 'Int'>
    readonly user_id: FieldRef<"Profile", 'Int'>
    readonly first_name: FieldRef<"Profile", 'String'>
    readonly last_name: FieldRef<"Profile", 'String'>
    readonly email: FieldRef<"Profile", 'String'>
    readonly phone: FieldRef<"Profile", 'String'>
    readonly aadhar_number: FieldRef<"Profile", 'String'>
    readonly created_at: FieldRef<"Profile", 'DateTime'>
    readonly modified_at: FieldRef<"Profile", 'DateTime'>
    readonly is_deleted: FieldRef<"Profile", 'Boolean'>
    readonly is_verified: FieldRef<"Profile", 'Boolean'>
    readonly temple_id: FieldRef<"Profile", 'Int'>
    readonly dob: FieldRef<"Profile", 'DateTime'>
    readonly gender: FieldRef<"Profile", 'Gender'>
    readonly role_id: FieldRef<"Profile", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Profile findUnique
   */
  export type ProfileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile findUniqueOrThrow
   */
  export type ProfileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile findFirst
   */
  export type ProfileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile findFirstOrThrow
   */
  export type ProfileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile findMany
   */
  export type ProfileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profiles to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile create
   */
  export type ProfileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The data needed to create a Profile.
     */
    data: XOR<ProfileCreateInput, ProfileUncheckedCreateInput>
  }

  /**
   * Profile createMany
   */
  export type ProfileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Profiles.
     */
    data: ProfileCreateManyInput | ProfileCreateManyInput[]
  }

  /**
   * Profile createManyAndReturn
   */
  export type ProfileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * The data used to create many Profiles.
     */
    data: ProfileCreateManyInput | ProfileCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Profile update
   */
  export type ProfileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The data needed to update a Profile.
     */
    data: XOR<ProfileUpdateInput, ProfileUncheckedUpdateInput>
    /**
     * Choose, which Profile to update.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile updateMany
   */
  export type ProfileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Profiles.
     */
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyInput>
    /**
     * Filter which Profiles to update
     */
    where?: ProfileWhereInput
    /**
     * Limit how many Profiles to update.
     */
    limit?: number
  }

  /**
   * Profile updateManyAndReturn
   */
  export type ProfileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * The data used to update Profiles.
     */
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyInput>
    /**
     * Filter which Profiles to update
     */
    where?: ProfileWhereInput
    /**
     * Limit how many Profiles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Profile upsert
   */
  export type ProfileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The filter to search for the Profile to update in case it exists.
     */
    where: ProfileWhereUniqueInput
    /**
     * In case the Profile found by the `where` argument doesn't exist, create a new Profile with this data.
     */
    create: XOR<ProfileCreateInput, ProfileUncheckedCreateInput>
    /**
     * In case the Profile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProfileUpdateInput, ProfileUncheckedUpdateInput>
  }

  /**
   * Profile delete
   */
  export type ProfileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter which Profile to delete.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile deleteMany
   */
  export type ProfileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Profiles to delete
     */
    where?: ProfileWhereInput
    /**
     * Limit how many Profiles to delete.
     */
    limit?: number
  }

  /**
   * Profile.user
   */
  export type Profile$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Profile.temple
   */
  export type Profile$templeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_temple
     */
    select?: Mst_templeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_temple
     */
    omit?: Mst_templeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_templeInclude<ExtArgs> | null
    where?: Mst_templeWhereInput
  }

  /**
   * Profile.registrations
   */
  export type Profile$registrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ind_event_registration
     */
    select?: Ind_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ind_event_registration
     */
    omit?: Ind_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ind_event_registrationInclude<ExtArgs> | null
    where?: Ind_event_registrationWhereInput
    orderBy?: Ind_event_registrationOrderByWithRelationInput | Ind_event_registrationOrderByWithRelationInput[]
    cursor?: Ind_event_registrationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ind_event_registrationScalarFieldEnum | Ind_event_registrationScalarFieldEnum[]
  }

  /**
   * Profile without action
   */
  export type ProfileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
  }


  /**
   * Model Settings
   */

  export type AggregateSettings = {
    _count: SettingsCountAggregateOutputType | null
    _avg: SettingsAvgAggregateOutputType | null
    _sum: SettingsSumAggregateOutputType | null
    _min: SettingsMinAggregateOutputType | null
    _max: SettingsMaxAggregateOutputType | null
  }

  export type SettingsAvgAggregateOutputType = {
    id: number | null
    value: number | null
  }

  export type SettingsSumAggregateOutputType = {
    id: number | null
    value: number | null
  }

  export type SettingsMinAggregateOutputType = {
    id: number | null
    name: string | null
    value: number | null
    created_at: Date | null
    modified_at: Date | null
  }

  export type SettingsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    value: number | null
    created_at: Date | null
    modified_at: Date | null
  }

  export type SettingsCountAggregateOutputType = {
    id: number
    name: number
    value: number
    created_at: number
    modified_at: number
    _all: number
  }


  export type SettingsAvgAggregateInputType = {
    id?: true
    value?: true
  }

  export type SettingsSumAggregateInputType = {
    id?: true
    value?: true
  }

  export type SettingsMinAggregateInputType = {
    id?: true
    name?: true
    value?: true
    created_at?: true
    modified_at?: true
  }

  export type SettingsMaxAggregateInputType = {
    id?: true
    name?: true
    value?: true
    created_at?: true
    modified_at?: true
  }

  export type SettingsCountAggregateInputType = {
    id?: true
    name?: true
    value?: true
    created_at?: true
    modified_at?: true
    _all?: true
  }

  export type SettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Settings to aggregate.
     */
    where?: SettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settings to fetch.
     */
    orderBy?: SettingsOrderByWithRelationInput | SettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Settings
    **/
    _count?: true | SettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SettingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SettingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SettingsMaxAggregateInputType
  }

  export type GetSettingsAggregateType<T extends SettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateSettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSettings[P]>
      : GetScalarType<T[P], AggregateSettings[P]>
  }




  export type SettingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SettingsWhereInput
    orderBy?: SettingsOrderByWithAggregationInput | SettingsOrderByWithAggregationInput[]
    by: SettingsScalarFieldEnum[] | SettingsScalarFieldEnum
    having?: SettingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SettingsCountAggregateInputType | true
    _avg?: SettingsAvgAggregateInputType
    _sum?: SettingsSumAggregateInputType
    _min?: SettingsMinAggregateInputType
    _max?: SettingsMaxAggregateInputType
  }

  export type SettingsGroupByOutputType = {
    id: number
    name: string
    value: number
    created_at: Date
    modified_at: Date
    _count: SettingsCountAggregateOutputType | null
    _avg: SettingsAvgAggregateOutputType | null
    _sum: SettingsSumAggregateOutputType | null
    _min: SettingsMinAggregateOutputType | null
    _max: SettingsMaxAggregateOutputType | null
  }

  type GetSettingsGroupByPayload<T extends SettingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SettingsGroupByOutputType[P]>
            : GetScalarType<T[P], SettingsGroupByOutputType[P]>
        }
      >
    >


  export type SettingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    value?: boolean
    created_at?: boolean
    modified_at?: boolean
  }, ExtArgs["result"]["settings"]>

  export type SettingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    value?: boolean
    created_at?: boolean
    modified_at?: boolean
  }, ExtArgs["result"]["settings"]>

  export type SettingsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    value?: boolean
    created_at?: boolean
    modified_at?: boolean
  }, ExtArgs["result"]["settings"]>

  export type SettingsSelectScalar = {
    id?: boolean
    name?: boolean
    value?: boolean
    created_at?: boolean
    modified_at?: boolean
  }

  export type SettingsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "value" | "created_at" | "modified_at", ExtArgs["result"]["settings"]>

  export type $SettingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Settings"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      value: number
      created_at: Date
      modified_at: Date
    }, ExtArgs["result"]["settings"]>
    composites: {}
  }

  type SettingsGetPayload<S extends boolean | null | undefined | SettingsDefaultArgs> = $Result.GetResult<Prisma.$SettingsPayload, S>

  type SettingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SettingsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SettingsCountAggregateInputType | true
    }

  export interface SettingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Settings'], meta: { name: 'Settings' } }
    /**
     * Find zero or one Settings that matches the filter.
     * @param {SettingsFindUniqueArgs} args - Arguments to find a Settings
     * @example
     * // Get one Settings
     * const settings = await prisma.settings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SettingsFindUniqueArgs>(args: SelectSubset<T, SettingsFindUniqueArgs<ExtArgs>>): Prisma__SettingsClient<$Result.GetResult<Prisma.$SettingsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Settings that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SettingsFindUniqueOrThrowArgs} args - Arguments to find a Settings
     * @example
     * // Get one Settings
     * const settings = await prisma.settings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SettingsFindUniqueOrThrowArgs>(args: SelectSubset<T, SettingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SettingsClient<$Result.GetResult<Prisma.$SettingsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Settings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingsFindFirstArgs} args - Arguments to find a Settings
     * @example
     * // Get one Settings
     * const settings = await prisma.settings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SettingsFindFirstArgs>(args?: SelectSubset<T, SettingsFindFirstArgs<ExtArgs>>): Prisma__SettingsClient<$Result.GetResult<Prisma.$SettingsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Settings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingsFindFirstOrThrowArgs} args - Arguments to find a Settings
     * @example
     * // Get one Settings
     * const settings = await prisma.settings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SettingsFindFirstOrThrowArgs>(args?: SelectSubset<T, SettingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__SettingsClient<$Result.GetResult<Prisma.$SettingsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Settings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Settings
     * const settings = await prisma.settings.findMany()
     * 
     * // Get first 10 Settings
     * const settings = await prisma.settings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const settingsWithIdOnly = await prisma.settings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SettingsFindManyArgs>(args?: SelectSubset<T, SettingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SettingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Settings.
     * @param {SettingsCreateArgs} args - Arguments to create a Settings.
     * @example
     * // Create one Settings
     * const Settings = await prisma.settings.create({
     *   data: {
     *     // ... data to create a Settings
     *   }
     * })
     * 
     */
    create<T extends SettingsCreateArgs>(args: SelectSubset<T, SettingsCreateArgs<ExtArgs>>): Prisma__SettingsClient<$Result.GetResult<Prisma.$SettingsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Settings.
     * @param {SettingsCreateManyArgs} args - Arguments to create many Settings.
     * @example
     * // Create many Settings
     * const settings = await prisma.settings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SettingsCreateManyArgs>(args?: SelectSubset<T, SettingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Settings and returns the data saved in the database.
     * @param {SettingsCreateManyAndReturnArgs} args - Arguments to create many Settings.
     * @example
     * // Create many Settings
     * const settings = await prisma.settings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Settings and only return the `id`
     * const settingsWithIdOnly = await prisma.settings.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SettingsCreateManyAndReturnArgs>(args?: SelectSubset<T, SettingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SettingsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Settings.
     * @param {SettingsDeleteArgs} args - Arguments to delete one Settings.
     * @example
     * // Delete one Settings
     * const Settings = await prisma.settings.delete({
     *   where: {
     *     // ... filter to delete one Settings
     *   }
     * })
     * 
     */
    delete<T extends SettingsDeleteArgs>(args: SelectSubset<T, SettingsDeleteArgs<ExtArgs>>): Prisma__SettingsClient<$Result.GetResult<Prisma.$SettingsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Settings.
     * @param {SettingsUpdateArgs} args - Arguments to update one Settings.
     * @example
     * // Update one Settings
     * const settings = await prisma.settings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SettingsUpdateArgs>(args: SelectSubset<T, SettingsUpdateArgs<ExtArgs>>): Prisma__SettingsClient<$Result.GetResult<Prisma.$SettingsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Settings.
     * @param {SettingsDeleteManyArgs} args - Arguments to filter Settings to delete.
     * @example
     * // Delete a few Settings
     * const { count } = await prisma.settings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SettingsDeleteManyArgs>(args?: SelectSubset<T, SettingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Settings
     * const settings = await prisma.settings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SettingsUpdateManyArgs>(args: SelectSubset<T, SettingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Settings and returns the data updated in the database.
     * @param {SettingsUpdateManyAndReturnArgs} args - Arguments to update many Settings.
     * @example
     * // Update many Settings
     * const settings = await prisma.settings.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Settings and only return the `id`
     * const settingsWithIdOnly = await prisma.settings.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SettingsUpdateManyAndReturnArgs>(args: SelectSubset<T, SettingsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SettingsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Settings.
     * @param {SettingsUpsertArgs} args - Arguments to update or create a Settings.
     * @example
     * // Update or create a Settings
     * const settings = await prisma.settings.upsert({
     *   create: {
     *     // ... data to create a Settings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Settings we want to update
     *   }
     * })
     */
    upsert<T extends SettingsUpsertArgs>(args: SelectSubset<T, SettingsUpsertArgs<ExtArgs>>): Prisma__SettingsClient<$Result.GetResult<Prisma.$SettingsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingsCountArgs} args - Arguments to filter Settings to count.
     * @example
     * // Count the number of Settings
     * const count = await prisma.settings.count({
     *   where: {
     *     // ... the filter for the Settings we want to count
     *   }
     * })
    **/
    count<T extends SettingsCountArgs>(
      args?: Subset<T, SettingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SettingsAggregateArgs>(args: Subset<T, SettingsAggregateArgs>): Prisma.PrismaPromise<GetSettingsAggregateType<T>>

    /**
     * Group by Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SettingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SettingsGroupByArgs['orderBy'] }
        : { orderBy?: SettingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SettingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Settings model
   */
  readonly fields: SettingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Settings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SettingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Settings model
   */
  interface SettingsFieldRefs {
    readonly id: FieldRef<"Settings", 'Int'>
    readonly name: FieldRef<"Settings", 'String'>
    readonly value: FieldRef<"Settings", 'Int'>
    readonly created_at: FieldRef<"Settings", 'DateTime'>
    readonly modified_at: FieldRef<"Settings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Settings findUnique
   */
  export type SettingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settings
     */
    select?: SettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settings
     */
    omit?: SettingsOmit<ExtArgs> | null
    /**
     * Filter, which Settings to fetch.
     */
    where: SettingsWhereUniqueInput
  }

  /**
   * Settings findUniqueOrThrow
   */
  export type SettingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settings
     */
    select?: SettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settings
     */
    omit?: SettingsOmit<ExtArgs> | null
    /**
     * Filter, which Settings to fetch.
     */
    where: SettingsWhereUniqueInput
  }

  /**
   * Settings findFirst
   */
  export type SettingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settings
     */
    select?: SettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settings
     */
    omit?: SettingsOmit<ExtArgs> | null
    /**
     * Filter, which Settings to fetch.
     */
    where?: SettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settings to fetch.
     */
    orderBy?: SettingsOrderByWithRelationInput | SettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Settings.
     */
    cursor?: SettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Settings.
     */
    distinct?: SettingsScalarFieldEnum | SettingsScalarFieldEnum[]
  }

  /**
   * Settings findFirstOrThrow
   */
  export type SettingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settings
     */
    select?: SettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settings
     */
    omit?: SettingsOmit<ExtArgs> | null
    /**
     * Filter, which Settings to fetch.
     */
    where?: SettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settings to fetch.
     */
    orderBy?: SettingsOrderByWithRelationInput | SettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Settings.
     */
    cursor?: SettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Settings.
     */
    distinct?: SettingsScalarFieldEnum | SettingsScalarFieldEnum[]
  }

  /**
   * Settings findMany
   */
  export type SettingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settings
     */
    select?: SettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settings
     */
    omit?: SettingsOmit<ExtArgs> | null
    /**
     * Filter, which Settings to fetch.
     */
    where?: SettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settings to fetch.
     */
    orderBy?: SettingsOrderByWithRelationInput | SettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Settings.
     */
    cursor?: SettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settings.
     */
    skip?: number
    distinct?: SettingsScalarFieldEnum | SettingsScalarFieldEnum[]
  }

  /**
   * Settings create
   */
  export type SettingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settings
     */
    select?: SettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settings
     */
    omit?: SettingsOmit<ExtArgs> | null
    /**
     * The data needed to create a Settings.
     */
    data: XOR<SettingsCreateInput, SettingsUncheckedCreateInput>
  }

  /**
   * Settings createMany
   */
  export type SettingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Settings.
     */
    data: SettingsCreateManyInput | SettingsCreateManyInput[]
  }

  /**
   * Settings createManyAndReturn
   */
  export type SettingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settings
     */
    select?: SettingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Settings
     */
    omit?: SettingsOmit<ExtArgs> | null
    /**
     * The data used to create many Settings.
     */
    data: SettingsCreateManyInput | SettingsCreateManyInput[]
  }

  /**
   * Settings update
   */
  export type SettingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settings
     */
    select?: SettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settings
     */
    omit?: SettingsOmit<ExtArgs> | null
    /**
     * The data needed to update a Settings.
     */
    data: XOR<SettingsUpdateInput, SettingsUncheckedUpdateInput>
    /**
     * Choose, which Settings to update.
     */
    where: SettingsWhereUniqueInput
  }

  /**
   * Settings updateMany
   */
  export type SettingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Settings.
     */
    data: XOR<SettingsUpdateManyMutationInput, SettingsUncheckedUpdateManyInput>
    /**
     * Filter which Settings to update
     */
    where?: SettingsWhereInput
    /**
     * Limit how many Settings to update.
     */
    limit?: number
  }

  /**
   * Settings updateManyAndReturn
   */
  export type SettingsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settings
     */
    select?: SettingsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Settings
     */
    omit?: SettingsOmit<ExtArgs> | null
    /**
     * The data used to update Settings.
     */
    data: XOR<SettingsUpdateManyMutationInput, SettingsUncheckedUpdateManyInput>
    /**
     * Filter which Settings to update
     */
    where?: SettingsWhereInput
    /**
     * Limit how many Settings to update.
     */
    limit?: number
  }

  /**
   * Settings upsert
   */
  export type SettingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settings
     */
    select?: SettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settings
     */
    omit?: SettingsOmit<ExtArgs> | null
    /**
     * The filter to search for the Settings to update in case it exists.
     */
    where: SettingsWhereUniqueInput
    /**
     * In case the Settings found by the `where` argument doesn't exist, create a new Settings with this data.
     */
    create: XOR<SettingsCreateInput, SettingsUncheckedCreateInput>
    /**
     * In case the Settings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SettingsUpdateInput, SettingsUncheckedUpdateInput>
  }

  /**
   * Settings delete
   */
  export type SettingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settings
     */
    select?: SettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settings
     */
    omit?: SettingsOmit<ExtArgs> | null
    /**
     * Filter which Settings to delete.
     */
    where: SettingsWhereUniqueInput
  }

  /**
   * Settings deleteMany
   */
  export type SettingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Settings to delete
     */
    where?: SettingsWhereInput
    /**
     * Limit how many Settings to delete.
     */
    limit?: number
  }

  /**
   * Settings without action
   */
  export type SettingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Settings
     */
    select?: SettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Settings
     */
    omit?: SettingsOmit<ExtArgs> | null
  }


  /**
   * Model Team_event_registration
   */

  export type AggregateTeam_event_registration = {
    _count: Team_event_registrationCountAggregateOutputType | null
    _avg: Team_event_registrationAvgAggregateOutputType | null
    _sum: Team_event_registrationSumAggregateOutputType | null
    _min: Team_event_registrationMinAggregateOutputType | null
    _max: Team_event_registrationMaxAggregateOutputType | null
  }

  export type Team_event_registrationAvgAggregateOutputType = {
    id: number | null
    temple_id: number | null
    event_result_id: number | null
    event_id: number | null
  }

  export type Team_event_registrationSumAggregateOutputType = {
    id: number | null
    temple_id: number | null
    event_result_id: number | null
    event_id: number | null
  }

  export type Team_event_registrationMinAggregateOutputType = {
    id: number | null
    temple_id: number | null
    event_result_id: number | null
    member_user_ids: string | null
    created_at: Date | null
    modified_at: Date | null
    is_deleted: boolean | null
    event_id: number | null
    status: $Enums.RegistrationStatus | null
  }

  export type Team_event_registrationMaxAggregateOutputType = {
    id: number | null
    temple_id: number | null
    event_result_id: number | null
    member_user_ids: string | null
    created_at: Date | null
    modified_at: Date | null
    is_deleted: boolean | null
    event_id: number | null
    status: $Enums.RegistrationStatus | null
  }

  export type Team_event_registrationCountAggregateOutputType = {
    id: number
    temple_id: number
    event_result_id: number
    member_user_ids: number
    created_at: number
    modified_at: number
    is_deleted: number
    event_id: number
    status: number
    _all: number
  }


  export type Team_event_registrationAvgAggregateInputType = {
    id?: true
    temple_id?: true
    event_result_id?: true
    event_id?: true
  }

  export type Team_event_registrationSumAggregateInputType = {
    id?: true
    temple_id?: true
    event_result_id?: true
    event_id?: true
  }

  export type Team_event_registrationMinAggregateInputType = {
    id?: true
    temple_id?: true
    event_result_id?: true
    member_user_ids?: true
    created_at?: true
    modified_at?: true
    is_deleted?: true
    event_id?: true
    status?: true
  }

  export type Team_event_registrationMaxAggregateInputType = {
    id?: true
    temple_id?: true
    event_result_id?: true
    member_user_ids?: true
    created_at?: true
    modified_at?: true
    is_deleted?: true
    event_id?: true
    status?: true
  }

  export type Team_event_registrationCountAggregateInputType = {
    id?: true
    temple_id?: true
    event_result_id?: true
    member_user_ids?: true
    created_at?: true
    modified_at?: true
    is_deleted?: true
    event_id?: true
    status?: true
    _all?: true
  }

  export type Team_event_registrationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Team_event_registration to aggregate.
     */
    where?: Team_event_registrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Team_event_registrations to fetch.
     */
    orderBy?: Team_event_registrationOrderByWithRelationInput | Team_event_registrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Team_event_registrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Team_event_registrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Team_event_registrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Team_event_registrations
    **/
    _count?: true | Team_event_registrationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Team_event_registrationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Team_event_registrationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Team_event_registrationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Team_event_registrationMaxAggregateInputType
  }

  export type GetTeam_event_registrationAggregateType<T extends Team_event_registrationAggregateArgs> = {
        [P in keyof T & keyof AggregateTeam_event_registration]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTeam_event_registration[P]>
      : GetScalarType<T[P], AggregateTeam_event_registration[P]>
  }




  export type Team_event_registrationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Team_event_registrationWhereInput
    orderBy?: Team_event_registrationOrderByWithAggregationInput | Team_event_registrationOrderByWithAggregationInput[]
    by: Team_event_registrationScalarFieldEnum[] | Team_event_registrationScalarFieldEnum
    having?: Team_event_registrationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Team_event_registrationCountAggregateInputType | true
    _avg?: Team_event_registrationAvgAggregateInputType
    _sum?: Team_event_registrationSumAggregateInputType
    _min?: Team_event_registrationMinAggregateInputType
    _max?: Team_event_registrationMaxAggregateInputType
  }

  export type Team_event_registrationGroupByOutputType = {
    id: number
    temple_id: number
    event_result_id: number | null
    member_user_ids: string | null
    created_at: Date
    modified_at: Date
    is_deleted: boolean
    event_id: number
    status: $Enums.RegistrationStatus
    _count: Team_event_registrationCountAggregateOutputType | null
    _avg: Team_event_registrationAvgAggregateOutputType | null
    _sum: Team_event_registrationSumAggregateOutputType | null
    _min: Team_event_registrationMinAggregateOutputType | null
    _max: Team_event_registrationMaxAggregateOutputType | null
  }

  type GetTeam_event_registrationGroupByPayload<T extends Team_event_registrationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Team_event_registrationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Team_event_registrationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Team_event_registrationGroupByOutputType[P]>
            : GetScalarType<T[P], Team_event_registrationGroupByOutputType[P]>
        }
      >
    >


  export type Team_event_registrationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    temple_id?: boolean
    event_result_id?: boolean
    member_user_ids?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
    event_id?: boolean
    status?: boolean
    temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
    event_result?: boolean | Team_event_registration$event_resultArgs<ExtArgs>
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["team_event_registration"]>

  export type Team_event_registrationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    temple_id?: boolean
    event_result_id?: boolean
    member_user_ids?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
    event_id?: boolean
    status?: boolean
    temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
    event_result?: boolean | Team_event_registration$event_resultArgs<ExtArgs>
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["team_event_registration"]>

  export type Team_event_registrationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    temple_id?: boolean
    event_result_id?: boolean
    member_user_ids?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
    event_id?: boolean
    status?: boolean
    temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
    event_result?: boolean | Team_event_registration$event_resultArgs<ExtArgs>
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["team_event_registration"]>

  export type Team_event_registrationSelectScalar = {
    id?: boolean
    temple_id?: boolean
    event_result_id?: boolean
    member_user_ids?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
    event_id?: boolean
    status?: boolean
  }

  export type Team_event_registrationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "temple_id" | "event_result_id" | "member_user_ids" | "created_at" | "modified_at" | "is_deleted" | "event_id" | "status", ExtArgs["result"]["team_event_registration"]>
  export type Team_event_registrationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
    event_result?: boolean | Team_event_registration$event_resultArgs<ExtArgs>
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
  }
  export type Team_event_registrationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
    event_result?: boolean | Team_event_registration$event_resultArgs<ExtArgs>
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
  }
  export type Team_event_registrationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    temple?: boolean | Mst_templeDefaultArgs<ExtArgs>
    event_result?: boolean | Team_event_registration$event_resultArgs<ExtArgs>
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
  }

  export type $Team_event_registrationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Team_event_registration"
    objects: {
      temple: Prisma.$Mst_templePayload<ExtArgs>
      event_result: Prisma.$Mst_event_resultPayload<ExtArgs> | null
      event: Prisma.$Mst_eventPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      temple_id: number
      event_result_id: number | null
      member_user_ids: string | null
      created_at: Date
      modified_at: Date
      is_deleted: boolean
      event_id: number
      status: $Enums.RegistrationStatus
    }, ExtArgs["result"]["team_event_registration"]>
    composites: {}
  }

  type Team_event_registrationGetPayload<S extends boolean | null | undefined | Team_event_registrationDefaultArgs> = $Result.GetResult<Prisma.$Team_event_registrationPayload, S>

  type Team_event_registrationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Team_event_registrationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Team_event_registrationCountAggregateInputType | true
    }

  export interface Team_event_registrationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Team_event_registration'], meta: { name: 'Team_event_registration' } }
    /**
     * Find zero or one Team_event_registration that matches the filter.
     * @param {Team_event_registrationFindUniqueArgs} args - Arguments to find a Team_event_registration
     * @example
     * // Get one Team_event_registration
     * const team_event_registration = await prisma.team_event_registration.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Team_event_registrationFindUniqueArgs>(args: SelectSubset<T, Team_event_registrationFindUniqueArgs<ExtArgs>>): Prisma__Team_event_registrationClient<$Result.GetResult<Prisma.$Team_event_registrationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Team_event_registration that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Team_event_registrationFindUniqueOrThrowArgs} args - Arguments to find a Team_event_registration
     * @example
     * // Get one Team_event_registration
     * const team_event_registration = await prisma.team_event_registration.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Team_event_registrationFindUniqueOrThrowArgs>(args: SelectSubset<T, Team_event_registrationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Team_event_registrationClient<$Result.GetResult<Prisma.$Team_event_registrationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Team_event_registration that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Team_event_registrationFindFirstArgs} args - Arguments to find a Team_event_registration
     * @example
     * // Get one Team_event_registration
     * const team_event_registration = await prisma.team_event_registration.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Team_event_registrationFindFirstArgs>(args?: SelectSubset<T, Team_event_registrationFindFirstArgs<ExtArgs>>): Prisma__Team_event_registrationClient<$Result.GetResult<Prisma.$Team_event_registrationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Team_event_registration that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Team_event_registrationFindFirstOrThrowArgs} args - Arguments to find a Team_event_registration
     * @example
     * // Get one Team_event_registration
     * const team_event_registration = await prisma.team_event_registration.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Team_event_registrationFindFirstOrThrowArgs>(args?: SelectSubset<T, Team_event_registrationFindFirstOrThrowArgs<ExtArgs>>): Prisma__Team_event_registrationClient<$Result.GetResult<Prisma.$Team_event_registrationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Team_event_registrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Team_event_registrationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Team_event_registrations
     * const team_event_registrations = await prisma.team_event_registration.findMany()
     * 
     * // Get first 10 Team_event_registrations
     * const team_event_registrations = await prisma.team_event_registration.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const team_event_registrationWithIdOnly = await prisma.team_event_registration.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Team_event_registrationFindManyArgs>(args?: SelectSubset<T, Team_event_registrationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Team_event_registrationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Team_event_registration.
     * @param {Team_event_registrationCreateArgs} args - Arguments to create a Team_event_registration.
     * @example
     * // Create one Team_event_registration
     * const Team_event_registration = await prisma.team_event_registration.create({
     *   data: {
     *     // ... data to create a Team_event_registration
     *   }
     * })
     * 
     */
    create<T extends Team_event_registrationCreateArgs>(args: SelectSubset<T, Team_event_registrationCreateArgs<ExtArgs>>): Prisma__Team_event_registrationClient<$Result.GetResult<Prisma.$Team_event_registrationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Team_event_registrations.
     * @param {Team_event_registrationCreateManyArgs} args - Arguments to create many Team_event_registrations.
     * @example
     * // Create many Team_event_registrations
     * const team_event_registration = await prisma.team_event_registration.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Team_event_registrationCreateManyArgs>(args?: SelectSubset<T, Team_event_registrationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Team_event_registrations and returns the data saved in the database.
     * @param {Team_event_registrationCreateManyAndReturnArgs} args - Arguments to create many Team_event_registrations.
     * @example
     * // Create many Team_event_registrations
     * const team_event_registration = await prisma.team_event_registration.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Team_event_registrations and only return the `id`
     * const team_event_registrationWithIdOnly = await prisma.team_event_registration.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Team_event_registrationCreateManyAndReturnArgs>(args?: SelectSubset<T, Team_event_registrationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Team_event_registrationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Team_event_registration.
     * @param {Team_event_registrationDeleteArgs} args - Arguments to delete one Team_event_registration.
     * @example
     * // Delete one Team_event_registration
     * const Team_event_registration = await prisma.team_event_registration.delete({
     *   where: {
     *     // ... filter to delete one Team_event_registration
     *   }
     * })
     * 
     */
    delete<T extends Team_event_registrationDeleteArgs>(args: SelectSubset<T, Team_event_registrationDeleteArgs<ExtArgs>>): Prisma__Team_event_registrationClient<$Result.GetResult<Prisma.$Team_event_registrationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Team_event_registration.
     * @param {Team_event_registrationUpdateArgs} args - Arguments to update one Team_event_registration.
     * @example
     * // Update one Team_event_registration
     * const team_event_registration = await prisma.team_event_registration.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Team_event_registrationUpdateArgs>(args: SelectSubset<T, Team_event_registrationUpdateArgs<ExtArgs>>): Prisma__Team_event_registrationClient<$Result.GetResult<Prisma.$Team_event_registrationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Team_event_registrations.
     * @param {Team_event_registrationDeleteManyArgs} args - Arguments to filter Team_event_registrations to delete.
     * @example
     * // Delete a few Team_event_registrations
     * const { count } = await prisma.team_event_registration.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Team_event_registrationDeleteManyArgs>(args?: SelectSubset<T, Team_event_registrationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Team_event_registrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Team_event_registrationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Team_event_registrations
     * const team_event_registration = await prisma.team_event_registration.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Team_event_registrationUpdateManyArgs>(args: SelectSubset<T, Team_event_registrationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Team_event_registrations and returns the data updated in the database.
     * @param {Team_event_registrationUpdateManyAndReturnArgs} args - Arguments to update many Team_event_registrations.
     * @example
     * // Update many Team_event_registrations
     * const team_event_registration = await prisma.team_event_registration.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Team_event_registrations and only return the `id`
     * const team_event_registrationWithIdOnly = await prisma.team_event_registration.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Team_event_registrationUpdateManyAndReturnArgs>(args: SelectSubset<T, Team_event_registrationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Team_event_registrationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Team_event_registration.
     * @param {Team_event_registrationUpsertArgs} args - Arguments to update or create a Team_event_registration.
     * @example
     * // Update or create a Team_event_registration
     * const team_event_registration = await prisma.team_event_registration.upsert({
     *   create: {
     *     // ... data to create a Team_event_registration
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Team_event_registration we want to update
     *   }
     * })
     */
    upsert<T extends Team_event_registrationUpsertArgs>(args: SelectSubset<T, Team_event_registrationUpsertArgs<ExtArgs>>): Prisma__Team_event_registrationClient<$Result.GetResult<Prisma.$Team_event_registrationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Team_event_registrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Team_event_registrationCountArgs} args - Arguments to filter Team_event_registrations to count.
     * @example
     * // Count the number of Team_event_registrations
     * const count = await prisma.team_event_registration.count({
     *   where: {
     *     // ... the filter for the Team_event_registrations we want to count
     *   }
     * })
    **/
    count<T extends Team_event_registrationCountArgs>(
      args?: Subset<T, Team_event_registrationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Team_event_registrationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Team_event_registration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Team_event_registrationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Team_event_registrationAggregateArgs>(args: Subset<T, Team_event_registrationAggregateArgs>): Prisma.PrismaPromise<GetTeam_event_registrationAggregateType<T>>

    /**
     * Group by Team_event_registration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Team_event_registrationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Team_event_registrationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Team_event_registrationGroupByArgs['orderBy'] }
        : { orderBy?: Team_event_registrationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Team_event_registrationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTeam_event_registrationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Team_event_registration model
   */
  readonly fields: Team_event_registrationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Team_event_registration.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Team_event_registrationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    temple<T extends Mst_templeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Mst_templeDefaultArgs<ExtArgs>>): Prisma__Mst_templeClient<$Result.GetResult<Prisma.$Mst_templePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    event_result<T extends Team_event_registration$event_resultArgs<ExtArgs> = {}>(args?: Subset<T, Team_event_registration$event_resultArgs<ExtArgs>>): Prisma__Mst_event_resultClient<$Result.GetResult<Prisma.$Mst_event_resultPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    event<T extends Mst_eventDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Mst_eventDefaultArgs<ExtArgs>>): Prisma__Mst_eventClient<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Team_event_registration model
   */
  interface Team_event_registrationFieldRefs {
    readonly id: FieldRef<"Team_event_registration", 'Int'>
    readonly temple_id: FieldRef<"Team_event_registration", 'Int'>
    readonly event_result_id: FieldRef<"Team_event_registration", 'Int'>
    readonly member_user_ids: FieldRef<"Team_event_registration", 'String'>
    readonly created_at: FieldRef<"Team_event_registration", 'DateTime'>
    readonly modified_at: FieldRef<"Team_event_registration", 'DateTime'>
    readonly is_deleted: FieldRef<"Team_event_registration", 'Boolean'>
    readonly event_id: FieldRef<"Team_event_registration", 'Int'>
    readonly status: FieldRef<"Team_event_registration", 'RegistrationStatus'>
  }
    

  // Custom InputTypes
  /**
   * Team_event_registration findUnique
   */
  export type Team_event_registrationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_event_registration
     */
    select?: Team_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Team_event_registration
     */
    omit?: Team_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Team_event_registrationInclude<ExtArgs> | null
    /**
     * Filter, which Team_event_registration to fetch.
     */
    where: Team_event_registrationWhereUniqueInput
  }

  /**
   * Team_event_registration findUniqueOrThrow
   */
  export type Team_event_registrationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_event_registration
     */
    select?: Team_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Team_event_registration
     */
    omit?: Team_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Team_event_registrationInclude<ExtArgs> | null
    /**
     * Filter, which Team_event_registration to fetch.
     */
    where: Team_event_registrationWhereUniqueInput
  }

  /**
   * Team_event_registration findFirst
   */
  export type Team_event_registrationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_event_registration
     */
    select?: Team_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Team_event_registration
     */
    omit?: Team_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Team_event_registrationInclude<ExtArgs> | null
    /**
     * Filter, which Team_event_registration to fetch.
     */
    where?: Team_event_registrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Team_event_registrations to fetch.
     */
    orderBy?: Team_event_registrationOrderByWithRelationInput | Team_event_registrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Team_event_registrations.
     */
    cursor?: Team_event_registrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Team_event_registrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Team_event_registrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Team_event_registrations.
     */
    distinct?: Team_event_registrationScalarFieldEnum | Team_event_registrationScalarFieldEnum[]
  }

  /**
   * Team_event_registration findFirstOrThrow
   */
  export type Team_event_registrationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_event_registration
     */
    select?: Team_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Team_event_registration
     */
    omit?: Team_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Team_event_registrationInclude<ExtArgs> | null
    /**
     * Filter, which Team_event_registration to fetch.
     */
    where?: Team_event_registrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Team_event_registrations to fetch.
     */
    orderBy?: Team_event_registrationOrderByWithRelationInput | Team_event_registrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Team_event_registrations.
     */
    cursor?: Team_event_registrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Team_event_registrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Team_event_registrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Team_event_registrations.
     */
    distinct?: Team_event_registrationScalarFieldEnum | Team_event_registrationScalarFieldEnum[]
  }

  /**
   * Team_event_registration findMany
   */
  export type Team_event_registrationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_event_registration
     */
    select?: Team_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Team_event_registration
     */
    omit?: Team_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Team_event_registrationInclude<ExtArgs> | null
    /**
     * Filter, which Team_event_registrations to fetch.
     */
    where?: Team_event_registrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Team_event_registrations to fetch.
     */
    orderBy?: Team_event_registrationOrderByWithRelationInput | Team_event_registrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Team_event_registrations.
     */
    cursor?: Team_event_registrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Team_event_registrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Team_event_registrations.
     */
    skip?: number
    distinct?: Team_event_registrationScalarFieldEnum | Team_event_registrationScalarFieldEnum[]
  }

  /**
   * Team_event_registration create
   */
  export type Team_event_registrationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_event_registration
     */
    select?: Team_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Team_event_registration
     */
    omit?: Team_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Team_event_registrationInclude<ExtArgs> | null
    /**
     * The data needed to create a Team_event_registration.
     */
    data: XOR<Team_event_registrationCreateInput, Team_event_registrationUncheckedCreateInput>
  }

  /**
   * Team_event_registration createMany
   */
  export type Team_event_registrationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Team_event_registrations.
     */
    data: Team_event_registrationCreateManyInput | Team_event_registrationCreateManyInput[]
  }

  /**
   * Team_event_registration createManyAndReturn
   */
  export type Team_event_registrationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_event_registration
     */
    select?: Team_event_registrationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Team_event_registration
     */
    omit?: Team_event_registrationOmit<ExtArgs> | null
    /**
     * The data used to create many Team_event_registrations.
     */
    data: Team_event_registrationCreateManyInput | Team_event_registrationCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Team_event_registrationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Team_event_registration update
   */
  export type Team_event_registrationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_event_registration
     */
    select?: Team_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Team_event_registration
     */
    omit?: Team_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Team_event_registrationInclude<ExtArgs> | null
    /**
     * The data needed to update a Team_event_registration.
     */
    data: XOR<Team_event_registrationUpdateInput, Team_event_registrationUncheckedUpdateInput>
    /**
     * Choose, which Team_event_registration to update.
     */
    where: Team_event_registrationWhereUniqueInput
  }

  /**
   * Team_event_registration updateMany
   */
  export type Team_event_registrationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Team_event_registrations.
     */
    data: XOR<Team_event_registrationUpdateManyMutationInput, Team_event_registrationUncheckedUpdateManyInput>
    /**
     * Filter which Team_event_registrations to update
     */
    where?: Team_event_registrationWhereInput
    /**
     * Limit how many Team_event_registrations to update.
     */
    limit?: number
  }

  /**
   * Team_event_registration updateManyAndReturn
   */
  export type Team_event_registrationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_event_registration
     */
    select?: Team_event_registrationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Team_event_registration
     */
    omit?: Team_event_registrationOmit<ExtArgs> | null
    /**
     * The data used to update Team_event_registrations.
     */
    data: XOR<Team_event_registrationUpdateManyMutationInput, Team_event_registrationUncheckedUpdateManyInput>
    /**
     * Filter which Team_event_registrations to update
     */
    where?: Team_event_registrationWhereInput
    /**
     * Limit how many Team_event_registrations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Team_event_registrationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Team_event_registration upsert
   */
  export type Team_event_registrationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_event_registration
     */
    select?: Team_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Team_event_registration
     */
    omit?: Team_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Team_event_registrationInclude<ExtArgs> | null
    /**
     * The filter to search for the Team_event_registration to update in case it exists.
     */
    where: Team_event_registrationWhereUniqueInput
    /**
     * In case the Team_event_registration found by the `where` argument doesn't exist, create a new Team_event_registration with this data.
     */
    create: XOR<Team_event_registrationCreateInput, Team_event_registrationUncheckedCreateInput>
    /**
     * In case the Team_event_registration was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Team_event_registrationUpdateInput, Team_event_registrationUncheckedUpdateInput>
  }

  /**
   * Team_event_registration delete
   */
  export type Team_event_registrationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_event_registration
     */
    select?: Team_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Team_event_registration
     */
    omit?: Team_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Team_event_registrationInclude<ExtArgs> | null
    /**
     * Filter which Team_event_registration to delete.
     */
    where: Team_event_registrationWhereUniqueInput
  }

  /**
   * Team_event_registration deleteMany
   */
  export type Team_event_registrationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Team_event_registrations to delete
     */
    where?: Team_event_registrationWhereInput
    /**
     * Limit how many Team_event_registrations to delete.
     */
    limit?: number
  }

  /**
   * Team_event_registration.event_result
   */
  export type Team_event_registration$event_resultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mst_event_result
     */
    select?: Mst_event_resultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mst_event_result
     */
    omit?: Mst_event_resultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Mst_event_resultInclude<ExtArgs> | null
    where?: Mst_event_resultWhereInput
  }

  /**
   * Team_event_registration without action
   */
  export type Team_event_registrationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_event_registration
     */
    select?: Team_event_registrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Team_event_registration
     */
    omit?: Team_event_registrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Team_event_registrationInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    email: string | null
    created_at: Date | null
    modified_at: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    email: string | null
    created_at: Date | null
    modified_at: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    username: number
    password: number
    email: number
    created_at: number
    modified_at: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    email?: true
    created_at?: true
    modified_at?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    email?: true
    created_at?: true
    modified_at?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    email?: true
    created_at?: true
    modified_at?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    username: string
    password: string
    email: string | null
    created_at: Date
    modified_at: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    created_at?: boolean
    modified_at?: boolean
    profile?: boolean | User$profileArgs<ExtArgs>
    user_roles?: boolean | User$user_rolesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    created_at?: boolean
    modified_at?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    created_at?: boolean
    modified_at?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    created_at?: boolean
    modified_at?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "password" | "email" | "created_at" | "modified_at", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    profile?: boolean | User$profileArgs<ExtArgs>
    user_roles?: boolean | User$user_rolesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      profile: Prisma.$ProfilePayload<ExtArgs> | null
      user_roles: Prisma.$User_rolePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      password: string
      email: string | null
      created_at: Date
      modified_at: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    profile<T extends User$profileArgs<ExtArgs> = {}>(args?: Subset<T, User$profileArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_roles<T extends User$user_rolesArgs<ExtArgs> = {}>(args?: Subset<T, User$user_rolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$User_rolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly username: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly created_at: FieldRef<"User", 'DateTime'>
    readonly modified_at: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.profile
   */
  export type User$profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
  }

  /**
   * User.user_roles
   */
  export type User$user_rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_role
     */
    select?: User_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_role
     */
    omit?: User_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_roleInclude<ExtArgs> | null
    where?: User_roleWhereInput
    orderBy?: User_roleOrderByWithRelationInput | User_roleOrderByWithRelationInput[]
    cursor?: User_roleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_roleScalarFieldEnum | User_roleScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model User_role
   */

  export type AggregateUser_role = {
    _count: User_roleCountAggregateOutputType | null
    _avg: User_roleAvgAggregateOutputType | null
    _sum: User_roleSumAggregateOutputType | null
    _min: User_roleMinAggregateOutputType | null
    _max: User_roleMaxAggregateOutputType | null
  }

  export type User_roleAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    role_id: number | null
  }

  export type User_roleSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    role_id: number | null
  }

  export type User_roleMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    role_id: number | null
  }

  export type User_roleMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    role_id: number | null
  }

  export type User_roleCountAggregateOutputType = {
    id: number
    user_id: number
    role_id: number
    _all: number
  }


  export type User_roleAvgAggregateInputType = {
    id?: true
    user_id?: true
    role_id?: true
  }

  export type User_roleSumAggregateInputType = {
    id?: true
    user_id?: true
    role_id?: true
  }

  export type User_roleMinAggregateInputType = {
    id?: true
    user_id?: true
    role_id?: true
  }

  export type User_roleMaxAggregateInputType = {
    id?: true
    user_id?: true
    role_id?: true
  }

  export type User_roleCountAggregateInputType = {
    id?: true
    user_id?: true
    role_id?: true
    _all?: true
  }

  export type User_roleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User_role to aggregate.
     */
    where?: User_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_roles to fetch.
     */
    orderBy?: User_roleOrderByWithRelationInput | User_roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: User_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned User_roles
    **/
    _count?: true | User_roleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_roleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_roleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_roleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_roleMaxAggregateInputType
  }

  export type GetUser_roleAggregateType<T extends User_roleAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_role]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_role[P]>
      : GetScalarType<T[P], AggregateUser_role[P]>
  }




  export type User_roleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: User_roleWhereInput
    orderBy?: User_roleOrderByWithAggregationInput | User_roleOrderByWithAggregationInput[]
    by: User_roleScalarFieldEnum[] | User_roleScalarFieldEnum
    having?: User_roleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_roleCountAggregateInputType | true
    _avg?: User_roleAvgAggregateInputType
    _sum?: User_roleSumAggregateInputType
    _min?: User_roleMinAggregateInputType
    _max?: User_roleMaxAggregateInputType
  }

  export type User_roleGroupByOutputType = {
    id: number
    user_id: number
    role_id: number
    _count: User_roleCountAggregateOutputType | null
    _avg: User_roleAvgAggregateOutputType | null
    _sum: User_roleSumAggregateOutputType | null
    _min: User_roleMinAggregateOutputType | null
    _max: User_roleMaxAggregateOutputType | null
  }

  type GetUser_roleGroupByPayload<T extends User_roleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_roleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_roleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_roleGroupByOutputType[P]>
            : GetScalarType<T[P], User_roleGroupByOutputType[P]>
        }
      >
    >


  export type User_roleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    role_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    role?: boolean | Mst_roleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_role"]>

  export type User_roleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    role_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    role?: boolean | Mst_roleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_role"]>

  export type User_roleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    role_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    role?: boolean | Mst_roleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_role"]>

  export type User_roleSelectScalar = {
    id?: boolean
    user_id?: boolean
    role_id?: boolean
  }

  export type User_roleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "role_id", ExtArgs["result"]["user_role"]>
  export type User_roleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    role?: boolean | Mst_roleDefaultArgs<ExtArgs>
  }
  export type User_roleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    role?: boolean | Mst_roleDefaultArgs<ExtArgs>
  }
  export type User_roleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    role?: boolean | Mst_roleDefaultArgs<ExtArgs>
  }

  export type $User_rolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User_role"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      role: Prisma.$Mst_rolePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      role_id: number
    }, ExtArgs["result"]["user_role"]>
    composites: {}
  }

  type User_roleGetPayload<S extends boolean | null | undefined | User_roleDefaultArgs> = $Result.GetResult<Prisma.$User_rolePayload, S>

  type User_roleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<User_roleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_roleCountAggregateInputType | true
    }

  export interface User_roleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User_role'], meta: { name: 'User_role' } }
    /**
     * Find zero or one User_role that matches the filter.
     * @param {User_roleFindUniqueArgs} args - Arguments to find a User_role
     * @example
     * // Get one User_role
     * const user_role = await prisma.user_role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends User_roleFindUniqueArgs>(args: SelectSubset<T, User_roleFindUniqueArgs<ExtArgs>>): Prisma__User_roleClient<$Result.GetResult<Prisma.$User_rolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {User_roleFindUniqueOrThrowArgs} args - Arguments to find a User_role
     * @example
     * // Get one User_role
     * const user_role = await prisma.user_role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends User_roleFindUniqueOrThrowArgs>(args: SelectSubset<T, User_roleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__User_roleClient<$Result.GetResult<Prisma.$User_rolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_roleFindFirstArgs} args - Arguments to find a User_role
     * @example
     * // Get one User_role
     * const user_role = await prisma.user_role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends User_roleFindFirstArgs>(args?: SelectSubset<T, User_roleFindFirstArgs<ExtArgs>>): Prisma__User_roleClient<$Result.GetResult<Prisma.$User_rolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_roleFindFirstOrThrowArgs} args - Arguments to find a User_role
     * @example
     * // Get one User_role
     * const user_role = await prisma.user_role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends User_roleFindFirstOrThrowArgs>(args?: SelectSubset<T, User_roleFindFirstOrThrowArgs<ExtArgs>>): Prisma__User_roleClient<$Result.GetResult<Prisma.$User_rolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_roleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_roles
     * const user_roles = await prisma.user_role.findMany()
     * 
     * // Get first 10 User_roles
     * const user_roles = await prisma.user_role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_roleWithIdOnly = await prisma.user_role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends User_roleFindManyArgs>(args?: SelectSubset<T, User_roleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$User_rolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_role.
     * @param {User_roleCreateArgs} args - Arguments to create a User_role.
     * @example
     * // Create one User_role
     * const User_role = await prisma.user_role.create({
     *   data: {
     *     // ... data to create a User_role
     *   }
     * })
     * 
     */
    create<T extends User_roleCreateArgs>(args: SelectSubset<T, User_roleCreateArgs<ExtArgs>>): Prisma__User_roleClient<$Result.GetResult<Prisma.$User_rolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_roles.
     * @param {User_roleCreateManyArgs} args - Arguments to create many User_roles.
     * @example
     * // Create many User_roles
     * const user_role = await prisma.user_role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends User_roleCreateManyArgs>(args?: SelectSubset<T, User_roleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_roles and returns the data saved in the database.
     * @param {User_roleCreateManyAndReturnArgs} args - Arguments to create many User_roles.
     * @example
     * // Create many User_roles
     * const user_role = await prisma.user_role.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_roles and only return the `id`
     * const user_roleWithIdOnly = await prisma.user_role.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends User_roleCreateManyAndReturnArgs>(args?: SelectSubset<T, User_roleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$User_rolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_role.
     * @param {User_roleDeleteArgs} args - Arguments to delete one User_role.
     * @example
     * // Delete one User_role
     * const User_role = await prisma.user_role.delete({
     *   where: {
     *     // ... filter to delete one User_role
     *   }
     * })
     * 
     */
    delete<T extends User_roleDeleteArgs>(args: SelectSubset<T, User_roleDeleteArgs<ExtArgs>>): Prisma__User_roleClient<$Result.GetResult<Prisma.$User_rolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_role.
     * @param {User_roleUpdateArgs} args - Arguments to update one User_role.
     * @example
     * // Update one User_role
     * const user_role = await prisma.user_role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends User_roleUpdateArgs>(args: SelectSubset<T, User_roleUpdateArgs<ExtArgs>>): Prisma__User_roleClient<$Result.GetResult<Prisma.$User_rolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_roles.
     * @param {User_roleDeleteManyArgs} args - Arguments to filter User_roles to delete.
     * @example
     * // Delete a few User_roles
     * const { count } = await prisma.user_role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends User_roleDeleteManyArgs>(args?: SelectSubset<T, User_roleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_roleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_roles
     * const user_role = await prisma.user_role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends User_roleUpdateManyArgs>(args: SelectSubset<T, User_roleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_roles and returns the data updated in the database.
     * @param {User_roleUpdateManyAndReturnArgs} args - Arguments to update many User_roles.
     * @example
     * // Update many User_roles
     * const user_role = await prisma.user_role.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_roles and only return the `id`
     * const user_roleWithIdOnly = await prisma.user_role.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends User_roleUpdateManyAndReturnArgs>(args: SelectSubset<T, User_roleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$User_rolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_role.
     * @param {User_roleUpsertArgs} args - Arguments to update or create a User_role.
     * @example
     * // Update or create a User_role
     * const user_role = await prisma.user_role.upsert({
     *   create: {
     *     // ... data to create a User_role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_role we want to update
     *   }
     * })
     */
    upsert<T extends User_roleUpsertArgs>(args: SelectSubset<T, User_roleUpsertArgs<ExtArgs>>): Prisma__User_roleClient<$Result.GetResult<Prisma.$User_rolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_roleCountArgs} args - Arguments to filter User_roles to count.
     * @example
     * // Count the number of User_roles
     * const count = await prisma.user_role.count({
     *   where: {
     *     // ... the filter for the User_roles we want to count
     *   }
     * })
    **/
    count<T extends User_roleCountArgs>(
      args?: Subset<T, User_roleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_roleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_roleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_roleAggregateArgs>(args: Subset<T, User_roleAggregateArgs>): Prisma.PrismaPromise<GetUser_roleAggregateType<T>>

    /**
     * Group by User_role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_roleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends User_roleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: User_roleGroupByArgs['orderBy'] }
        : { orderBy?: User_roleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, User_roleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_roleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User_role model
   */
  readonly fields: User_roleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User_role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__User_roleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    role<T extends Mst_roleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Mst_roleDefaultArgs<ExtArgs>>): Prisma__Mst_roleClient<$Result.GetResult<Prisma.$Mst_rolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User_role model
   */
  interface User_roleFieldRefs {
    readonly id: FieldRef<"User_role", 'Int'>
    readonly user_id: FieldRef<"User_role", 'Int'>
    readonly role_id: FieldRef<"User_role", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * User_role findUnique
   */
  export type User_roleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_role
     */
    select?: User_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_role
     */
    omit?: User_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_roleInclude<ExtArgs> | null
    /**
     * Filter, which User_role to fetch.
     */
    where: User_roleWhereUniqueInput
  }

  /**
   * User_role findUniqueOrThrow
   */
  export type User_roleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_role
     */
    select?: User_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_role
     */
    omit?: User_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_roleInclude<ExtArgs> | null
    /**
     * Filter, which User_role to fetch.
     */
    where: User_roleWhereUniqueInput
  }

  /**
   * User_role findFirst
   */
  export type User_roleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_role
     */
    select?: User_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_role
     */
    omit?: User_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_roleInclude<ExtArgs> | null
    /**
     * Filter, which User_role to fetch.
     */
    where?: User_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_roles to fetch.
     */
    orderBy?: User_roleOrderByWithRelationInput | User_roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for User_roles.
     */
    cursor?: User_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of User_roles.
     */
    distinct?: User_roleScalarFieldEnum | User_roleScalarFieldEnum[]
  }

  /**
   * User_role findFirstOrThrow
   */
  export type User_roleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_role
     */
    select?: User_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_role
     */
    omit?: User_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_roleInclude<ExtArgs> | null
    /**
     * Filter, which User_role to fetch.
     */
    where?: User_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_roles to fetch.
     */
    orderBy?: User_roleOrderByWithRelationInput | User_roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for User_roles.
     */
    cursor?: User_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of User_roles.
     */
    distinct?: User_roleScalarFieldEnum | User_roleScalarFieldEnum[]
  }

  /**
   * User_role findMany
   */
  export type User_roleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_role
     */
    select?: User_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_role
     */
    omit?: User_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_roleInclude<ExtArgs> | null
    /**
     * Filter, which User_roles to fetch.
     */
    where?: User_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_roles to fetch.
     */
    orderBy?: User_roleOrderByWithRelationInput | User_roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing User_roles.
     */
    cursor?: User_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_roles.
     */
    skip?: number
    distinct?: User_roleScalarFieldEnum | User_roleScalarFieldEnum[]
  }

  /**
   * User_role create
   */
  export type User_roleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_role
     */
    select?: User_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_role
     */
    omit?: User_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_roleInclude<ExtArgs> | null
    /**
     * The data needed to create a User_role.
     */
    data: XOR<User_roleCreateInput, User_roleUncheckedCreateInput>
  }

  /**
   * User_role createMany
   */
  export type User_roleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many User_roles.
     */
    data: User_roleCreateManyInput | User_roleCreateManyInput[]
  }

  /**
   * User_role createManyAndReturn
   */
  export type User_roleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_role
     */
    select?: User_roleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User_role
     */
    omit?: User_roleOmit<ExtArgs> | null
    /**
     * The data used to create many User_roles.
     */
    data: User_roleCreateManyInput | User_roleCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_roleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User_role update
   */
  export type User_roleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_role
     */
    select?: User_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_role
     */
    omit?: User_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_roleInclude<ExtArgs> | null
    /**
     * The data needed to update a User_role.
     */
    data: XOR<User_roleUpdateInput, User_roleUncheckedUpdateInput>
    /**
     * Choose, which User_role to update.
     */
    where: User_roleWhereUniqueInput
  }

  /**
   * User_role updateMany
   */
  export type User_roleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update User_roles.
     */
    data: XOR<User_roleUpdateManyMutationInput, User_roleUncheckedUpdateManyInput>
    /**
     * Filter which User_roles to update
     */
    where?: User_roleWhereInput
    /**
     * Limit how many User_roles to update.
     */
    limit?: number
  }

  /**
   * User_role updateManyAndReturn
   */
  export type User_roleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_role
     */
    select?: User_roleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User_role
     */
    omit?: User_roleOmit<ExtArgs> | null
    /**
     * The data used to update User_roles.
     */
    data: XOR<User_roleUpdateManyMutationInput, User_roleUncheckedUpdateManyInput>
    /**
     * Filter which User_roles to update
     */
    where?: User_roleWhereInput
    /**
     * Limit how many User_roles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_roleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User_role upsert
   */
  export type User_roleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_role
     */
    select?: User_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_role
     */
    omit?: User_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_roleInclude<ExtArgs> | null
    /**
     * The filter to search for the User_role to update in case it exists.
     */
    where: User_roleWhereUniqueInput
    /**
     * In case the User_role found by the `where` argument doesn't exist, create a new User_role with this data.
     */
    create: XOR<User_roleCreateInput, User_roleUncheckedCreateInput>
    /**
     * In case the User_role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<User_roleUpdateInput, User_roleUncheckedUpdateInput>
  }

  /**
   * User_role delete
   */
  export type User_roleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_role
     */
    select?: User_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_role
     */
    omit?: User_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_roleInclude<ExtArgs> | null
    /**
     * Filter which User_role to delete.
     */
    where: User_roleWhereUniqueInput
  }

  /**
   * User_role deleteMany
   */
  export type User_roleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User_roles to delete
     */
    where?: User_roleWhereInput
    /**
     * Limit how many User_roles to delete.
     */
    limit?: number
  }

  /**
   * User_role without action
   */
  export type User_roleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_role
     */
    select?: User_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_role
     */
    omit?: User_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_roleInclude<ExtArgs> | null
  }


  /**
   * Model Audit_log
   */

  export type AggregateAudit_log = {
    _count: Audit_logCountAggregateOutputType | null
    _avg: Audit_logAvgAggregateOutputType | null
    _sum: Audit_logSumAggregateOutputType | null
    _min: Audit_logMinAggregateOutputType | null
    _max: Audit_logMaxAggregateOutputType | null
  }

  export type Audit_logAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    record_id: number | null
  }

  export type Audit_logSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    record_id: number | null
  }

  export type Audit_logMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    action: string | null
    table_name: string | null
    record_id: number | null
    old_value: string | null
    new_value: string | null
    created_at: Date | null
  }

  export type Audit_logMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    action: string | null
    table_name: string | null
    record_id: number | null
    old_value: string | null
    new_value: string | null
    created_at: Date | null
  }

  export type Audit_logCountAggregateOutputType = {
    id: number
    user_id: number
    action: number
    table_name: number
    record_id: number
    old_value: number
    new_value: number
    created_at: number
    _all: number
  }


  export type Audit_logAvgAggregateInputType = {
    id?: true
    user_id?: true
    record_id?: true
  }

  export type Audit_logSumAggregateInputType = {
    id?: true
    user_id?: true
    record_id?: true
  }

  export type Audit_logMinAggregateInputType = {
    id?: true
    user_id?: true
    action?: true
    table_name?: true
    record_id?: true
    old_value?: true
    new_value?: true
    created_at?: true
  }

  export type Audit_logMaxAggregateInputType = {
    id?: true
    user_id?: true
    action?: true
    table_name?: true
    record_id?: true
    old_value?: true
    new_value?: true
    created_at?: true
  }

  export type Audit_logCountAggregateInputType = {
    id?: true
    user_id?: true
    action?: true
    table_name?: true
    record_id?: true
    old_value?: true
    new_value?: true
    created_at?: true
    _all?: true
  }

  export type Audit_logAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Audit_log to aggregate.
     */
    where?: Audit_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Audit_logs to fetch.
     */
    orderBy?: Audit_logOrderByWithRelationInput | Audit_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Audit_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Audit_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Audit_logs
    **/
    _count?: true | Audit_logCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Audit_logAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Audit_logSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Audit_logMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Audit_logMaxAggregateInputType
  }

  export type GetAudit_logAggregateType<T extends Audit_logAggregateArgs> = {
        [P in keyof T & keyof AggregateAudit_log]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAudit_log[P]>
      : GetScalarType<T[P], AggregateAudit_log[P]>
  }




  export type Audit_logGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Audit_logWhereInput
    orderBy?: Audit_logOrderByWithAggregationInput | Audit_logOrderByWithAggregationInput[]
    by: Audit_logScalarFieldEnum[] | Audit_logScalarFieldEnum
    having?: Audit_logScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Audit_logCountAggregateInputType | true
    _avg?: Audit_logAvgAggregateInputType
    _sum?: Audit_logSumAggregateInputType
    _min?: Audit_logMinAggregateInputType
    _max?: Audit_logMaxAggregateInputType
  }

  export type Audit_logGroupByOutputType = {
    id: number
    user_id: number | null
    action: string
    table_name: string
    record_id: number | null
    old_value: string | null
    new_value: string | null
    created_at: Date
    _count: Audit_logCountAggregateOutputType | null
    _avg: Audit_logAvgAggregateOutputType | null
    _sum: Audit_logSumAggregateOutputType | null
    _min: Audit_logMinAggregateOutputType | null
    _max: Audit_logMaxAggregateOutputType | null
  }

  type GetAudit_logGroupByPayload<T extends Audit_logGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Audit_logGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Audit_logGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Audit_logGroupByOutputType[P]>
            : GetScalarType<T[P], Audit_logGroupByOutputType[P]>
        }
      >
    >


  export type Audit_logSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    action?: boolean
    table_name?: boolean
    record_id?: boolean
    old_value?: boolean
    new_value?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["audit_log"]>

  export type Audit_logSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    action?: boolean
    table_name?: boolean
    record_id?: boolean
    old_value?: boolean
    new_value?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["audit_log"]>

  export type Audit_logSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    action?: boolean
    table_name?: boolean
    record_id?: boolean
    old_value?: boolean
    new_value?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["audit_log"]>

  export type Audit_logSelectScalar = {
    id?: boolean
    user_id?: boolean
    action?: boolean
    table_name?: boolean
    record_id?: boolean
    old_value?: boolean
    new_value?: boolean
    created_at?: boolean
  }

  export type Audit_logOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "action" | "table_name" | "record_id" | "old_value" | "new_value" | "created_at", ExtArgs["result"]["audit_log"]>

  export type $Audit_logPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Audit_log"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number | null
      action: string
      table_name: string
      record_id: number | null
      old_value: string | null
      new_value: string | null
      created_at: Date
    }, ExtArgs["result"]["audit_log"]>
    composites: {}
  }

  type Audit_logGetPayload<S extends boolean | null | undefined | Audit_logDefaultArgs> = $Result.GetResult<Prisma.$Audit_logPayload, S>

  type Audit_logCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Audit_logFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Audit_logCountAggregateInputType | true
    }

  export interface Audit_logDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Audit_log'], meta: { name: 'Audit_log' } }
    /**
     * Find zero or one Audit_log that matches the filter.
     * @param {Audit_logFindUniqueArgs} args - Arguments to find a Audit_log
     * @example
     * // Get one Audit_log
     * const audit_log = await prisma.audit_log.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Audit_logFindUniqueArgs>(args: SelectSubset<T, Audit_logFindUniqueArgs<ExtArgs>>): Prisma__Audit_logClient<$Result.GetResult<Prisma.$Audit_logPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Audit_log that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Audit_logFindUniqueOrThrowArgs} args - Arguments to find a Audit_log
     * @example
     * // Get one Audit_log
     * const audit_log = await prisma.audit_log.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Audit_logFindUniqueOrThrowArgs>(args: SelectSubset<T, Audit_logFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Audit_logClient<$Result.GetResult<Prisma.$Audit_logPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Audit_log that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Audit_logFindFirstArgs} args - Arguments to find a Audit_log
     * @example
     * // Get one Audit_log
     * const audit_log = await prisma.audit_log.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Audit_logFindFirstArgs>(args?: SelectSubset<T, Audit_logFindFirstArgs<ExtArgs>>): Prisma__Audit_logClient<$Result.GetResult<Prisma.$Audit_logPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Audit_log that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Audit_logFindFirstOrThrowArgs} args - Arguments to find a Audit_log
     * @example
     * // Get one Audit_log
     * const audit_log = await prisma.audit_log.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Audit_logFindFirstOrThrowArgs>(args?: SelectSubset<T, Audit_logFindFirstOrThrowArgs<ExtArgs>>): Prisma__Audit_logClient<$Result.GetResult<Prisma.$Audit_logPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Audit_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Audit_logFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Audit_logs
     * const audit_logs = await prisma.audit_log.findMany()
     * 
     * // Get first 10 Audit_logs
     * const audit_logs = await prisma.audit_log.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const audit_logWithIdOnly = await prisma.audit_log.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Audit_logFindManyArgs>(args?: SelectSubset<T, Audit_logFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Audit_logPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Audit_log.
     * @param {Audit_logCreateArgs} args - Arguments to create a Audit_log.
     * @example
     * // Create one Audit_log
     * const Audit_log = await prisma.audit_log.create({
     *   data: {
     *     // ... data to create a Audit_log
     *   }
     * })
     * 
     */
    create<T extends Audit_logCreateArgs>(args: SelectSubset<T, Audit_logCreateArgs<ExtArgs>>): Prisma__Audit_logClient<$Result.GetResult<Prisma.$Audit_logPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Audit_logs.
     * @param {Audit_logCreateManyArgs} args - Arguments to create many Audit_logs.
     * @example
     * // Create many Audit_logs
     * const audit_log = await prisma.audit_log.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Audit_logCreateManyArgs>(args?: SelectSubset<T, Audit_logCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Audit_logs and returns the data saved in the database.
     * @param {Audit_logCreateManyAndReturnArgs} args - Arguments to create many Audit_logs.
     * @example
     * // Create many Audit_logs
     * const audit_log = await prisma.audit_log.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Audit_logs and only return the `id`
     * const audit_logWithIdOnly = await prisma.audit_log.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Audit_logCreateManyAndReturnArgs>(args?: SelectSubset<T, Audit_logCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Audit_logPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Audit_log.
     * @param {Audit_logDeleteArgs} args - Arguments to delete one Audit_log.
     * @example
     * // Delete one Audit_log
     * const Audit_log = await prisma.audit_log.delete({
     *   where: {
     *     // ... filter to delete one Audit_log
     *   }
     * })
     * 
     */
    delete<T extends Audit_logDeleteArgs>(args: SelectSubset<T, Audit_logDeleteArgs<ExtArgs>>): Prisma__Audit_logClient<$Result.GetResult<Prisma.$Audit_logPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Audit_log.
     * @param {Audit_logUpdateArgs} args - Arguments to update one Audit_log.
     * @example
     * // Update one Audit_log
     * const audit_log = await prisma.audit_log.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Audit_logUpdateArgs>(args: SelectSubset<T, Audit_logUpdateArgs<ExtArgs>>): Prisma__Audit_logClient<$Result.GetResult<Prisma.$Audit_logPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Audit_logs.
     * @param {Audit_logDeleteManyArgs} args - Arguments to filter Audit_logs to delete.
     * @example
     * // Delete a few Audit_logs
     * const { count } = await prisma.audit_log.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Audit_logDeleteManyArgs>(args?: SelectSubset<T, Audit_logDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Audit_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Audit_logUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Audit_logs
     * const audit_log = await prisma.audit_log.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Audit_logUpdateManyArgs>(args: SelectSubset<T, Audit_logUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Audit_logs and returns the data updated in the database.
     * @param {Audit_logUpdateManyAndReturnArgs} args - Arguments to update many Audit_logs.
     * @example
     * // Update many Audit_logs
     * const audit_log = await prisma.audit_log.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Audit_logs and only return the `id`
     * const audit_logWithIdOnly = await prisma.audit_log.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Audit_logUpdateManyAndReturnArgs>(args: SelectSubset<T, Audit_logUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Audit_logPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Audit_log.
     * @param {Audit_logUpsertArgs} args - Arguments to update or create a Audit_log.
     * @example
     * // Update or create a Audit_log
     * const audit_log = await prisma.audit_log.upsert({
     *   create: {
     *     // ... data to create a Audit_log
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Audit_log we want to update
     *   }
     * })
     */
    upsert<T extends Audit_logUpsertArgs>(args: SelectSubset<T, Audit_logUpsertArgs<ExtArgs>>): Prisma__Audit_logClient<$Result.GetResult<Prisma.$Audit_logPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Audit_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Audit_logCountArgs} args - Arguments to filter Audit_logs to count.
     * @example
     * // Count the number of Audit_logs
     * const count = await prisma.audit_log.count({
     *   where: {
     *     // ... the filter for the Audit_logs we want to count
     *   }
     * })
    **/
    count<T extends Audit_logCountArgs>(
      args?: Subset<T, Audit_logCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Audit_logCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Audit_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Audit_logAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Audit_logAggregateArgs>(args: Subset<T, Audit_logAggregateArgs>): Prisma.PrismaPromise<GetAudit_logAggregateType<T>>

    /**
     * Group by Audit_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Audit_logGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Audit_logGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Audit_logGroupByArgs['orderBy'] }
        : { orderBy?: Audit_logGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Audit_logGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAudit_logGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Audit_log model
   */
  readonly fields: Audit_logFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Audit_log.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Audit_logClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Audit_log model
   */
  interface Audit_logFieldRefs {
    readonly id: FieldRef<"Audit_log", 'Int'>
    readonly user_id: FieldRef<"Audit_log", 'Int'>
    readonly action: FieldRef<"Audit_log", 'String'>
    readonly table_name: FieldRef<"Audit_log", 'String'>
    readonly record_id: FieldRef<"Audit_log", 'Int'>
    readonly old_value: FieldRef<"Audit_log", 'String'>
    readonly new_value: FieldRef<"Audit_log", 'String'>
    readonly created_at: FieldRef<"Audit_log", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Audit_log findUnique
   */
  export type Audit_logFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Audit_log
     */
    select?: Audit_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Audit_log
     */
    omit?: Audit_logOmit<ExtArgs> | null
    /**
     * Filter, which Audit_log to fetch.
     */
    where: Audit_logWhereUniqueInput
  }

  /**
   * Audit_log findUniqueOrThrow
   */
  export type Audit_logFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Audit_log
     */
    select?: Audit_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Audit_log
     */
    omit?: Audit_logOmit<ExtArgs> | null
    /**
     * Filter, which Audit_log to fetch.
     */
    where: Audit_logWhereUniqueInput
  }

  /**
   * Audit_log findFirst
   */
  export type Audit_logFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Audit_log
     */
    select?: Audit_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Audit_log
     */
    omit?: Audit_logOmit<ExtArgs> | null
    /**
     * Filter, which Audit_log to fetch.
     */
    where?: Audit_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Audit_logs to fetch.
     */
    orderBy?: Audit_logOrderByWithRelationInput | Audit_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Audit_logs.
     */
    cursor?: Audit_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Audit_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Audit_logs.
     */
    distinct?: Audit_logScalarFieldEnum | Audit_logScalarFieldEnum[]
  }

  /**
   * Audit_log findFirstOrThrow
   */
  export type Audit_logFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Audit_log
     */
    select?: Audit_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Audit_log
     */
    omit?: Audit_logOmit<ExtArgs> | null
    /**
     * Filter, which Audit_log to fetch.
     */
    where?: Audit_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Audit_logs to fetch.
     */
    orderBy?: Audit_logOrderByWithRelationInput | Audit_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Audit_logs.
     */
    cursor?: Audit_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Audit_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Audit_logs.
     */
    distinct?: Audit_logScalarFieldEnum | Audit_logScalarFieldEnum[]
  }

  /**
   * Audit_log findMany
   */
  export type Audit_logFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Audit_log
     */
    select?: Audit_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Audit_log
     */
    omit?: Audit_logOmit<ExtArgs> | null
    /**
     * Filter, which Audit_logs to fetch.
     */
    where?: Audit_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Audit_logs to fetch.
     */
    orderBy?: Audit_logOrderByWithRelationInput | Audit_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Audit_logs.
     */
    cursor?: Audit_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Audit_logs.
     */
    skip?: number
    distinct?: Audit_logScalarFieldEnum | Audit_logScalarFieldEnum[]
  }

  /**
   * Audit_log create
   */
  export type Audit_logCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Audit_log
     */
    select?: Audit_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Audit_log
     */
    omit?: Audit_logOmit<ExtArgs> | null
    /**
     * The data needed to create a Audit_log.
     */
    data: XOR<Audit_logCreateInput, Audit_logUncheckedCreateInput>
  }

  /**
   * Audit_log createMany
   */
  export type Audit_logCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Audit_logs.
     */
    data: Audit_logCreateManyInput | Audit_logCreateManyInput[]
  }

  /**
   * Audit_log createManyAndReturn
   */
  export type Audit_logCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Audit_log
     */
    select?: Audit_logSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Audit_log
     */
    omit?: Audit_logOmit<ExtArgs> | null
    /**
     * The data used to create many Audit_logs.
     */
    data: Audit_logCreateManyInput | Audit_logCreateManyInput[]
  }

  /**
   * Audit_log update
   */
  export type Audit_logUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Audit_log
     */
    select?: Audit_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Audit_log
     */
    omit?: Audit_logOmit<ExtArgs> | null
    /**
     * The data needed to update a Audit_log.
     */
    data: XOR<Audit_logUpdateInput, Audit_logUncheckedUpdateInput>
    /**
     * Choose, which Audit_log to update.
     */
    where: Audit_logWhereUniqueInput
  }

  /**
   * Audit_log updateMany
   */
  export type Audit_logUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Audit_logs.
     */
    data: XOR<Audit_logUpdateManyMutationInput, Audit_logUncheckedUpdateManyInput>
    /**
     * Filter which Audit_logs to update
     */
    where?: Audit_logWhereInput
    /**
     * Limit how many Audit_logs to update.
     */
    limit?: number
  }

  /**
   * Audit_log updateManyAndReturn
   */
  export type Audit_logUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Audit_log
     */
    select?: Audit_logSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Audit_log
     */
    omit?: Audit_logOmit<ExtArgs> | null
    /**
     * The data used to update Audit_logs.
     */
    data: XOR<Audit_logUpdateManyMutationInput, Audit_logUncheckedUpdateManyInput>
    /**
     * Filter which Audit_logs to update
     */
    where?: Audit_logWhereInput
    /**
     * Limit how many Audit_logs to update.
     */
    limit?: number
  }

  /**
   * Audit_log upsert
   */
  export type Audit_logUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Audit_log
     */
    select?: Audit_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Audit_log
     */
    omit?: Audit_logOmit<ExtArgs> | null
    /**
     * The filter to search for the Audit_log to update in case it exists.
     */
    where: Audit_logWhereUniqueInput
    /**
     * In case the Audit_log found by the `where` argument doesn't exist, create a new Audit_log with this data.
     */
    create: XOR<Audit_logCreateInput, Audit_logUncheckedCreateInput>
    /**
     * In case the Audit_log was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Audit_logUpdateInput, Audit_logUncheckedUpdateInput>
  }

  /**
   * Audit_log delete
   */
  export type Audit_logDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Audit_log
     */
    select?: Audit_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Audit_log
     */
    omit?: Audit_logOmit<ExtArgs> | null
    /**
     * Filter which Audit_log to delete.
     */
    where: Audit_logWhereUniqueInput
  }

  /**
   * Audit_log deleteMany
   */
  export type Audit_logDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Audit_logs to delete
     */
    where?: Audit_logWhereInput
    /**
     * Limit how many Audit_logs to delete.
     */
    limit?: number
  }

  /**
   * Audit_log without action
   */
  export type Audit_logDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Audit_log
     */
    select?: Audit_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Audit_log
     */
    omit?: Audit_logOmit<ExtArgs> | null
  }


  /**
   * Model event_schedule
   */

  export type AggregateEvent_schedule = {
    _count: Event_scheduleCountAggregateOutputType | null
    _avg: Event_scheduleAvgAggregateOutputType | null
    _sum: Event_scheduleSumAggregateOutputType | null
    _min: Event_scheduleMinAggregateOutputType | null
    _max: Event_scheduleMaxAggregateOutputType | null
  }

  export type Event_scheduleAvgAggregateOutputType = {
    id: number | null
    event_id: number | null
  }

  export type Event_scheduleSumAggregateOutputType = {
    id: number | null
    event_id: number | null
  }

  export type Event_scheduleMinAggregateOutputType = {
    id: number | null
    event_id: number | null
    start_time: Date | null
    end_time: Date | null
    created_at: Date | null
    modified_at: Date | null
    is_deleted: boolean | null
  }

  export type Event_scheduleMaxAggregateOutputType = {
    id: number | null
    event_id: number | null
    start_time: Date | null
    end_time: Date | null
    created_at: Date | null
    modified_at: Date | null
    is_deleted: boolean | null
  }

  export type Event_scheduleCountAggregateOutputType = {
    id: number
    event_id: number
    start_time: number
    end_time: number
    created_at: number
    modified_at: number
    is_deleted: number
    _all: number
  }


  export type Event_scheduleAvgAggregateInputType = {
    id?: true
    event_id?: true
  }

  export type Event_scheduleSumAggregateInputType = {
    id?: true
    event_id?: true
  }

  export type Event_scheduleMinAggregateInputType = {
    id?: true
    event_id?: true
    start_time?: true
    end_time?: true
    created_at?: true
    modified_at?: true
    is_deleted?: true
  }

  export type Event_scheduleMaxAggregateInputType = {
    id?: true
    event_id?: true
    start_time?: true
    end_time?: true
    created_at?: true
    modified_at?: true
    is_deleted?: true
  }

  export type Event_scheduleCountAggregateInputType = {
    id?: true
    event_id?: true
    start_time?: true
    end_time?: true
    created_at?: true
    modified_at?: true
    is_deleted?: true
    _all?: true
  }

  export type Event_scheduleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which event_schedule to aggregate.
     */
    where?: event_scheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of event_schedules to fetch.
     */
    orderBy?: event_scheduleOrderByWithRelationInput | event_scheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: event_scheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` event_schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` event_schedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned event_schedules
    **/
    _count?: true | Event_scheduleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Event_scheduleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Event_scheduleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Event_scheduleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Event_scheduleMaxAggregateInputType
  }

  export type GetEvent_scheduleAggregateType<T extends Event_scheduleAggregateArgs> = {
        [P in keyof T & keyof AggregateEvent_schedule]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvent_schedule[P]>
      : GetScalarType<T[P], AggregateEvent_schedule[P]>
  }




  export type event_scheduleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: event_scheduleWhereInput
    orderBy?: event_scheduleOrderByWithAggregationInput | event_scheduleOrderByWithAggregationInput[]
    by: Event_scheduleScalarFieldEnum[] | Event_scheduleScalarFieldEnum
    having?: event_scheduleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Event_scheduleCountAggregateInputType | true
    _avg?: Event_scheduleAvgAggregateInputType
    _sum?: Event_scheduleSumAggregateInputType
    _min?: Event_scheduleMinAggregateInputType
    _max?: Event_scheduleMaxAggregateInputType
  }

  export type Event_scheduleGroupByOutputType = {
    id: number
    event_id: number
    start_time: Date
    end_time: Date
    created_at: Date
    modified_at: Date
    is_deleted: boolean
    _count: Event_scheduleCountAggregateOutputType | null
    _avg: Event_scheduleAvgAggregateOutputType | null
    _sum: Event_scheduleSumAggregateOutputType | null
    _min: Event_scheduleMinAggregateOutputType | null
    _max: Event_scheduleMaxAggregateOutputType | null
  }

  type GetEvent_scheduleGroupByPayload<T extends event_scheduleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Event_scheduleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Event_scheduleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Event_scheduleGroupByOutputType[P]>
            : GetScalarType<T[P], Event_scheduleGroupByOutputType[P]>
        }
      >
    >


  export type event_scheduleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    event_id?: boolean
    start_time?: boolean
    end_time?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["event_schedule"]>

  export type event_scheduleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    event_id?: boolean
    start_time?: boolean
    end_time?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["event_schedule"]>

  export type event_scheduleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    event_id?: boolean
    start_time?: boolean
    end_time?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["event_schedule"]>

  export type event_scheduleSelectScalar = {
    id?: boolean
    event_id?: boolean
    start_time?: boolean
    end_time?: boolean
    created_at?: boolean
    modified_at?: boolean
    is_deleted?: boolean
  }

  export type event_scheduleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "event_id" | "start_time" | "end_time" | "created_at" | "modified_at" | "is_deleted", ExtArgs["result"]["event_schedule"]>
  export type event_scheduleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
  }
  export type event_scheduleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
  }
  export type event_scheduleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event?: boolean | Mst_eventDefaultArgs<ExtArgs>
  }

  export type $event_schedulePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "event_schedule"
    objects: {
      event: Prisma.$Mst_eventPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      event_id: number
      start_time: Date
      end_time: Date
      created_at: Date
      modified_at: Date
      is_deleted: boolean
    }, ExtArgs["result"]["event_schedule"]>
    composites: {}
  }

  type event_scheduleGetPayload<S extends boolean | null | undefined | event_scheduleDefaultArgs> = $Result.GetResult<Prisma.$event_schedulePayload, S>

  type event_scheduleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<event_scheduleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Event_scheduleCountAggregateInputType | true
    }

  export interface event_scheduleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['event_schedule'], meta: { name: 'event_schedule' } }
    /**
     * Find zero or one Event_schedule that matches the filter.
     * @param {event_scheduleFindUniqueArgs} args - Arguments to find a Event_schedule
     * @example
     * // Get one Event_schedule
     * const event_schedule = await prisma.event_schedule.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends event_scheduleFindUniqueArgs>(args: SelectSubset<T, event_scheduleFindUniqueArgs<ExtArgs>>): Prisma__event_scheduleClient<$Result.GetResult<Prisma.$event_schedulePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Event_schedule that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {event_scheduleFindUniqueOrThrowArgs} args - Arguments to find a Event_schedule
     * @example
     * // Get one Event_schedule
     * const event_schedule = await prisma.event_schedule.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends event_scheduleFindUniqueOrThrowArgs>(args: SelectSubset<T, event_scheduleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__event_scheduleClient<$Result.GetResult<Prisma.$event_schedulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Event_schedule that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {event_scheduleFindFirstArgs} args - Arguments to find a Event_schedule
     * @example
     * // Get one Event_schedule
     * const event_schedule = await prisma.event_schedule.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends event_scheduleFindFirstArgs>(args?: SelectSubset<T, event_scheduleFindFirstArgs<ExtArgs>>): Prisma__event_scheduleClient<$Result.GetResult<Prisma.$event_schedulePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Event_schedule that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {event_scheduleFindFirstOrThrowArgs} args - Arguments to find a Event_schedule
     * @example
     * // Get one Event_schedule
     * const event_schedule = await prisma.event_schedule.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends event_scheduleFindFirstOrThrowArgs>(args?: SelectSubset<T, event_scheduleFindFirstOrThrowArgs<ExtArgs>>): Prisma__event_scheduleClient<$Result.GetResult<Prisma.$event_schedulePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Event_schedules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {event_scheduleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Event_schedules
     * const event_schedules = await prisma.event_schedule.findMany()
     * 
     * // Get first 10 Event_schedules
     * const event_schedules = await prisma.event_schedule.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const event_scheduleWithIdOnly = await prisma.event_schedule.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends event_scheduleFindManyArgs>(args?: SelectSubset<T, event_scheduleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$event_schedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Event_schedule.
     * @param {event_scheduleCreateArgs} args - Arguments to create a Event_schedule.
     * @example
     * // Create one Event_schedule
     * const Event_schedule = await prisma.event_schedule.create({
     *   data: {
     *     // ... data to create a Event_schedule
     *   }
     * })
     * 
     */
    create<T extends event_scheduleCreateArgs>(args: SelectSubset<T, event_scheduleCreateArgs<ExtArgs>>): Prisma__event_scheduleClient<$Result.GetResult<Prisma.$event_schedulePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Event_schedules.
     * @param {event_scheduleCreateManyArgs} args - Arguments to create many Event_schedules.
     * @example
     * // Create many Event_schedules
     * const event_schedule = await prisma.event_schedule.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends event_scheduleCreateManyArgs>(args?: SelectSubset<T, event_scheduleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Event_schedules and returns the data saved in the database.
     * @param {event_scheduleCreateManyAndReturnArgs} args - Arguments to create many Event_schedules.
     * @example
     * // Create many Event_schedules
     * const event_schedule = await prisma.event_schedule.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Event_schedules and only return the `id`
     * const event_scheduleWithIdOnly = await prisma.event_schedule.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends event_scheduleCreateManyAndReturnArgs>(args?: SelectSubset<T, event_scheduleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$event_schedulePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Event_schedule.
     * @param {event_scheduleDeleteArgs} args - Arguments to delete one Event_schedule.
     * @example
     * // Delete one Event_schedule
     * const Event_schedule = await prisma.event_schedule.delete({
     *   where: {
     *     // ... filter to delete one Event_schedule
     *   }
     * })
     * 
     */
    delete<T extends event_scheduleDeleteArgs>(args: SelectSubset<T, event_scheduleDeleteArgs<ExtArgs>>): Prisma__event_scheduleClient<$Result.GetResult<Prisma.$event_schedulePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Event_schedule.
     * @param {event_scheduleUpdateArgs} args - Arguments to update one Event_schedule.
     * @example
     * // Update one Event_schedule
     * const event_schedule = await prisma.event_schedule.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends event_scheduleUpdateArgs>(args: SelectSubset<T, event_scheduleUpdateArgs<ExtArgs>>): Prisma__event_scheduleClient<$Result.GetResult<Prisma.$event_schedulePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Event_schedules.
     * @param {event_scheduleDeleteManyArgs} args - Arguments to filter Event_schedules to delete.
     * @example
     * // Delete a few Event_schedules
     * const { count } = await prisma.event_schedule.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends event_scheduleDeleteManyArgs>(args?: SelectSubset<T, event_scheduleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Event_schedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {event_scheduleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Event_schedules
     * const event_schedule = await prisma.event_schedule.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends event_scheduleUpdateManyArgs>(args: SelectSubset<T, event_scheduleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Event_schedules and returns the data updated in the database.
     * @param {event_scheduleUpdateManyAndReturnArgs} args - Arguments to update many Event_schedules.
     * @example
     * // Update many Event_schedules
     * const event_schedule = await prisma.event_schedule.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Event_schedules and only return the `id`
     * const event_scheduleWithIdOnly = await prisma.event_schedule.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends event_scheduleUpdateManyAndReturnArgs>(args: SelectSubset<T, event_scheduleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$event_schedulePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Event_schedule.
     * @param {event_scheduleUpsertArgs} args - Arguments to update or create a Event_schedule.
     * @example
     * // Update or create a Event_schedule
     * const event_schedule = await prisma.event_schedule.upsert({
     *   create: {
     *     // ... data to create a Event_schedule
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Event_schedule we want to update
     *   }
     * })
     */
    upsert<T extends event_scheduleUpsertArgs>(args: SelectSubset<T, event_scheduleUpsertArgs<ExtArgs>>): Prisma__event_scheduleClient<$Result.GetResult<Prisma.$event_schedulePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Event_schedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {event_scheduleCountArgs} args - Arguments to filter Event_schedules to count.
     * @example
     * // Count the number of Event_schedules
     * const count = await prisma.event_schedule.count({
     *   where: {
     *     // ... the filter for the Event_schedules we want to count
     *   }
     * })
    **/
    count<T extends event_scheduleCountArgs>(
      args?: Subset<T, event_scheduleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Event_scheduleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Event_schedule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Event_scheduleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Event_scheduleAggregateArgs>(args: Subset<T, Event_scheduleAggregateArgs>): Prisma.PrismaPromise<GetEvent_scheduleAggregateType<T>>

    /**
     * Group by Event_schedule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {event_scheduleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends event_scheduleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: event_scheduleGroupByArgs['orderBy'] }
        : { orderBy?: event_scheduleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, event_scheduleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEvent_scheduleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the event_schedule model
   */
  readonly fields: event_scheduleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for event_schedule.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__event_scheduleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    event<T extends Mst_eventDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Mst_eventDefaultArgs<ExtArgs>>): Prisma__Mst_eventClient<$Result.GetResult<Prisma.$Mst_eventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the event_schedule model
   */
  interface event_scheduleFieldRefs {
    readonly id: FieldRef<"event_schedule", 'Int'>
    readonly event_id: FieldRef<"event_schedule", 'Int'>
    readonly start_time: FieldRef<"event_schedule", 'DateTime'>
    readonly end_time: FieldRef<"event_schedule", 'DateTime'>
    readonly created_at: FieldRef<"event_schedule", 'DateTime'>
    readonly modified_at: FieldRef<"event_schedule", 'DateTime'>
    readonly is_deleted: FieldRef<"event_schedule", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * event_schedule findUnique
   */
  export type event_scheduleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_schedule
     */
    select?: event_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_schedule
     */
    omit?: event_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_scheduleInclude<ExtArgs> | null
    /**
     * Filter, which event_schedule to fetch.
     */
    where: event_scheduleWhereUniqueInput
  }

  /**
   * event_schedule findUniqueOrThrow
   */
  export type event_scheduleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_schedule
     */
    select?: event_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_schedule
     */
    omit?: event_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_scheduleInclude<ExtArgs> | null
    /**
     * Filter, which event_schedule to fetch.
     */
    where: event_scheduleWhereUniqueInput
  }

  /**
   * event_schedule findFirst
   */
  export type event_scheduleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_schedule
     */
    select?: event_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_schedule
     */
    omit?: event_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_scheduleInclude<ExtArgs> | null
    /**
     * Filter, which event_schedule to fetch.
     */
    where?: event_scheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of event_schedules to fetch.
     */
    orderBy?: event_scheduleOrderByWithRelationInput | event_scheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for event_schedules.
     */
    cursor?: event_scheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` event_schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` event_schedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of event_schedules.
     */
    distinct?: Event_scheduleScalarFieldEnum | Event_scheduleScalarFieldEnum[]
  }

  /**
   * event_schedule findFirstOrThrow
   */
  export type event_scheduleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_schedule
     */
    select?: event_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_schedule
     */
    omit?: event_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_scheduleInclude<ExtArgs> | null
    /**
     * Filter, which event_schedule to fetch.
     */
    where?: event_scheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of event_schedules to fetch.
     */
    orderBy?: event_scheduleOrderByWithRelationInput | event_scheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for event_schedules.
     */
    cursor?: event_scheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` event_schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` event_schedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of event_schedules.
     */
    distinct?: Event_scheduleScalarFieldEnum | Event_scheduleScalarFieldEnum[]
  }

  /**
   * event_schedule findMany
   */
  export type event_scheduleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_schedule
     */
    select?: event_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_schedule
     */
    omit?: event_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_scheduleInclude<ExtArgs> | null
    /**
     * Filter, which event_schedules to fetch.
     */
    where?: event_scheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of event_schedules to fetch.
     */
    orderBy?: event_scheduleOrderByWithRelationInput | event_scheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing event_schedules.
     */
    cursor?: event_scheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` event_schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` event_schedules.
     */
    skip?: number
    distinct?: Event_scheduleScalarFieldEnum | Event_scheduleScalarFieldEnum[]
  }

  /**
   * event_schedule create
   */
  export type event_scheduleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_schedule
     */
    select?: event_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_schedule
     */
    omit?: event_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_scheduleInclude<ExtArgs> | null
    /**
     * The data needed to create a event_schedule.
     */
    data: XOR<event_scheduleCreateInput, event_scheduleUncheckedCreateInput>
  }

  /**
   * event_schedule createMany
   */
  export type event_scheduleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many event_schedules.
     */
    data: event_scheduleCreateManyInput | event_scheduleCreateManyInput[]
  }

  /**
   * event_schedule createManyAndReturn
   */
  export type event_scheduleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_schedule
     */
    select?: event_scheduleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the event_schedule
     */
    omit?: event_scheduleOmit<ExtArgs> | null
    /**
     * The data used to create many event_schedules.
     */
    data: event_scheduleCreateManyInput | event_scheduleCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_scheduleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * event_schedule update
   */
  export type event_scheduleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_schedule
     */
    select?: event_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_schedule
     */
    omit?: event_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_scheduleInclude<ExtArgs> | null
    /**
     * The data needed to update a event_schedule.
     */
    data: XOR<event_scheduleUpdateInput, event_scheduleUncheckedUpdateInput>
    /**
     * Choose, which event_schedule to update.
     */
    where: event_scheduleWhereUniqueInput
  }

  /**
   * event_schedule updateMany
   */
  export type event_scheduleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update event_schedules.
     */
    data: XOR<event_scheduleUpdateManyMutationInput, event_scheduleUncheckedUpdateManyInput>
    /**
     * Filter which event_schedules to update
     */
    where?: event_scheduleWhereInput
    /**
     * Limit how many event_schedules to update.
     */
    limit?: number
  }

  /**
   * event_schedule updateManyAndReturn
   */
  export type event_scheduleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_schedule
     */
    select?: event_scheduleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the event_schedule
     */
    omit?: event_scheduleOmit<ExtArgs> | null
    /**
     * The data used to update event_schedules.
     */
    data: XOR<event_scheduleUpdateManyMutationInput, event_scheduleUncheckedUpdateManyInput>
    /**
     * Filter which event_schedules to update
     */
    where?: event_scheduleWhereInput
    /**
     * Limit how many event_schedules to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_scheduleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * event_schedule upsert
   */
  export type event_scheduleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_schedule
     */
    select?: event_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_schedule
     */
    omit?: event_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_scheduleInclude<ExtArgs> | null
    /**
     * The filter to search for the event_schedule to update in case it exists.
     */
    where: event_scheduleWhereUniqueInput
    /**
     * In case the event_schedule found by the `where` argument doesn't exist, create a new event_schedule with this data.
     */
    create: XOR<event_scheduleCreateInput, event_scheduleUncheckedCreateInput>
    /**
     * In case the event_schedule was found with the provided `where` argument, update it with this data.
     */
    update: XOR<event_scheduleUpdateInput, event_scheduleUncheckedUpdateInput>
  }

  /**
   * event_schedule delete
   */
  export type event_scheduleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_schedule
     */
    select?: event_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_schedule
     */
    omit?: event_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_scheduleInclude<ExtArgs> | null
    /**
     * Filter which event_schedule to delete.
     */
    where: event_scheduleWhereUniqueInput
  }

  /**
   * event_schedule deleteMany
   */
  export type event_scheduleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which event_schedules to delete
     */
    where?: event_scheduleWhereInput
    /**
     * Limit how many event_schedules to delete.
     */
    limit?: number
  }

  /**
   * event_schedule without action
   */
  export type event_scheduleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the event_schedule
     */
    select?: event_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the event_schedule
     */
    omit?: event_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: event_scheduleInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ChampionScalarFieldEnum: {
    id: 'id',
    temple_id: 'temple_id',
    year: 'year',
    host_temple_id: 'host_temple_id',
    created_at: 'created_at',
    modified_at: 'modified_at'
  };

  export type ChampionScalarFieldEnum = (typeof ChampionScalarFieldEnum)[keyof typeof ChampionScalarFieldEnum]


  export const Ind_event_registrationScalarFieldEnum: {
    id: 'id',
    event_id: 'event_id',
    user_id: 'user_id',
    event_result_id: 'event_result_id',
    created_at: 'created_at',
    modified_at: 'modified_at',
    is_deleted: 'is_deleted',
    status: 'status'
  };

  export type Ind_event_registrationScalarFieldEnum = (typeof Ind_event_registrationScalarFieldEnum)[keyof typeof Ind_event_registrationScalarFieldEnum]


  export const Mst_age_categoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    from_age: 'from_age',
    to_age: 'to_age',
    is_deleted: 'is_deleted'
  };

  export type Mst_age_categoryScalarFieldEnum = (typeof Mst_age_categoryScalarFieldEnum)[keyof typeof Mst_age_categoryScalarFieldEnum]


  export const Mst_eventScalarFieldEnum: {
    id: 'id',
    name: 'name',
    event_type_id: 'event_type_id',
    age_category_id: 'age_category_id',
    gender: 'gender',
    is_deleted: 'is_deleted',
    is_closed: 'is_closed'
  };

  export type Mst_eventScalarFieldEnum = (typeof Mst_eventScalarFieldEnum)[keyof typeof Mst_eventScalarFieldEnum]


  export const Mst_event_resultScalarFieldEnum: {
    id: 'id',
    event_type_id: 'event_type_id',
    rank: 'rank',
    points: 'points'
  };

  export type Mst_event_resultScalarFieldEnum = (typeof Mst_event_resultScalarFieldEnum)[keyof typeof Mst_event_resultScalarFieldEnum]


  export const Mst_event_typeScalarFieldEnum: {
    id: 'id',
    name: 'name',
    type: 'type',
    participant_count: 'participant_count'
  };

  export type Mst_event_typeScalarFieldEnum = (typeof Mst_event_typeScalarFieldEnum)[keyof typeof Mst_event_typeScalarFieldEnum]


  export const Mst_roleScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type Mst_roleScalarFieldEnum = (typeof Mst_roleScalarFieldEnum)[keyof typeof Mst_roleScalarFieldEnum]


  export const Mst_templeScalarFieldEnum: {
    id: 'id',
    code: 'code',
    name: 'name',
    address: 'address',
    contact_name: 'contact_name',
    contact_phone: 'contact_phone',
    is_deleted: 'is_deleted',
    created_at: 'created_at',
    modified_at: 'modified_at'
  };

  export type Mst_templeScalarFieldEnum = (typeof Mst_templeScalarFieldEnum)[keyof typeof Mst_templeScalarFieldEnum]


  export const ProfileScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    first_name: 'first_name',
    last_name: 'last_name',
    email: 'email',
    phone: 'phone',
    aadhar_number: 'aadhar_number',
    created_at: 'created_at',
    modified_at: 'modified_at',
    is_deleted: 'is_deleted',
    is_verified: 'is_verified',
    temple_id: 'temple_id',
    dob: 'dob',
    gender: 'gender',
    role_id: 'role_id'
  };

  export type ProfileScalarFieldEnum = (typeof ProfileScalarFieldEnum)[keyof typeof ProfileScalarFieldEnum]


  export const SettingsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    value: 'value',
    created_at: 'created_at',
    modified_at: 'modified_at'
  };

  export type SettingsScalarFieldEnum = (typeof SettingsScalarFieldEnum)[keyof typeof SettingsScalarFieldEnum]


  export const Team_event_registrationScalarFieldEnum: {
    id: 'id',
    temple_id: 'temple_id',
    event_result_id: 'event_result_id',
    member_user_ids: 'member_user_ids',
    created_at: 'created_at',
    modified_at: 'modified_at',
    is_deleted: 'is_deleted',
    event_id: 'event_id',
    status: 'status'
  };

  export type Team_event_registrationScalarFieldEnum = (typeof Team_event_registrationScalarFieldEnum)[keyof typeof Team_event_registrationScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    email: 'email',
    created_at: 'created_at',
    modified_at: 'modified_at'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const User_roleScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    role_id: 'role_id'
  };

  export type User_roleScalarFieldEnum = (typeof User_roleScalarFieldEnum)[keyof typeof User_roleScalarFieldEnum]


  export const Audit_logScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    action: 'action',
    table_name: 'table_name',
    record_id: 'record_id',
    old_value: 'old_value',
    new_value: 'new_value',
    created_at: 'created_at'
  };

  export type Audit_logScalarFieldEnum = (typeof Audit_logScalarFieldEnum)[keyof typeof Audit_logScalarFieldEnum]


  export const Event_scheduleScalarFieldEnum: {
    id: 'id',
    event_id: 'event_id',
    start_time: 'start_time',
    end_time: 'end_time',
    created_at: 'created_at',
    modified_at: 'modified_at',
    is_deleted: 'is_deleted'
  };

  export type Event_scheduleScalarFieldEnum = (typeof Event_scheduleScalarFieldEnum)[keyof typeof Event_scheduleScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'RegistrationStatus'
   */
  export type EnumRegistrationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RegistrationStatus'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Gender'
   */
  export type EnumGenderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Gender'>
    


  /**
   * Reference to a field of type 'Rank'
   */
  export type EnumRankFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Rank'>
    


  /**
   * Reference to a field of type 'EventType'
   */
  export type EnumEventTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EventType'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type ChampionWhereInput = {
    AND?: ChampionWhereInput | ChampionWhereInput[]
    OR?: ChampionWhereInput[]
    NOT?: ChampionWhereInput | ChampionWhereInput[]
    id?: IntFilter<"Champion"> | number
    temple_id?: IntFilter<"Champion"> | number
    year?: IntFilter<"Champion"> | number
    host_temple_id?: IntFilter<"Champion"> | number
    created_at?: DateTimeFilter<"Champion"> | Date | string
    modified_at?: DateTimeFilter<"Champion"> | Date | string
    temple?: XOR<Mst_templeScalarRelationFilter, Mst_templeWhereInput>
    host_temple?: XOR<Mst_templeScalarRelationFilter, Mst_templeWhereInput>
  }

  export type ChampionOrderByWithRelationInput = {
    id?: SortOrder
    temple_id?: SortOrder
    year?: SortOrder
    host_temple_id?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    temple?: Mst_templeOrderByWithRelationInput
    host_temple?: Mst_templeOrderByWithRelationInput
  }

  export type ChampionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ChampionWhereInput | ChampionWhereInput[]
    OR?: ChampionWhereInput[]
    NOT?: ChampionWhereInput | ChampionWhereInput[]
    temple_id?: IntFilter<"Champion"> | number
    year?: IntFilter<"Champion"> | number
    host_temple_id?: IntFilter<"Champion"> | number
    created_at?: DateTimeFilter<"Champion"> | Date | string
    modified_at?: DateTimeFilter<"Champion"> | Date | string
    temple?: XOR<Mst_templeScalarRelationFilter, Mst_templeWhereInput>
    host_temple?: XOR<Mst_templeScalarRelationFilter, Mst_templeWhereInput>
  }, "id">

  export type ChampionOrderByWithAggregationInput = {
    id?: SortOrder
    temple_id?: SortOrder
    year?: SortOrder
    host_temple_id?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    _count?: ChampionCountOrderByAggregateInput
    _avg?: ChampionAvgOrderByAggregateInput
    _max?: ChampionMaxOrderByAggregateInput
    _min?: ChampionMinOrderByAggregateInput
    _sum?: ChampionSumOrderByAggregateInput
  }

  export type ChampionScalarWhereWithAggregatesInput = {
    AND?: ChampionScalarWhereWithAggregatesInput | ChampionScalarWhereWithAggregatesInput[]
    OR?: ChampionScalarWhereWithAggregatesInput[]
    NOT?: ChampionScalarWhereWithAggregatesInput | ChampionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Champion"> | number
    temple_id?: IntWithAggregatesFilter<"Champion"> | number
    year?: IntWithAggregatesFilter<"Champion"> | number
    host_temple_id?: IntWithAggregatesFilter<"Champion"> | number
    created_at?: DateTimeWithAggregatesFilter<"Champion"> | Date | string
    modified_at?: DateTimeWithAggregatesFilter<"Champion"> | Date | string
  }

  export type Ind_event_registrationWhereInput = {
    AND?: Ind_event_registrationWhereInput | Ind_event_registrationWhereInput[]
    OR?: Ind_event_registrationWhereInput[]
    NOT?: Ind_event_registrationWhereInput | Ind_event_registrationWhereInput[]
    id?: IntFilter<"Ind_event_registration"> | number
    event_id?: IntFilter<"Ind_event_registration"> | number
    user_id?: IntFilter<"Ind_event_registration"> | number
    event_result_id?: IntNullableFilter<"Ind_event_registration"> | number | null
    created_at?: DateTimeFilter<"Ind_event_registration"> | Date | string
    modified_at?: DateTimeFilter<"Ind_event_registration"> | Date | string
    is_deleted?: BoolFilter<"Ind_event_registration"> | boolean
    status?: EnumRegistrationStatusFilter<"Ind_event_registration"> | $Enums.RegistrationStatus
    event?: XOR<Mst_eventScalarRelationFilter, Mst_eventWhereInput>
    user?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
    event_result?: XOR<Mst_event_resultNullableScalarRelationFilter, Mst_event_resultWhereInput> | null
  }

  export type Ind_event_registrationOrderByWithRelationInput = {
    id?: SortOrder
    event_id?: SortOrder
    user_id?: SortOrder
    event_result_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    status?: SortOrder
    event?: Mst_eventOrderByWithRelationInput
    user?: ProfileOrderByWithRelationInput
    event_result?: Mst_event_resultOrderByWithRelationInput
  }

  export type Ind_event_registrationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Ind_event_registrationWhereInput | Ind_event_registrationWhereInput[]
    OR?: Ind_event_registrationWhereInput[]
    NOT?: Ind_event_registrationWhereInput | Ind_event_registrationWhereInput[]
    event_id?: IntFilter<"Ind_event_registration"> | number
    user_id?: IntFilter<"Ind_event_registration"> | number
    event_result_id?: IntNullableFilter<"Ind_event_registration"> | number | null
    created_at?: DateTimeFilter<"Ind_event_registration"> | Date | string
    modified_at?: DateTimeFilter<"Ind_event_registration"> | Date | string
    is_deleted?: BoolFilter<"Ind_event_registration"> | boolean
    status?: EnumRegistrationStatusFilter<"Ind_event_registration"> | $Enums.RegistrationStatus
    event?: XOR<Mst_eventScalarRelationFilter, Mst_eventWhereInput>
    user?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
    event_result?: XOR<Mst_event_resultNullableScalarRelationFilter, Mst_event_resultWhereInput> | null
  }, "id">

  export type Ind_event_registrationOrderByWithAggregationInput = {
    id?: SortOrder
    event_id?: SortOrder
    user_id?: SortOrder
    event_result_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    status?: SortOrder
    _count?: Ind_event_registrationCountOrderByAggregateInput
    _avg?: Ind_event_registrationAvgOrderByAggregateInput
    _max?: Ind_event_registrationMaxOrderByAggregateInput
    _min?: Ind_event_registrationMinOrderByAggregateInput
    _sum?: Ind_event_registrationSumOrderByAggregateInput
  }

  export type Ind_event_registrationScalarWhereWithAggregatesInput = {
    AND?: Ind_event_registrationScalarWhereWithAggregatesInput | Ind_event_registrationScalarWhereWithAggregatesInput[]
    OR?: Ind_event_registrationScalarWhereWithAggregatesInput[]
    NOT?: Ind_event_registrationScalarWhereWithAggregatesInput | Ind_event_registrationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Ind_event_registration"> | number
    event_id?: IntWithAggregatesFilter<"Ind_event_registration"> | number
    user_id?: IntWithAggregatesFilter<"Ind_event_registration"> | number
    event_result_id?: IntNullableWithAggregatesFilter<"Ind_event_registration"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"Ind_event_registration"> | Date | string
    modified_at?: DateTimeWithAggregatesFilter<"Ind_event_registration"> | Date | string
    is_deleted?: BoolWithAggregatesFilter<"Ind_event_registration"> | boolean
    status?: EnumRegistrationStatusWithAggregatesFilter<"Ind_event_registration"> | $Enums.RegistrationStatus
  }

  export type Mst_age_categoryWhereInput = {
    AND?: Mst_age_categoryWhereInput | Mst_age_categoryWhereInput[]
    OR?: Mst_age_categoryWhereInput[]
    NOT?: Mst_age_categoryWhereInput | Mst_age_categoryWhereInput[]
    id?: IntFilter<"Mst_age_category"> | number
    name?: StringFilter<"Mst_age_category"> | string
    from_age?: IntFilter<"Mst_age_category"> | number
    to_age?: IntFilter<"Mst_age_category"> | number
    is_deleted?: BoolFilter<"Mst_age_category"> | boolean
    events?: Mst_eventListRelationFilter
  }

  export type Mst_age_categoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    from_age?: SortOrder
    to_age?: SortOrder
    is_deleted?: SortOrder
    events?: Mst_eventOrderByRelationAggregateInput
  }

  export type Mst_age_categoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Mst_age_categoryWhereInput | Mst_age_categoryWhereInput[]
    OR?: Mst_age_categoryWhereInput[]
    NOT?: Mst_age_categoryWhereInput | Mst_age_categoryWhereInput[]
    name?: StringFilter<"Mst_age_category"> | string
    from_age?: IntFilter<"Mst_age_category"> | number
    to_age?: IntFilter<"Mst_age_category"> | number
    is_deleted?: BoolFilter<"Mst_age_category"> | boolean
    events?: Mst_eventListRelationFilter
  }, "id">

  export type Mst_age_categoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    from_age?: SortOrder
    to_age?: SortOrder
    is_deleted?: SortOrder
    _count?: Mst_age_categoryCountOrderByAggregateInput
    _avg?: Mst_age_categoryAvgOrderByAggregateInput
    _max?: Mst_age_categoryMaxOrderByAggregateInput
    _min?: Mst_age_categoryMinOrderByAggregateInput
    _sum?: Mst_age_categorySumOrderByAggregateInput
  }

  export type Mst_age_categoryScalarWhereWithAggregatesInput = {
    AND?: Mst_age_categoryScalarWhereWithAggregatesInput | Mst_age_categoryScalarWhereWithAggregatesInput[]
    OR?: Mst_age_categoryScalarWhereWithAggregatesInput[]
    NOT?: Mst_age_categoryScalarWhereWithAggregatesInput | Mst_age_categoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Mst_age_category"> | number
    name?: StringWithAggregatesFilter<"Mst_age_category"> | string
    from_age?: IntWithAggregatesFilter<"Mst_age_category"> | number
    to_age?: IntWithAggregatesFilter<"Mst_age_category"> | number
    is_deleted?: BoolWithAggregatesFilter<"Mst_age_category"> | boolean
  }

  export type Mst_eventWhereInput = {
    AND?: Mst_eventWhereInput | Mst_eventWhereInput[]
    OR?: Mst_eventWhereInput[]
    NOT?: Mst_eventWhereInput | Mst_eventWhereInput[]
    id?: IntFilter<"Mst_event"> | number
    name?: StringFilter<"Mst_event"> | string
    event_type_id?: IntFilter<"Mst_event"> | number
    age_category_id?: IntFilter<"Mst_event"> | number
    gender?: EnumGenderFilter<"Mst_event"> | $Enums.Gender
    is_deleted?: BoolFilter<"Mst_event"> | boolean
    is_closed?: BoolFilter<"Mst_event"> | boolean
    event_type?: XOR<Mst_event_typeScalarRelationFilter, Mst_event_typeWhereInput>
    age_category?: XOR<Mst_age_categoryScalarRelationFilter, Mst_age_categoryWhereInput>
    registrations?: Ind_event_registrationListRelationFilter
    team_registrations?: Team_event_registrationListRelationFilter
    schedules?: Event_scheduleListRelationFilter
  }

  export type Mst_eventOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    event_type_id?: SortOrder
    age_category_id?: SortOrder
    gender?: SortOrder
    is_deleted?: SortOrder
    is_closed?: SortOrder
    event_type?: Mst_event_typeOrderByWithRelationInput
    age_category?: Mst_age_categoryOrderByWithRelationInput
    registrations?: Ind_event_registrationOrderByRelationAggregateInput
    team_registrations?: Team_event_registrationOrderByRelationAggregateInput
    schedules?: event_scheduleOrderByRelationAggregateInput
  }

  export type Mst_eventWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Mst_eventWhereInput | Mst_eventWhereInput[]
    OR?: Mst_eventWhereInput[]
    NOT?: Mst_eventWhereInput | Mst_eventWhereInput[]
    name?: StringFilter<"Mst_event"> | string
    event_type_id?: IntFilter<"Mst_event"> | number
    age_category_id?: IntFilter<"Mst_event"> | number
    gender?: EnumGenderFilter<"Mst_event"> | $Enums.Gender
    is_deleted?: BoolFilter<"Mst_event"> | boolean
    is_closed?: BoolFilter<"Mst_event"> | boolean
    event_type?: XOR<Mst_event_typeScalarRelationFilter, Mst_event_typeWhereInput>
    age_category?: XOR<Mst_age_categoryScalarRelationFilter, Mst_age_categoryWhereInput>
    registrations?: Ind_event_registrationListRelationFilter
    team_registrations?: Team_event_registrationListRelationFilter
    schedules?: Event_scheduleListRelationFilter
  }, "id">

  export type Mst_eventOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    event_type_id?: SortOrder
    age_category_id?: SortOrder
    gender?: SortOrder
    is_deleted?: SortOrder
    is_closed?: SortOrder
    _count?: Mst_eventCountOrderByAggregateInput
    _avg?: Mst_eventAvgOrderByAggregateInput
    _max?: Mst_eventMaxOrderByAggregateInput
    _min?: Mst_eventMinOrderByAggregateInput
    _sum?: Mst_eventSumOrderByAggregateInput
  }

  export type Mst_eventScalarWhereWithAggregatesInput = {
    AND?: Mst_eventScalarWhereWithAggregatesInput | Mst_eventScalarWhereWithAggregatesInput[]
    OR?: Mst_eventScalarWhereWithAggregatesInput[]
    NOT?: Mst_eventScalarWhereWithAggregatesInput | Mst_eventScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Mst_event"> | number
    name?: StringWithAggregatesFilter<"Mst_event"> | string
    event_type_id?: IntWithAggregatesFilter<"Mst_event"> | number
    age_category_id?: IntWithAggregatesFilter<"Mst_event"> | number
    gender?: EnumGenderWithAggregatesFilter<"Mst_event"> | $Enums.Gender
    is_deleted?: BoolWithAggregatesFilter<"Mst_event"> | boolean
    is_closed?: BoolWithAggregatesFilter<"Mst_event"> | boolean
  }

  export type Mst_event_resultWhereInput = {
    AND?: Mst_event_resultWhereInput | Mst_event_resultWhereInput[]
    OR?: Mst_event_resultWhereInput[]
    NOT?: Mst_event_resultWhereInput | Mst_event_resultWhereInput[]
    id?: IntFilter<"Mst_event_result"> | number
    event_type_id?: IntFilter<"Mst_event_result"> | number
    rank?: EnumRankFilter<"Mst_event_result"> | $Enums.Rank
    points?: IntFilter<"Mst_event_result"> | number
    event_type?: XOR<Mst_event_typeScalarRelationFilter, Mst_event_typeWhereInput>
    ind_event_registrations?: Ind_event_registrationListRelationFilter
    team_event_registrations?: Team_event_registrationListRelationFilter
  }

  export type Mst_event_resultOrderByWithRelationInput = {
    id?: SortOrder
    event_type_id?: SortOrder
    rank?: SortOrder
    points?: SortOrder
    event_type?: Mst_event_typeOrderByWithRelationInput
    ind_event_registrations?: Ind_event_registrationOrderByRelationAggregateInput
    team_event_registrations?: Team_event_registrationOrderByRelationAggregateInput
  }

  export type Mst_event_resultWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Mst_event_resultWhereInput | Mst_event_resultWhereInput[]
    OR?: Mst_event_resultWhereInput[]
    NOT?: Mst_event_resultWhereInput | Mst_event_resultWhereInput[]
    event_type_id?: IntFilter<"Mst_event_result"> | number
    rank?: EnumRankFilter<"Mst_event_result"> | $Enums.Rank
    points?: IntFilter<"Mst_event_result"> | number
    event_type?: XOR<Mst_event_typeScalarRelationFilter, Mst_event_typeWhereInput>
    ind_event_registrations?: Ind_event_registrationListRelationFilter
    team_event_registrations?: Team_event_registrationListRelationFilter
  }, "id">

  export type Mst_event_resultOrderByWithAggregationInput = {
    id?: SortOrder
    event_type_id?: SortOrder
    rank?: SortOrder
    points?: SortOrder
    _count?: Mst_event_resultCountOrderByAggregateInput
    _avg?: Mst_event_resultAvgOrderByAggregateInput
    _max?: Mst_event_resultMaxOrderByAggregateInput
    _min?: Mst_event_resultMinOrderByAggregateInput
    _sum?: Mst_event_resultSumOrderByAggregateInput
  }

  export type Mst_event_resultScalarWhereWithAggregatesInput = {
    AND?: Mst_event_resultScalarWhereWithAggregatesInput | Mst_event_resultScalarWhereWithAggregatesInput[]
    OR?: Mst_event_resultScalarWhereWithAggregatesInput[]
    NOT?: Mst_event_resultScalarWhereWithAggregatesInput | Mst_event_resultScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Mst_event_result"> | number
    event_type_id?: IntWithAggregatesFilter<"Mst_event_result"> | number
    rank?: EnumRankWithAggregatesFilter<"Mst_event_result"> | $Enums.Rank
    points?: IntWithAggregatesFilter<"Mst_event_result"> | number
  }

  export type Mst_event_typeWhereInput = {
    AND?: Mst_event_typeWhereInput | Mst_event_typeWhereInput[]
    OR?: Mst_event_typeWhereInput[]
    NOT?: Mst_event_typeWhereInput | Mst_event_typeWhereInput[]
    id?: IntFilter<"Mst_event_type"> | number
    name?: StringFilter<"Mst_event_type"> | string
    type?: EnumEventTypeFilter<"Mst_event_type"> | $Enums.EventType
    participant_count?: IntFilter<"Mst_event_type"> | number
    events?: Mst_eventListRelationFilter
    results?: Mst_event_resultListRelationFilter
  }

  export type Mst_event_typeOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    participant_count?: SortOrder
    events?: Mst_eventOrderByRelationAggregateInput
    results?: Mst_event_resultOrderByRelationAggregateInput
  }

  export type Mst_event_typeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: Mst_event_typeWhereInput | Mst_event_typeWhereInput[]
    OR?: Mst_event_typeWhereInput[]
    NOT?: Mst_event_typeWhereInput | Mst_event_typeWhereInput[]
    type?: EnumEventTypeFilter<"Mst_event_type"> | $Enums.EventType
    participant_count?: IntFilter<"Mst_event_type"> | number
    events?: Mst_eventListRelationFilter
    results?: Mst_event_resultListRelationFilter
  }, "id" | "name">

  export type Mst_event_typeOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    participant_count?: SortOrder
    _count?: Mst_event_typeCountOrderByAggregateInput
    _avg?: Mst_event_typeAvgOrderByAggregateInput
    _max?: Mst_event_typeMaxOrderByAggregateInput
    _min?: Mst_event_typeMinOrderByAggregateInput
    _sum?: Mst_event_typeSumOrderByAggregateInput
  }

  export type Mst_event_typeScalarWhereWithAggregatesInput = {
    AND?: Mst_event_typeScalarWhereWithAggregatesInput | Mst_event_typeScalarWhereWithAggregatesInput[]
    OR?: Mst_event_typeScalarWhereWithAggregatesInput[]
    NOT?: Mst_event_typeScalarWhereWithAggregatesInput | Mst_event_typeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Mst_event_type"> | number
    name?: StringWithAggregatesFilter<"Mst_event_type"> | string
    type?: EnumEventTypeWithAggregatesFilter<"Mst_event_type"> | $Enums.EventType
    participant_count?: IntWithAggregatesFilter<"Mst_event_type"> | number
  }

  export type Mst_roleWhereInput = {
    AND?: Mst_roleWhereInput | Mst_roleWhereInput[]
    OR?: Mst_roleWhereInput[]
    NOT?: Mst_roleWhereInput | Mst_roleWhereInput[]
    id?: IntFilter<"Mst_role"> | number
    name?: StringFilter<"Mst_role"> | string
    profiles?: ProfileListRelationFilter
    user_roles?: User_roleListRelationFilter
  }

  export type Mst_roleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    profiles?: ProfileOrderByRelationAggregateInput
    user_roles?: User_roleOrderByRelationAggregateInput
  }

  export type Mst_roleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: Mst_roleWhereInput | Mst_roleWhereInput[]
    OR?: Mst_roleWhereInput[]
    NOT?: Mst_roleWhereInput | Mst_roleWhereInput[]
    profiles?: ProfileListRelationFilter
    user_roles?: User_roleListRelationFilter
  }, "id" | "name">

  export type Mst_roleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: Mst_roleCountOrderByAggregateInput
    _avg?: Mst_roleAvgOrderByAggregateInput
    _max?: Mst_roleMaxOrderByAggregateInput
    _min?: Mst_roleMinOrderByAggregateInput
    _sum?: Mst_roleSumOrderByAggregateInput
  }

  export type Mst_roleScalarWhereWithAggregatesInput = {
    AND?: Mst_roleScalarWhereWithAggregatesInput | Mst_roleScalarWhereWithAggregatesInput[]
    OR?: Mst_roleScalarWhereWithAggregatesInput[]
    NOT?: Mst_roleScalarWhereWithAggregatesInput | Mst_roleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Mst_role"> | number
    name?: StringWithAggregatesFilter<"Mst_role"> | string
  }

  export type Mst_templeWhereInput = {
    AND?: Mst_templeWhereInput | Mst_templeWhereInput[]
    OR?: Mst_templeWhereInput[]
    NOT?: Mst_templeWhereInput | Mst_templeWhereInput[]
    id?: IntFilter<"Mst_temple"> | number
    code?: StringFilter<"Mst_temple"> | string
    name?: StringFilter<"Mst_temple"> | string
    address?: StringNullableFilter<"Mst_temple"> | string | null
    contact_name?: StringNullableFilter<"Mst_temple"> | string | null
    contact_phone?: StringNullableFilter<"Mst_temple"> | string | null
    is_deleted?: BoolFilter<"Mst_temple"> | boolean
    created_at?: DateTimeFilter<"Mst_temple"> | Date | string
    modified_at?: DateTimeFilter<"Mst_temple"> | Date | string
    champions?: ChampionListRelationFilter
    host_champions?: ChampionListRelationFilter
    profiles?: ProfileListRelationFilter
    team_registrations?: Team_event_registrationListRelationFilter
  }

  export type Mst_templeOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    address?: SortOrderInput | SortOrder
    contact_name?: SortOrderInput | SortOrder
    contact_phone?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    champions?: ChampionOrderByRelationAggregateInput
    host_champions?: ChampionOrderByRelationAggregateInput
    profiles?: ProfileOrderByRelationAggregateInput
    team_registrations?: Team_event_registrationOrderByRelationAggregateInput
  }

  export type Mst_templeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    code?: string
    AND?: Mst_templeWhereInput | Mst_templeWhereInput[]
    OR?: Mst_templeWhereInput[]
    NOT?: Mst_templeWhereInput | Mst_templeWhereInput[]
    name?: StringFilter<"Mst_temple"> | string
    address?: StringNullableFilter<"Mst_temple"> | string | null
    contact_name?: StringNullableFilter<"Mst_temple"> | string | null
    contact_phone?: StringNullableFilter<"Mst_temple"> | string | null
    is_deleted?: BoolFilter<"Mst_temple"> | boolean
    created_at?: DateTimeFilter<"Mst_temple"> | Date | string
    modified_at?: DateTimeFilter<"Mst_temple"> | Date | string
    champions?: ChampionListRelationFilter
    host_champions?: ChampionListRelationFilter
    profiles?: ProfileListRelationFilter
    team_registrations?: Team_event_registrationListRelationFilter
  }, "id" | "code">

  export type Mst_templeOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    address?: SortOrderInput | SortOrder
    contact_name?: SortOrderInput | SortOrder
    contact_phone?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    _count?: Mst_templeCountOrderByAggregateInput
    _avg?: Mst_templeAvgOrderByAggregateInput
    _max?: Mst_templeMaxOrderByAggregateInput
    _min?: Mst_templeMinOrderByAggregateInput
    _sum?: Mst_templeSumOrderByAggregateInput
  }

  export type Mst_templeScalarWhereWithAggregatesInput = {
    AND?: Mst_templeScalarWhereWithAggregatesInput | Mst_templeScalarWhereWithAggregatesInput[]
    OR?: Mst_templeScalarWhereWithAggregatesInput[]
    NOT?: Mst_templeScalarWhereWithAggregatesInput | Mst_templeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Mst_temple"> | number
    code?: StringWithAggregatesFilter<"Mst_temple"> | string
    name?: StringWithAggregatesFilter<"Mst_temple"> | string
    address?: StringNullableWithAggregatesFilter<"Mst_temple"> | string | null
    contact_name?: StringNullableWithAggregatesFilter<"Mst_temple"> | string | null
    contact_phone?: StringNullableWithAggregatesFilter<"Mst_temple"> | string | null
    is_deleted?: BoolWithAggregatesFilter<"Mst_temple"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"Mst_temple"> | Date | string
    modified_at?: DateTimeWithAggregatesFilter<"Mst_temple"> | Date | string
  }

  export type ProfileWhereInput = {
    AND?: ProfileWhereInput | ProfileWhereInput[]
    OR?: ProfileWhereInput[]
    NOT?: ProfileWhereInput | ProfileWhereInput[]
    id?: IntFilter<"Profile"> | number
    user_id?: IntNullableFilter<"Profile"> | number | null
    first_name?: StringFilter<"Profile"> | string
    last_name?: StringNullableFilter<"Profile"> | string | null
    email?: StringNullableFilter<"Profile"> | string | null
    phone?: StringNullableFilter<"Profile"> | string | null
    aadhar_number?: StringNullableFilter<"Profile"> | string | null
    created_at?: DateTimeFilter<"Profile"> | Date | string
    modified_at?: DateTimeFilter<"Profile"> | Date | string
    is_deleted?: BoolFilter<"Profile"> | boolean
    is_verified?: BoolFilter<"Profile"> | boolean
    temple_id?: IntNullableFilter<"Profile"> | number | null
    dob?: DateTimeFilter<"Profile"> | Date | string
    gender?: EnumGenderFilter<"Profile"> | $Enums.Gender
    role_id?: IntFilter<"Profile"> | number
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    temple?: XOR<Mst_templeNullableScalarRelationFilter, Mst_templeWhereInput> | null
    role?: XOR<Mst_roleScalarRelationFilter, Mst_roleWhereInput>
    registrations?: Ind_event_registrationListRelationFilter
  }

  export type ProfileOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    first_name?: SortOrder
    last_name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    aadhar_number?: SortOrderInput | SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    is_verified?: SortOrder
    temple_id?: SortOrderInput | SortOrder
    dob?: SortOrder
    gender?: SortOrder
    role_id?: SortOrder
    user?: UserOrderByWithRelationInput
    temple?: Mst_templeOrderByWithRelationInput
    role?: Mst_roleOrderByWithRelationInput
    registrations?: Ind_event_registrationOrderByRelationAggregateInput
  }

  export type ProfileWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    user_id?: number
    aadhar_number?: string
    AND?: ProfileWhereInput | ProfileWhereInput[]
    OR?: ProfileWhereInput[]
    NOT?: ProfileWhereInput | ProfileWhereInput[]
    first_name?: StringFilter<"Profile"> | string
    last_name?: StringNullableFilter<"Profile"> | string | null
    email?: StringNullableFilter<"Profile"> | string | null
    phone?: StringNullableFilter<"Profile"> | string | null
    created_at?: DateTimeFilter<"Profile"> | Date | string
    modified_at?: DateTimeFilter<"Profile"> | Date | string
    is_deleted?: BoolFilter<"Profile"> | boolean
    is_verified?: BoolFilter<"Profile"> | boolean
    temple_id?: IntNullableFilter<"Profile"> | number | null
    dob?: DateTimeFilter<"Profile"> | Date | string
    gender?: EnumGenderFilter<"Profile"> | $Enums.Gender
    role_id?: IntFilter<"Profile"> | number
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    temple?: XOR<Mst_templeNullableScalarRelationFilter, Mst_templeWhereInput> | null
    role?: XOR<Mst_roleScalarRelationFilter, Mst_roleWhereInput>
    registrations?: Ind_event_registrationListRelationFilter
  }, "id" | "user_id" | "aadhar_number">

  export type ProfileOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    first_name?: SortOrder
    last_name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    aadhar_number?: SortOrderInput | SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    is_verified?: SortOrder
    temple_id?: SortOrderInput | SortOrder
    dob?: SortOrder
    gender?: SortOrder
    role_id?: SortOrder
    _count?: ProfileCountOrderByAggregateInput
    _avg?: ProfileAvgOrderByAggregateInput
    _max?: ProfileMaxOrderByAggregateInput
    _min?: ProfileMinOrderByAggregateInput
    _sum?: ProfileSumOrderByAggregateInput
  }

  export type ProfileScalarWhereWithAggregatesInput = {
    AND?: ProfileScalarWhereWithAggregatesInput | ProfileScalarWhereWithAggregatesInput[]
    OR?: ProfileScalarWhereWithAggregatesInput[]
    NOT?: ProfileScalarWhereWithAggregatesInput | ProfileScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Profile"> | number
    user_id?: IntNullableWithAggregatesFilter<"Profile"> | number | null
    first_name?: StringWithAggregatesFilter<"Profile"> | string
    last_name?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    email?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    aadhar_number?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"Profile"> | Date | string
    modified_at?: DateTimeWithAggregatesFilter<"Profile"> | Date | string
    is_deleted?: BoolWithAggregatesFilter<"Profile"> | boolean
    is_verified?: BoolWithAggregatesFilter<"Profile"> | boolean
    temple_id?: IntNullableWithAggregatesFilter<"Profile"> | number | null
    dob?: DateTimeWithAggregatesFilter<"Profile"> | Date | string
    gender?: EnumGenderWithAggregatesFilter<"Profile"> | $Enums.Gender
    role_id?: IntWithAggregatesFilter<"Profile"> | number
  }

  export type SettingsWhereInput = {
    AND?: SettingsWhereInput | SettingsWhereInput[]
    OR?: SettingsWhereInput[]
    NOT?: SettingsWhereInput | SettingsWhereInput[]
    id?: IntFilter<"Settings"> | number
    name?: StringFilter<"Settings"> | string
    value?: IntFilter<"Settings"> | number
    created_at?: DateTimeFilter<"Settings"> | Date | string
    modified_at?: DateTimeFilter<"Settings"> | Date | string
  }

  export type SettingsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
  }

  export type SettingsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: SettingsWhereInput | SettingsWhereInput[]
    OR?: SettingsWhereInput[]
    NOT?: SettingsWhereInput | SettingsWhereInput[]
    value?: IntFilter<"Settings"> | number
    created_at?: DateTimeFilter<"Settings"> | Date | string
    modified_at?: DateTimeFilter<"Settings"> | Date | string
  }, "id" | "name">

  export type SettingsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    _count?: SettingsCountOrderByAggregateInput
    _avg?: SettingsAvgOrderByAggregateInput
    _max?: SettingsMaxOrderByAggregateInput
    _min?: SettingsMinOrderByAggregateInput
    _sum?: SettingsSumOrderByAggregateInput
  }

  export type SettingsScalarWhereWithAggregatesInput = {
    AND?: SettingsScalarWhereWithAggregatesInput | SettingsScalarWhereWithAggregatesInput[]
    OR?: SettingsScalarWhereWithAggregatesInput[]
    NOT?: SettingsScalarWhereWithAggregatesInput | SettingsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Settings"> | number
    name?: StringWithAggregatesFilter<"Settings"> | string
    value?: IntWithAggregatesFilter<"Settings"> | number
    created_at?: DateTimeWithAggregatesFilter<"Settings"> | Date | string
    modified_at?: DateTimeWithAggregatesFilter<"Settings"> | Date | string
  }

  export type Team_event_registrationWhereInput = {
    AND?: Team_event_registrationWhereInput | Team_event_registrationWhereInput[]
    OR?: Team_event_registrationWhereInput[]
    NOT?: Team_event_registrationWhereInput | Team_event_registrationWhereInput[]
    id?: IntFilter<"Team_event_registration"> | number
    temple_id?: IntFilter<"Team_event_registration"> | number
    event_result_id?: IntNullableFilter<"Team_event_registration"> | number | null
    member_user_ids?: StringNullableFilter<"Team_event_registration"> | string | null
    created_at?: DateTimeFilter<"Team_event_registration"> | Date | string
    modified_at?: DateTimeFilter<"Team_event_registration"> | Date | string
    is_deleted?: BoolFilter<"Team_event_registration"> | boolean
    event_id?: IntFilter<"Team_event_registration"> | number
    status?: EnumRegistrationStatusFilter<"Team_event_registration"> | $Enums.RegistrationStatus
    temple?: XOR<Mst_templeScalarRelationFilter, Mst_templeWhereInput>
    event_result?: XOR<Mst_event_resultNullableScalarRelationFilter, Mst_event_resultWhereInput> | null
    event?: XOR<Mst_eventScalarRelationFilter, Mst_eventWhereInput>
  }

  export type Team_event_registrationOrderByWithRelationInput = {
    id?: SortOrder
    temple_id?: SortOrder
    event_result_id?: SortOrderInput | SortOrder
    member_user_ids?: SortOrderInput | SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    event_id?: SortOrder
    status?: SortOrder
    temple?: Mst_templeOrderByWithRelationInput
    event_result?: Mst_event_resultOrderByWithRelationInput
    event?: Mst_eventOrderByWithRelationInput
  }

  export type Team_event_registrationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Team_event_registrationWhereInput | Team_event_registrationWhereInput[]
    OR?: Team_event_registrationWhereInput[]
    NOT?: Team_event_registrationWhereInput | Team_event_registrationWhereInput[]
    temple_id?: IntFilter<"Team_event_registration"> | number
    event_result_id?: IntNullableFilter<"Team_event_registration"> | number | null
    member_user_ids?: StringNullableFilter<"Team_event_registration"> | string | null
    created_at?: DateTimeFilter<"Team_event_registration"> | Date | string
    modified_at?: DateTimeFilter<"Team_event_registration"> | Date | string
    is_deleted?: BoolFilter<"Team_event_registration"> | boolean
    event_id?: IntFilter<"Team_event_registration"> | number
    status?: EnumRegistrationStatusFilter<"Team_event_registration"> | $Enums.RegistrationStatus
    temple?: XOR<Mst_templeScalarRelationFilter, Mst_templeWhereInput>
    event_result?: XOR<Mst_event_resultNullableScalarRelationFilter, Mst_event_resultWhereInput> | null
    event?: XOR<Mst_eventScalarRelationFilter, Mst_eventWhereInput>
  }, "id">

  export type Team_event_registrationOrderByWithAggregationInput = {
    id?: SortOrder
    temple_id?: SortOrder
    event_result_id?: SortOrderInput | SortOrder
    member_user_ids?: SortOrderInput | SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    event_id?: SortOrder
    status?: SortOrder
    _count?: Team_event_registrationCountOrderByAggregateInput
    _avg?: Team_event_registrationAvgOrderByAggregateInput
    _max?: Team_event_registrationMaxOrderByAggregateInput
    _min?: Team_event_registrationMinOrderByAggregateInput
    _sum?: Team_event_registrationSumOrderByAggregateInput
  }

  export type Team_event_registrationScalarWhereWithAggregatesInput = {
    AND?: Team_event_registrationScalarWhereWithAggregatesInput | Team_event_registrationScalarWhereWithAggregatesInput[]
    OR?: Team_event_registrationScalarWhereWithAggregatesInput[]
    NOT?: Team_event_registrationScalarWhereWithAggregatesInput | Team_event_registrationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Team_event_registration"> | number
    temple_id?: IntWithAggregatesFilter<"Team_event_registration"> | number
    event_result_id?: IntNullableWithAggregatesFilter<"Team_event_registration"> | number | null
    member_user_ids?: StringNullableWithAggregatesFilter<"Team_event_registration"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"Team_event_registration"> | Date | string
    modified_at?: DateTimeWithAggregatesFilter<"Team_event_registration"> | Date | string
    is_deleted?: BoolWithAggregatesFilter<"Team_event_registration"> | boolean
    event_id?: IntWithAggregatesFilter<"Team_event_registration"> | number
    status?: EnumRegistrationStatusWithAggregatesFilter<"Team_event_registration"> | $Enums.RegistrationStatus
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    email?: StringNullableFilter<"User"> | string | null
    created_at?: DateTimeFilter<"User"> | Date | string
    modified_at?: DateTimeFilter<"User"> | Date | string
    profile?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
    user_roles?: User_roleListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrderInput | SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    profile?: ProfileOrderByWithRelationInput
    user_roles?: User_roleOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    created_at?: DateTimeFilter<"User"> | Date | string
    modified_at?: DateTimeFilter<"User"> | Date | string
    profile?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
    user_roles?: User_roleListRelationFilter
  }, "id" | "username" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrderInput | SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    username?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    email?: StringNullableWithAggregatesFilter<"User"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"User"> | Date | string
    modified_at?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type User_roleWhereInput = {
    AND?: User_roleWhereInput | User_roleWhereInput[]
    OR?: User_roleWhereInput[]
    NOT?: User_roleWhereInput | User_roleWhereInput[]
    id?: IntFilter<"User_role"> | number
    user_id?: IntFilter<"User_role"> | number
    role_id?: IntFilter<"User_role"> | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    role?: XOR<Mst_roleScalarRelationFilter, Mst_roleWhereInput>
  }

  export type User_roleOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    role_id?: SortOrder
    user?: UserOrderByWithRelationInput
    role?: Mst_roleOrderByWithRelationInput
  }

  export type User_roleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: User_roleWhereInput | User_roleWhereInput[]
    OR?: User_roleWhereInput[]
    NOT?: User_roleWhereInput | User_roleWhereInput[]
    user_id?: IntFilter<"User_role"> | number
    role_id?: IntFilter<"User_role"> | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    role?: XOR<Mst_roleScalarRelationFilter, Mst_roleWhereInput>
  }, "id">

  export type User_roleOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    role_id?: SortOrder
    _count?: User_roleCountOrderByAggregateInput
    _avg?: User_roleAvgOrderByAggregateInput
    _max?: User_roleMaxOrderByAggregateInput
    _min?: User_roleMinOrderByAggregateInput
    _sum?: User_roleSumOrderByAggregateInput
  }

  export type User_roleScalarWhereWithAggregatesInput = {
    AND?: User_roleScalarWhereWithAggregatesInput | User_roleScalarWhereWithAggregatesInput[]
    OR?: User_roleScalarWhereWithAggregatesInput[]
    NOT?: User_roleScalarWhereWithAggregatesInput | User_roleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User_role"> | number
    user_id?: IntWithAggregatesFilter<"User_role"> | number
    role_id?: IntWithAggregatesFilter<"User_role"> | number
  }

  export type Audit_logWhereInput = {
    AND?: Audit_logWhereInput | Audit_logWhereInput[]
    OR?: Audit_logWhereInput[]
    NOT?: Audit_logWhereInput | Audit_logWhereInput[]
    id?: IntFilter<"Audit_log"> | number
    user_id?: IntNullableFilter<"Audit_log"> | number | null
    action?: StringFilter<"Audit_log"> | string
    table_name?: StringFilter<"Audit_log"> | string
    record_id?: IntNullableFilter<"Audit_log"> | number | null
    old_value?: StringNullableFilter<"Audit_log"> | string | null
    new_value?: StringNullableFilter<"Audit_log"> | string | null
    created_at?: DateTimeFilter<"Audit_log"> | Date | string
  }

  export type Audit_logOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    action?: SortOrder
    table_name?: SortOrder
    record_id?: SortOrderInput | SortOrder
    old_value?: SortOrderInput | SortOrder
    new_value?: SortOrderInput | SortOrder
    created_at?: SortOrder
  }

  export type Audit_logWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Audit_logWhereInput | Audit_logWhereInput[]
    OR?: Audit_logWhereInput[]
    NOT?: Audit_logWhereInput | Audit_logWhereInput[]
    user_id?: IntNullableFilter<"Audit_log"> | number | null
    action?: StringFilter<"Audit_log"> | string
    table_name?: StringFilter<"Audit_log"> | string
    record_id?: IntNullableFilter<"Audit_log"> | number | null
    old_value?: StringNullableFilter<"Audit_log"> | string | null
    new_value?: StringNullableFilter<"Audit_log"> | string | null
    created_at?: DateTimeFilter<"Audit_log"> | Date | string
  }, "id">

  export type Audit_logOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    action?: SortOrder
    table_name?: SortOrder
    record_id?: SortOrderInput | SortOrder
    old_value?: SortOrderInput | SortOrder
    new_value?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: Audit_logCountOrderByAggregateInput
    _avg?: Audit_logAvgOrderByAggregateInput
    _max?: Audit_logMaxOrderByAggregateInput
    _min?: Audit_logMinOrderByAggregateInput
    _sum?: Audit_logSumOrderByAggregateInput
  }

  export type Audit_logScalarWhereWithAggregatesInput = {
    AND?: Audit_logScalarWhereWithAggregatesInput | Audit_logScalarWhereWithAggregatesInput[]
    OR?: Audit_logScalarWhereWithAggregatesInput[]
    NOT?: Audit_logScalarWhereWithAggregatesInput | Audit_logScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Audit_log"> | number
    user_id?: IntNullableWithAggregatesFilter<"Audit_log"> | number | null
    action?: StringWithAggregatesFilter<"Audit_log"> | string
    table_name?: StringWithAggregatesFilter<"Audit_log"> | string
    record_id?: IntNullableWithAggregatesFilter<"Audit_log"> | number | null
    old_value?: StringNullableWithAggregatesFilter<"Audit_log"> | string | null
    new_value?: StringNullableWithAggregatesFilter<"Audit_log"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"Audit_log"> | Date | string
  }

  export type event_scheduleWhereInput = {
    AND?: event_scheduleWhereInput | event_scheduleWhereInput[]
    OR?: event_scheduleWhereInput[]
    NOT?: event_scheduleWhereInput | event_scheduleWhereInput[]
    id?: IntFilter<"event_schedule"> | number
    event_id?: IntFilter<"event_schedule"> | number
    start_time?: DateTimeFilter<"event_schedule"> | Date | string
    end_time?: DateTimeFilter<"event_schedule"> | Date | string
    created_at?: DateTimeFilter<"event_schedule"> | Date | string
    modified_at?: DateTimeFilter<"event_schedule"> | Date | string
    is_deleted?: BoolFilter<"event_schedule"> | boolean
    event?: XOR<Mst_eventScalarRelationFilter, Mst_eventWhereInput>
  }

  export type event_scheduleOrderByWithRelationInput = {
    id?: SortOrder
    event_id?: SortOrder
    start_time?: SortOrder
    end_time?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    event?: Mst_eventOrderByWithRelationInput
  }

  export type event_scheduleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: event_scheduleWhereInput | event_scheduleWhereInput[]
    OR?: event_scheduleWhereInput[]
    NOT?: event_scheduleWhereInput | event_scheduleWhereInput[]
    event_id?: IntFilter<"event_schedule"> | number
    start_time?: DateTimeFilter<"event_schedule"> | Date | string
    end_time?: DateTimeFilter<"event_schedule"> | Date | string
    created_at?: DateTimeFilter<"event_schedule"> | Date | string
    modified_at?: DateTimeFilter<"event_schedule"> | Date | string
    is_deleted?: BoolFilter<"event_schedule"> | boolean
    event?: XOR<Mst_eventScalarRelationFilter, Mst_eventWhereInput>
  }, "id">

  export type event_scheduleOrderByWithAggregationInput = {
    id?: SortOrder
    event_id?: SortOrder
    start_time?: SortOrder
    end_time?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    _count?: event_scheduleCountOrderByAggregateInput
    _avg?: event_scheduleAvgOrderByAggregateInput
    _max?: event_scheduleMaxOrderByAggregateInput
    _min?: event_scheduleMinOrderByAggregateInput
    _sum?: event_scheduleSumOrderByAggregateInput
  }

  export type event_scheduleScalarWhereWithAggregatesInput = {
    AND?: event_scheduleScalarWhereWithAggregatesInput | event_scheduleScalarWhereWithAggregatesInput[]
    OR?: event_scheduleScalarWhereWithAggregatesInput[]
    NOT?: event_scheduleScalarWhereWithAggregatesInput | event_scheduleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"event_schedule"> | number
    event_id?: IntWithAggregatesFilter<"event_schedule"> | number
    start_time?: DateTimeWithAggregatesFilter<"event_schedule"> | Date | string
    end_time?: DateTimeWithAggregatesFilter<"event_schedule"> | Date | string
    created_at?: DateTimeWithAggregatesFilter<"event_schedule"> | Date | string
    modified_at?: DateTimeWithAggregatesFilter<"event_schedule"> | Date | string
    is_deleted?: BoolWithAggregatesFilter<"event_schedule"> | boolean
  }

  export type ChampionCreateInput = {
    year: number
    created_at?: Date | string
    modified_at?: Date | string
    temple: Mst_templeCreateNestedOneWithoutChampionsInput
    host_temple: Mst_templeCreateNestedOneWithoutHost_championsInput
  }

  export type ChampionUncheckedCreateInput = {
    id?: number
    temple_id: number
    year: number
    host_temple_id: number
    created_at?: Date | string
    modified_at?: Date | string
  }

  export type ChampionUpdateInput = {
    year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    temple?: Mst_templeUpdateOneRequiredWithoutChampionsNestedInput
    host_temple?: Mst_templeUpdateOneRequiredWithoutHost_championsNestedInput
  }

  export type ChampionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    temple_id?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    host_temple_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChampionCreateManyInput = {
    id?: number
    temple_id: number
    year: number
    host_temple_id: number
    created_at?: Date | string
    modified_at?: Date | string
  }

  export type ChampionUpdateManyMutationInput = {
    year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChampionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    temple_id?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    host_temple_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Ind_event_registrationCreateInput = {
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
    event: Mst_eventCreateNestedOneWithoutRegistrationsInput
    user: ProfileCreateNestedOneWithoutRegistrationsInput
    event_result?: Mst_event_resultCreateNestedOneWithoutInd_event_registrationsInput
  }

  export type Ind_event_registrationUncheckedCreateInput = {
    id?: number
    event_id: number
    user_id: number
    event_result_id?: number | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
  }

  export type Ind_event_registrationUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
    event?: Mst_eventUpdateOneRequiredWithoutRegistrationsNestedInput
    user?: ProfileUpdateOneRequiredWithoutRegistrationsNestedInput
    event_result?: Mst_event_resultUpdateOneWithoutInd_event_registrationsNestedInput
  }

  export type Ind_event_registrationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    event_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    event_result_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type Ind_event_registrationCreateManyInput = {
    id?: number
    event_id: number
    user_id: number
    event_result_id?: number | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
  }

  export type Ind_event_registrationUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type Ind_event_registrationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    event_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    event_result_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type Mst_age_categoryCreateInput = {
    name: string
    from_age: number
    to_age: number
    is_deleted?: boolean
    events?: Mst_eventCreateNestedManyWithoutAge_categoryInput
  }

  export type Mst_age_categoryUncheckedCreateInput = {
    id?: number
    name: string
    from_age: number
    to_age: number
    is_deleted?: boolean
    events?: Mst_eventUncheckedCreateNestedManyWithoutAge_categoryInput
  }

  export type Mst_age_categoryUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    from_age?: IntFieldUpdateOperationsInput | number
    to_age?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    events?: Mst_eventUpdateManyWithoutAge_categoryNestedInput
  }

  export type Mst_age_categoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    from_age?: IntFieldUpdateOperationsInput | number
    to_age?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    events?: Mst_eventUncheckedUpdateManyWithoutAge_categoryNestedInput
  }

  export type Mst_age_categoryCreateManyInput = {
    id?: number
    name: string
    from_age: number
    to_age: number
    is_deleted?: boolean
  }

  export type Mst_age_categoryUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    from_age?: IntFieldUpdateOperationsInput | number
    to_age?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type Mst_age_categoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    from_age?: IntFieldUpdateOperationsInput | number
    to_age?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type Mst_eventCreateInput = {
    name: string
    gender: $Enums.Gender
    is_deleted?: boolean
    is_closed?: boolean
    event_type: Mst_event_typeCreateNestedOneWithoutEventsInput
    age_category: Mst_age_categoryCreateNestedOneWithoutEventsInput
    registrations?: Ind_event_registrationCreateNestedManyWithoutEventInput
    team_registrations?: Team_event_registrationCreateNestedManyWithoutEventInput
    schedules?: event_scheduleCreateNestedManyWithoutEventInput
  }

  export type Mst_eventUncheckedCreateInput = {
    id?: number
    name: string
    event_type_id: number
    age_category_id: number
    gender: $Enums.Gender
    is_deleted?: boolean
    is_closed?: boolean
    registrations?: Ind_event_registrationUncheckedCreateNestedManyWithoutEventInput
    team_registrations?: Team_event_registrationUncheckedCreateNestedManyWithoutEventInput
    schedules?: event_scheduleUncheckedCreateNestedManyWithoutEventInput
  }

  export type Mst_eventUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
    event_type?: Mst_event_typeUpdateOneRequiredWithoutEventsNestedInput
    age_category?: Mst_age_categoryUpdateOneRequiredWithoutEventsNestedInput
    registrations?: Ind_event_registrationUpdateManyWithoutEventNestedInput
    team_registrations?: Team_event_registrationUpdateManyWithoutEventNestedInput
    schedules?: event_scheduleUpdateManyWithoutEventNestedInput
  }

  export type Mst_eventUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    event_type_id?: IntFieldUpdateOperationsInput | number
    age_category_id?: IntFieldUpdateOperationsInput | number
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
    registrations?: Ind_event_registrationUncheckedUpdateManyWithoutEventNestedInput
    team_registrations?: Team_event_registrationUncheckedUpdateManyWithoutEventNestedInput
    schedules?: event_scheduleUncheckedUpdateManyWithoutEventNestedInput
  }

  export type Mst_eventCreateManyInput = {
    id?: number
    name: string
    event_type_id: number
    age_category_id: number
    gender: $Enums.Gender
    is_deleted?: boolean
    is_closed?: boolean
  }

  export type Mst_eventUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
  }

  export type Mst_eventUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    event_type_id?: IntFieldUpdateOperationsInput | number
    age_category_id?: IntFieldUpdateOperationsInput | number
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
  }

  export type Mst_event_resultCreateInput = {
    rank: $Enums.Rank
    points: number
    event_type: Mst_event_typeCreateNestedOneWithoutResultsInput
    ind_event_registrations?: Ind_event_registrationCreateNestedManyWithoutEvent_resultInput
    team_event_registrations?: Team_event_registrationCreateNestedManyWithoutEvent_resultInput
  }

  export type Mst_event_resultUncheckedCreateInput = {
    id?: number
    event_type_id: number
    rank: $Enums.Rank
    points: number
    ind_event_registrations?: Ind_event_registrationUncheckedCreateNestedManyWithoutEvent_resultInput
    team_event_registrations?: Team_event_registrationUncheckedCreateNestedManyWithoutEvent_resultInput
  }

  export type Mst_event_resultUpdateInput = {
    rank?: EnumRankFieldUpdateOperationsInput | $Enums.Rank
    points?: IntFieldUpdateOperationsInput | number
    event_type?: Mst_event_typeUpdateOneRequiredWithoutResultsNestedInput
    ind_event_registrations?: Ind_event_registrationUpdateManyWithoutEvent_resultNestedInput
    team_event_registrations?: Team_event_registrationUpdateManyWithoutEvent_resultNestedInput
  }

  export type Mst_event_resultUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    event_type_id?: IntFieldUpdateOperationsInput | number
    rank?: EnumRankFieldUpdateOperationsInput | $Enums.Rank
    points?: IntFieldUpdateOperationsInput | number
    ind_event_registrations?: Ind_event_registrationUncheckedUpdateManyWithoutEvent_resultNestedInput
    team_event_registrations?: Team_event_registrationUncheckedUpdateManyWithoutEvent_resultNestedInput
  }

  export type Mst_event_resultCreateManyInput = {
    id?: number
    event_type_id: number
    rank: $Enums.Rank
    points: number
  }

  export type Mst_event_resultUpdateManyMutationInput = {
    rank?: EnumRankFieldUpdateOperationsInput | $Enums.Rank
    points?: IntFieldUpdateOperationsInput | number
  }

  export type Mst_event_resultUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    event_type_id?: IntFieldUpdateOperationsInput | number
    rank?: EnumRankFieldUpdateOperationsInput | $Enums.Rank
    points?: IntFieldUpdateOperationsInput | number
  }

  export type Mst_event_typeCreateInput = {
    name: string
    type: $Enums.EventType
    participant_count?: number
    events?: Mst_eventCreateNestedManyWithoutEvent_typeInput
    results?: Mst_event_resultCreateNestedManyWithoutEvent_typeInput
  }

  export type Mst_event_typeUncheckedCreateInput = {
    id?: number
    name: string
    type: $Enums.EventType
    participant_count?: number
    events?: Mst_eventUncheckedCreateNestedManyWithoutEvent_typeInput
    results?: Mst_event_resultUncheckedCreateNestedManyWithoutEvent_typeInput
  }

  export type Mst_event_typeUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumEventTypeFieldUpdateOperationsInput | $Enums.EventType
    participant_count?: IntFieldUpdateOperationsInput | number
    events?: Mst_eventUpdateManyWithoutEvent_typeNestedInput
    results?: Mst_event_resultUpdateManyWithoutEvent_typeNestedInput
  }

  export type Mst_event_typeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumEventTypeFieldUpdateOperationsInput | $Enums.EventType
    participant_count?: IntFieldUpdateOperationsInput | number
    events?: Mst_eventUncheckedUpdateManyWithoutEvent_typeNestedInput
    results?: Mst_event_resultUncheckedUpdateManyWithoutEvent_typeNestedInput
  }

  export type Mst_event_typeCreateManyInput = {
    id?: number
    name: string
    type: $Enums.EventType
    participant_count?: number
  }

  export type Mst_event_typeUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumEventTypeFieldUpdateOperationsInput | $Enums.EventType
    participant_count?: IntFieldUpdateOperationsInput | number
  }

  export type Mst_event_typeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumEventTypeFieldUpdateOperationsInput | $Enums.EventType
    participant_count?: IntFieldUpdateOperationsInput | number
  }

  export type Mst_roleCreateInput = {
    name: string
    profiles?: ProfileCreateNestedManyWithoutRoleInput
    user_roles?: User_roleCreateNestedManyWithoutRoleInput
  }

  export type Mst_roleUncheckedCreateInput = {
    id?: number
    name: string
    profiles?: ProfileUncheckedCreateNestedManyWithoutRoleInput
    user_roles?: User_roleUncheckedCreateNestedManyWithoutRoleInput
  }

  export type Mst_roleUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    profiles?: ProfileUpdateManyWithoutRoleNestedInput
    user_roles?: User_roleUpdateManyWithoutRoleNestedInput
  }

  export type Mst_roleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    profiles?: ProfileUncheckedUpdateManyWithoutRoleNestedInput
    user_roles?: User_roleUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type Mst_roleCreateManyInput = {
    id?: number
    name: string
  }

  export type Mst_roleUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type Mst_roleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type Mst_templeCreateInput = {
    code: string
    name: string
    address?: string | null
    contact_name?: string | null
    contact_phone?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    modified_at?: Date | string
    champions?: ChampionCreateNestedManyWithoutTempleInput
    host_champions?: ChampionCreateNestedManyWithoutHost_templeInput
    profiles?: ProfileCreateNestedManyWithoutTempleInput
    team_registrations?: Team_event_registrationCreateNestedManyWithoutTempleInput
  }

  export type Mst_templeUncheckedCreateInput = {
    id?: number
    code: string
    name: string
    address?: string | null
    contact_name?: string | null
    contact_phone?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    modified_at?: Date | string
    champions?: ChampionUncheckedCreateNestedManyWithoutTempleInput
    host_champions?: ChampionUncheckedCreateNestedManyWithoutHost_templeInput
    profiles?: ProfileUncheckedCreateNestedManyWithoutTempleInput
    team_registrations?: Team_event_registrationUncheckedCreateNestedManyWithoutTempleInput
  }

  export type Mst_templeUpdateInput = {
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    champions?: ChampionUpdateManyWithoutTempleNestedInput
    host_champions?: ChampionUpdateManyWithoutHost_templeNestedInput
    profiles?: ProfileUpdateManyWithoutTempleNestedInput
    team_registrations?: Team_event_registrationUpdateManyWithoutTempleNestedInput
  }

  export type Mst_templeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    champions?: ChampionUncheckedUpdateManyWithoutTempleNestedInput
    host_champions?: ChampionUncheckedUpdateManyWithoutHost_templeNestedInput
    profiles?: ProfileUncheckedUpdateManyWithoutTempleNestedInput
    team_registrations?: Team_event_registrationUncheckedUpdateManyWithoutTempleNestedInput
  }

  export type Mst_templeCreateManyInput = {
    id?: number
    code: string
    name: string
    address?: string | null
    contact_name?: string | null
    contact_phone?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    modified_at?: Date | string
  }

  export type Mst_templeUpdateManyMutationInput = {
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Mst_templeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfileCreateInput = {
    first_name: string
    last_name?: string | null
    email?: string | null
    phone?: string | null
    aadhar_number?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    is_verified?: boolean
    dob: Date | string
    gender: $Enums.Gender
    user?: UserCreateNestedOneWithoutProfileInput
    temple?: Mst_templeCreateNestedOneWithoutProfilesInput
    role?: Mst_roleCreateNestedOneWithoutProfilesInput
    registrations?: Ind_event_registrationCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateInput = {
    id?: number
    user_id?: number | null
    first_name: string
    last_name?: string | null
    email?: string | null
    phone?: string | null
    aadhar_number?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    is_verified?: boolean
    temple_id?: number | null
    dob: Date | string
    gender: $Enums.Gender
    role_id?: number
    registrations?: Ind_event_registrationUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileUpdateInput = {
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    dob?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    user?: UserUpdateOneWithoutProfileNestedInput
    temple?: Mst_templeUpdateOneWithoutProfilesNestedInput
    role?: Mst_roleUpdateOneRequiredWithoutProfilesNestedInput
    registrations?: Ind_event_registrationUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    temple_id?: NullableIntFieldUpdateOperationsInput | number | null
    dob?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    role_id?: IntFieldUpdateOperationsInput | number
    registrations?: Ind_event_registrationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProfileCreateManyInput = {
    id?: number
    user_id?: number | null
    first_name: string
    last_name?: string | null
    email?: string | null
    phone?: string | null
    aadhar_number?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    is_verified?: boolean
    temple_id?: number | null
    dob: Date | string
    gender: $Enums.Gender
    role_id?: number
  }

  export type ProfileUpdateManyMutationInput = {
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    dob?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
  }

  export type ProfileUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    temple_id?: NullableIntFieldUpdateOperationsInput | number | null
    dob?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    role_id?: IntFieldUpdateOperationsInput | number
  }

  export type SettingsCreateInput = {
    name: string
    value: number
    created_at?: Date | string
    modified_at?: Date | string
  }

  export type SettingsUncheckedCreateInput = {
    id?: number
    name: string
    value: number
    created_at?: Date | string
    modified_at?: Date | string
  }

  export type SettingsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SettingsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SettingsCreateManyInput = {
    id?: number
    name: string
    value: number
    created_at?: Date | string
    modified_at?: Date | string
  }

  export type SettingsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SettingsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Team_event_registrationCreateInput = {
    member_user_ids?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
    temple: Mst_templeCreateNestedOneWithoutTeam_registrationsInput
    event_result?: Mst_event_resultCreateNestedOneWithoutTeam_event_registrationsInput
    event: Mst_eventCreateNestedOneWithoutTeam_registrationsInput
  }

  export type Team_event_registrationUncheckedCreateInput = {
    id?: number
    temple_id: number
    event_result_id?: number | null
    member_user_ids?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    event_id: number
    status?: $Enums.RegistrationStatus
  }

  export type Team_event_registrationUpdateInput = {
    member_user_ids?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
    temple?: Mst_templeUpdateOneRequiredWithoutTeam_registrationsNestedInput
    event_result?: Mst_event_resultUpdateOneWithoutTeam_event_registrationsNestedInput
    event?: Mst_eventUpdateOneRequiredWithoutTeam_registrationsNestedInput
  }

  export type Team_event_registrationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    temple_id?: IntFieldUpdateOperationsInput | number
    event_result_id?: NullableIntFieldUpdateOperationsInput | number | null
    member_user_ids?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    event_id?: IntFieldUpdateOperationsInput | number
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type Team_event_registrationCreateManyInput = {
    id?: number
    temple_id: number
    event_result_id?: number | null
    member_user_ids?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    event_id: number
    status?: $Enums.RegistrationStatus
  }

  export type Team_event_registrationUpdateManyMutationInput = {
    member_user_ids?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type Team_event_registrationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    temple_id?: IntFieldUpdateOperationsInput | number
    event_result_id?: NullableIntFieldUpdateOperationsInput | number | null
    member_user_ids?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    event_id?: IntFieldUpdateOperationsInput | number
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type UserCreateInput = {
    username: string
    password: string
    email?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    profile?: ProfileCreateNestedOneWithoutUserInput
    user_roles?: User_roleCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    username: string
    password: string
    email?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    user_roles?: User_roleUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: ProfileUpdateOneWithoutUserNestedInput
    user_roles?: User_roleUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    user_roles?: User_roleUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    username: string
    password: string
    email?: string | null
    created_at?: Date | string
    modified_at?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type User_roleCreateInput = {
    user: UserCreateNestedOneWithoutUser_rolesInput
    role: Mst_roleCreateNestedOneWithoutUser_rolesInput
  }

  export type User_roleUncheckedCreateInput = {
    id?: number
    user_id: number
    role_id: number
  }

  export type User_roleUpdateInput = {
    user?: UserUpdateOneRequiredWithoutUser_rolesNestedInput
    role?: Mst_roleUpdateOneRequiredWithoutUser_rolesNestedInput
  }

  export type User_roleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
  }

  export type User_roleCreateManyInput = {
    id?: number
    user_id: number
    role_id: number
  }

  export type User_roleUpdateManyMutationInput = {

  }

  export type User_roleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
  }

  export type Audit_logCreateInput = {
    user_id?: number | null
    action: string
    table_name: string
    record_id?: number | null
    old_value?: string | null
    new_value?: string | null
    created_at?: Date | string
  }

  export type Audit_logUncheckedCreateInput = {
    id?: number
    user_id?: number | null
    action: string
    table_name: string
    record_id?: number | null
    old_value?: string | null
    new_value?: string | null
    created_at?: Date | string
  }

  export type Audit_logUpdateInput = {
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    action?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    record_id?: NullableIntFieldUpdateOperationsInput | number | null
    old_value?: NullableStringFieldUpdateOperationsInput | string | null
    new_value?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Audit_logUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    action?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    record_id?: NullableIntFieldUpdateOperationsInput | number | null
    old_value?: NullableStringFieldUpdateOperationsInput | string | null
    new_value?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Audit_logCreateManyInput = {
    id?: number
    user_id?: number | null
    action: string
    table_name: string
    record_id?: number | null
    old_value?: string | null
    new_value?: string | null
    created_at?: Date | string
  }

  export type Audit_logUpdateManyMutationInput = {
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    action?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    record_id?: NullableIntFieldUpdateOperationsInput | number | null
    old_value?: NullableStringFieldUpdateOperationsInput | string | null
    new_value?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Audit_logUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    action?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    record_id?: NullableIntFieldUpdateOperationsInput | number | null
    old_value?: NullableStringFieldUpdateOperationsInput | string | null
    new_value?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type event_scheduleCreateInput = {
    start_time: Date | string
    end_time: Date | string
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    event: Mst_eventCreateNestedOneWithoutSchedulesInput
  }

  export type event_scheduleUncheckedCreateInput = {
    id?: number
    event_id: number
    start_time: Date | string
    end_time: Date | string
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
  }

  export type event_scheduleUpdateInput = {
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    event?: Mst_eventUpdateOneRequiredWithoutSchedulesNestedInput
  }

  export type event_scheduleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    event_id?: IntFieldUpdateOperationsInput | number
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type event_scheduleCreateManyInput = {
    id?: number
    event_id: number
    start_time: Date | string
    end_time: Date | string
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
  }

  export type event_scheduleUpdateManyMutationInput = {
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type event_scheduleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    event_id?: IntFieldUpdateOperationsInput | number
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type Mst_templeScalarRelationFilter = {
    is?: Mst_templeWhereInput
    isNot?: Mst_templeWhereInput
  }

  export type ChampionCountOrderByAggregateInput = {
    id?: SortOrder
    temple_id?: SortOrder
    year?: SortOrder
    host_temple_id?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
  }

  export type ChampionAvgOrderByAggregateInput = {
    id?: SortOrder
    temple_id?: SortOrder
    year?: SortOrder
    host_temple_id?: SortOrder
  }

  export type ChampionMaxOrderByAggregateInput = {
    id?: SortOrder
    temple_id?: SortOrder
    year?: SortOrder
    host_temple_id?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
  }

  export type ChampionMinOrderByAggregateInput = {
    id?: SortOrder
    temple_id?: SortOrder
    year?: SortOrder
    host_temple_id?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
  }

  export type ChampionSumOrderByAggregateInput = {
    id?: SortOrder
    temple_id?: SortOrder
    year?: SortOrder
    host_temple_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type EnumRegistrationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RegistrationStatus | EnumRegistrationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RegistrationStatus[]
    notIn?: $Enums.RegistrationStatus[]
    not?: NestedEnumRegistrationStatusFilter<$PrismaModel> | $Enums.RegistrationStatus
  }

  export type Mst_eventScalarRelationFilter = {
    is?: Mst_eventWhereInput
    isNot?: Mst_eventWhereInput
  }

  export type ProfileScalarRelationFilter = {
    is?: ProfileWhereInput
    isNot?: ProfileWhereInput
  }

  export type Mst_event_resultNullableScalarRelationFilter = {
    is?: Mst_event_resultWhereInput | null
    isNot?: Mst_event_resultWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type Ind_event_registrationCountOrderByAggregateInput = {
    id?: SortOrder
    event_id?: SortOrder
    user_id?: SortOrder
    event_result_id?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    status?: SortOrder
  }

  export type Ind_event_registrationAvgOrderByAggregateInput = {
    id?: SortOrder
    event_id?: SortOrder
    user_id?: SortOrder
    event_result_id?: SortOrder
  }

  export type Ind_event_registrationMaxOrderByAggregateInput = {
    id?: SortOrder
    event_id?: SortOrder
    user_id?: SortOrder
    event_result_id?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    status?: SortOrder
  }

  export type Ind_event_registrationMinOrderByAggregateInput = {
    id?: SortOrder
    event_id?: SortOrder
    user_id?: SortOrder
    event_result_id?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    status?: SortOrder
  }

  export type Ind_event_registrationSumOrderByAggregateInput = {
    id?: SortOrder
    event_id?: SortOrder
    user_id?: SortOrder
    event_result_id?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EnumRegistrationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RegistrationStatus | EnumRegistrationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RegistrationStatus[]
    notIn?: $Enums.RegistrationStatus[]
    not?: NestedEnumRegistrationStatusWithAggregatesFilter<$PrismaModel> | $Enums.RegistrationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRegistrationStatusFilter<$PrismaModel>
    _max?: NestedEnumRegistrationStatusFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type Mst_eventListRelationFilter = {
    every?: Mst_eventWhereInput
    some?: Mst_eventWhereInput
    none?: Mst_eventWhereInput
  }

  export type Mst_eventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Mst_age_categoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    from_age?: SortOrder
    to_age?: SortOrder
    is_deleted?: SortOrder
  }

  export type Mst_age_categoryAvgOrderByAggregateInput = {
    id?: SortOrder
    from_age?: SortOrder
    to_age?: SortOrder
  }

  export type Mst_age_categoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    from_age?: SortOrder
    to_age?: SortOrder
    is_deleted?: SortOrder
  }

  export type Mst_age_categoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    from_age?: SortOrder
    to_age?: SortOrder
    is_deleted?: SortOrder
  }

  export type Mst_age_categorySumOrderByAggregateInput = {
    id?: SortOrder
    from_age?: SortOrder
    to_age?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type EnumGenderFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel>
    in?: $Enums.Gender[]
    notIn?: $Enums.Gender[]
    not?: NestedEnumGenderFilter<$PrismaModel> | $Enums.Gender
  }

  export type Mst_event_typeScalarRelationFilter = {
    is?: Mst_event_typeWhereInput
    isNot?: Mst_event_typeWhereInput
  }

  export type Mst_age_categoryScalarRelationFilter = {
    is?: Mst_age_categoryWhereInput
    isNot?: Mst_age_categoryWhereInput
  }

  export type Ind_event_registrationListRelationFilter = {
    every?: Ind_event_registrationWhereInput
    some?: Ind_event_registrationWhereInput
    none?: Ind_event_registrationWhereInput
  }

  export type Team_event_registrationListRelationFilter = {
    every?: Team_event_registrationWhereInput
    some?: Team_event_registrationWhereInput
    none?: Team_event_registrationWhereInput
  }

  export type Event_scheduleListRelationFilter = {
    every?: event_scheduleWhereInput
    some?: event_scheduleWhereInput
    none?: event_scheduleWhereInput
  }

  export type Ind_event_registrationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Team_event_registrationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type event_scheduleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Mst_eventCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    event_type_id?: SortOrder
    age_category_id?: SortOrder
    gender?: SortOrder
    is_deleted?: SortOrder
    is_closed?: SortOrder
  }

  export type Mst_eventAvgOrderByAggregateInput = {
    id?: SortOrder
    event_type_id?: SortOrder
    age_category_id?: SortOrder
  }

  export type Mst_eventMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    event_type_id?: SortOrder
    age_category_id?: SortOrder
    gender?: SortOrder
    is_deleted?: SortOrder
    is_closed?: SortOrder
  }

  export type Mst_eventMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    event_type_id?: SortOrder
    age_category_id?: SortOrder
    gender?: SortOrder
    is_deleted?: SortOrder
    is_closed?: SortOrder
  }

  export type Mst_eventSumOrderByAggregateInput = {
    id?: SortOrder
    event_type_id?: SortOrder
    age_category_id?: SortOrder
  }

  export type EnumGenderWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel>
    in?: $Enums.Gender[]
    notIn?: $Enums.Gender[]
    not?: NestedEnumGenderWithAggregatesFilter<$PrismaModel> | $Enums.Gender
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGenderFilter<$PrismaModel>
    _max?: NestedEnumGenderFilter<$PrismaModel>
  }

  export type EnumRankFilter<$PrismaModel = never> = {
    equals?: $Enums.Rank | EnumRankFieldRefInput<$PrismaModel>
    in?: $Enums.Rank[]
    notIn?: $Enums.Rank[]
    not?: NestedEnumRankFilter<$PrismaModel> | $Enums.Rank
  }

  export type Mst_event_resultCountOrderByAggregateInput = {
    id?: SortOrder
    event_type_id?: SortOrder
    rank?: SortOrder
    points?: SortOrder
  }

  export type Mst_event_resultAvgOrderByAggregateInput = {
    id?: SortOrder
    event_type_id?: SortOrder
    points?: SortOrder
  }

  export type Mst_event_resultMaxOrderByAggregateInput = {
    id?: SortOrder
    event_type_id?: SortOrder
    rank?: SortOrder
    points?: SortOrder
  }

  export type Mst_event_resultMinOrderByAggregateInput = {
    id?: SortOrder
    event_type_id?: SortOrder
    rank?: SortOrder
    points?: SortOrder
  }

  export type Mst_event_resultSumOrderByAggregateInput = {
    id?: SortOrder
    event_type_id?: SortOrder
    points?: SortOrder
  }

  export type EnumRankWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Rank | EnumRankFieldRefInput<$PrismaModel>
    in?: $Enums.Rank[]
    notIn?: $Enums.Rank[]
    not?: NestedEnumRankWithAggregatesFilter<$PrismaModel> | $Enums.Rank
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRankFilter<$PrismaModel>
    _max?: NestedEnumRankFilter<$PrismaModel>
  }

  export type EnumEventTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.EventType | EnumEventTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EventType[]
    notIn?: $Enums.EventType[]
    not?: NestedEnumEventTypeFilter<$PrismaModel> | $Enums.EventType
  }

  export type Mst_event_resultListRelationFilter = {
    every?: Mst_event_resultWhereInput
    some?: Mst_event_resultWhereInput
    none?: Mst_event_resultWhereInput
  }

  export type Mst_event_resultOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Mst_event_typeCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    participant_count?: SortOrder
  }

  export type Mst_event_typeAvgOrderByAggregateInput = {
    id?: SortOrder
    participant_count?: SortOrder
  }

  export type Mst_event_typeMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    participant_count?: SortOrder
  }

  export type Mst_event_typeMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    participant_count?: SortOrder
  }

  export type Mst_event_typeSumOrderByAggregateInput = {
    id?: SortOrder
    participant_count?: SortOrder
  }

  export type EnumEventTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EventType | EnumEventTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EventType[]
    notIn?: $Enums.EventType[]
    not?: NestedEnumEventTypeWithAggregatesFilter<$PrismaModel> | $Enums.EventType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEventTypeFilter<$PrismaModel>
    _max?: NestedEnumEventTypeFilter<$PrismaModel>
  }

  export type ProfileListRelationFilter = {
    every?: ProfileWhereInput
    some?: ProfileWhereInput
    none?: ProfileWhereInput
  }

  export type User_roleListRelationFilter = {
    every?: User_roleWhereInput
    some?: User_roleWhereInput
    none?: User_roleWhereInput
  }

  export type ProfileOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type User_roleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Mst_roleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type Mst_roleAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Mst_roleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type Mst_roleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type Mst_roleSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type ChampionListRelationFilter = {
    every?: ChampionWhereInput
    some?: ChampionWhereInput
    none?: ChampionWhereInput
  }

  export type ChampionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Mst_templeCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    address?: SortOrder
    contact_name?: SortOrder
    contact_phone?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
  }

  export type Mst_templeAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Mst_templeMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    address?: SortOrder
    contact_name?: SortOrder
    contact_phone?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
  }

  export type Mst_templeMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    address?: SortOrder
    contact_name?: SortOrder
    contact_phone?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
  }

  export type Mst_templeSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type Mst_templeNullableScalarRelationFilter = {
    is?: Mst_templeWhereInput | null
    isNot?: Mst_templeWhereInput | null
  }

  export type Mst_roleScalarRelationFilter = {
    is?: Mst_roleWhereInput
    isNot?: Mst_roleWhereInput
  }

  export type ProfileCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    aadhar_number?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    is_verified?: SortOrder
    temple_id?: SortOrder
    dob?: SortOrder
    gender?: SortOrder
    role_id?: SortOrder
  }

  export type ProfileAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    temple_id?: SortOrder
    role_id?: SortOrder
  }

  export type ProfileMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    aadhar_number?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    is_verified?: SortOrder
    temple_id?: SortOrder
    dob?: SortOrder
    gender?: SortOrder
    role_id?: SortOrder
  }

  export type ProfileMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    aadhar_number?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    is_verified?: SortOrder
    temple_id?: SortOrder
    dob?: SortOrder
    gender?: SortOrder
    role_id?: SortOrder
  }

  export type ProfileSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    temple_id?: SortOrder
    role_id?: SortOrder
  }

  export type SettingsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
  }

  export type SettingsAvgOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type SettingsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
  }

  export type SettingsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
  }

  export type SettingsSumOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type Team_event_registrationCountOrderByAggregateInput = {
    id?: SortOrder
    temple_id?: SortOrder
    event_result_id?: SortOrder
    member_user_ids?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    event_id?: SortOrder
    status?: SortOrder
  }

  export type Team_event_registrationAvgOrderByAggregateInput = {
    id?: SortOrder
    temple_id?: SortOrder
    event_result_id?: SortOrder
    event_id?: SortOrder
  }

  export type Team_event_registrationMaxOrderByAggregateInput = {
    id?: SortOrder
    temple_id?: SortOrder
    event_result_id?: SortOrder
    member_user_ids?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    event_id?: SortOrder
    status?: SortOrder
  }

  export type Team_event_registrationMinOrderByAggregateInput = {
    id?: SortOrder
    temple_id?: SortOrder
    event_result_id?: SortOrder
    member_user_ids?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
    event_id?: SortOrder
    status?: SortOrder
  }

  export type Team_event_registrationSumOrderByAggregateInput = {
    id?: SortOrder
    temple_id?: SortOrder
    event_result_id?: SortOrder
    event_id?: SortOrder
  }

  export type ProfileNullableScalarRelationFilter = {
    is?: ProfileWhereInput | null
    isNot?: ProfileWhereInput | null
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type User_roleCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    role_id?: SortOrder
  }

  export type User_roleAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    role_id?: SortOrder
  }

  export type User_roleMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    role_id?: SortOrder
  }

  export type User_roleMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    role_id?: SortOrder
  }

  export type User_roleSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    role_id?: SortOrder
  }

  export type Audit_logCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    action?: SortOrder
    table_name?: SortOrder
    record_id?: SortOrder
    old_value?: SortOrder
    new_value?: SortOrder
    created_at?: SortOrder
  }

  export type Audit_logAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    record_id?: SortOrder
  }

  export type Audit_logMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    action?: SortOrder
    table_name?: SortOrder
    record_id?: SortOrder
    old_value?: SortOrder
    new_value?: SortOrder
    created_at?: SortOrder
  }

  export type Audit_logMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    action?: SortOrder
    table_name?: SortOrder
    record_id?: SortOrder
    old_value?: SortOrder
    new_value?: SortOrder
    created_at?: SortOrder
  }

  export type Audit_logSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    record_id?: SortOrder
  }

  export type event_scheduleCountOrderByAggregateInput = {
    id?: SortOrder
    event_id?: SortOrder
    start_time?: SortOrder
    end_time?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
  }

  export type event_scheduleAvgOrderByAggregateInput = {
    id?: SortOrder
    event_id?: SortOrder
  }

  export type event_scheduleMaxOrderByAggregateInput = {
    id?: SortOrder
    event_id?: SortOrder
    start_time?: SortOrder
    end_time?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
  }

  export type event_scheduleMinOrderByAggregateInput = {
    id?: SortOrder
    event_id?: SortOrder
    start_time?: SortOrder
    end_time?: SortOrder
    created_at?: SortOrder
    modified_at?: SortOrder
    is_deleted?: SortOrder
  }

  export type event_scheduleSumOrderByAggregateInput = {
    id?: SortOrder
    event_id?: SortOrder
  }

  export type Mst_templeCreateNestedOneWithoutChampionsInput = {
    create?: XOR<Mst_templeCreateWithoutChampionsInput, Mst_templeUncheckedCreateWithoutChampionsInput>
    connectOrCreate?: Mst_templeCreateOrConnectWithoutChampionsInput
    connect?: Mst_templeWhereUniqueInput
  }

  export type Mst_templeCreateNestedOneWithoutHost_championsInput = {
    create?: XOR<Mst_templeCreateWithoutHost_championsInput, Mst_templeUncheckedCreateWithoutHost_championsInput>
    connectOrCreate?: Mst_templeCreateOrConnectWithoutHost_championsInput
    connect?: Mst_templeWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type Mst_templeUpdateOneRequiredWithoutChampionsNestedInput = {
    create?: XOR<Mst_templeCreateWithoutChampionsInput, Mst_templeUncheckedCreateWithoutChampionsInput>
    connectOrCreate?: Mst_templeCreateOrConnectWithoutChampionsInput
    upsert?: Mst_templeUpsertWithoutChampionsInput
    connect?: Mst_templeWhereUniqueInput
    update?: XOR<XOR<Mst_templeUpdateToOneWithWhereWithoutChampionsInput, Mst_templeUpdateWithoutChampionsInput>, Mst_templeUncheckedUpdateWithoutChampionsInput>
  }

  export type Mst_templeUpdateOneRequiredWithoutHost_championsNestedInput = {
    create?: XOR<Mst_templeCreateWithoutHost_championsInput, Mst_templeUncheckedCreateWithoutHost_championsInput>
    connectOrCreate?: Mst_templeCreateOrConnectWithoutHost_championsInput
    upsert?: Mst_templeUpsertWithoutHost_championsInput
    connect?: Mst_templeWhereUniqueInput
    update?: XOR<XOR<Mst_templeUpdateToOneWithWhereWithoutHost_championsInput, Mst_templeUpdateWithoutHost_championsInput>, Mst_templeUncheckedUpdateWithoutHost_championsInput>
  }

  export type Mst_eventCreateNestedOneWithoutRegistrationsInput = {
    create?: XOR<Mst_eventCreateWithoutRegistrationsInput, Mst_eventUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: Mst_eventCreateOrConnectWithoutRegistrationsInput
    connect?: Mst_eventWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutRegistrationsInput = {
    create?: XOR<ProfileCreateWithoutRegistrationsInput, ProfileUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutRegistrationsInput
    connect?: ProfileWhereUniqueInput
  }

  export type Mst_event_resultCreateNestedOneWithoutInd_event_registrationsInput = {
    create?: XOR<Mst_event_resultCreateWithoutInd_event_registrationsInput, Mst_event_resultUncheckedCreateWithoutInd_event_registrationsInput>
    connectOrCreate?: Mst_event_resultCreateOrConnectWithoutInd_event_registrationsInput
    connect?: Mst_event_resultWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type EnumRegistrationStatusFieldUpdateOperationsInput = {
    set?: $Enums.RegistrationStatus
  }

  export type Mst_eventUpdateOneRequiredWithoutRegistrationsNestedInput = {
    create?: XOR<Mst_eventCreateWithoutRegistrationsInput, Mst_eventUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: Mst_eventCreateOrConnectWithoutRegistrationsInput
    upsert?: Mst_eventUpsertWithoutRegistrationsInput
    connect?: Mst_eventWhereUniqueInput
    update?: XOR<XOR<Mst_eventUpdateToOneWithWhereWithoutRegistrationsInput, Mst_eventUpdateWithoutRegistrationsInput>, Mst_eventUncheckedUpdateWithoutRegistrationsInput>
  }

  export type ProfileUpdateOneRequiredWithoutRegistrationsNestedInput = {
    create?: XOR<ProfileCreateWithoutRegistrationsInput, ProfileUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutRegistrationsInput
    upsert?: ProfileUpsertWithoutRegistrationsInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutRegistrationsInput, ProfileUpdateWithoutRegistrationsInput>, ProfileUncheckedUpdateWithoutRegistrationsInput>
  }

  export type Mst_event_resultUpdateOneWithoutInd_event_registrationsNestedInput = {
    create?: XOR<Mst_event_resultCreateWithoutInd_event_registrationsInput, Mst_event_resultUncheckedCreateWithoutInd_event_registrationsInput>
    connectOrCreate?: Mst_event_resultCreateOrConnectWithoutInd_event_registrationsInput
    upsert?: Mst_event_resultUpsertWithoutInd_event_registrationsInput
    disconnect?: Mst_event_resultWhereInput | boolean
    delete?: Mst_event_resultWhereInput | boolean
    connect?: Mst_event_resultWhereUniqueInput
    update?: XOR<XOR<Mst_event_resultUpdateToOneWithWhereWithoutInd_event_registrationsInput, Mst_event_resultUpdateWithoutInd_event_registrationsInput>, Mst_event_resultUncheckedUpdateWithoutInd_event_registrationsInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type Mst_eventCreateNestedManyWithoutAge_categoryInput = {
    create?: XOR<Mst_eventCreateWithoutAge_categoryInput, Mst_eventUncheckedCreateWithoutAge_categoryInput> | Mst_eventCreateWithoutAge_categoryInput[] | Mst_eventUncheckedCreateWithoutAge_categoryInput[]
    connectOrCreate?: Mst_eventCreateOrConnectWithoutAge_categoryInput | Mst_eventCreateOrConnectWithoutAge_categoryInput[]
    createMany?: Mst_eventCreateManyAge_categoryInputEnvelope
    connect?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
  }

  export type Mst_eventUncheckedCreateNestedManyWithoutAge_categoryInput = {
    create?: XOR<Mst_eventCreateWithoutAge_categoryInput, Mst_eventUncheckedCreateWithoutAge_categoryInput> | Mst_eventCreateWithoutAge_categoryInput[] | Mst_eventUncheckedCreateWithoutAge_categoryInput[]
    connectOrCreate?: Mst_eventCreateOrConnectWithoutAge_categoryInput | Mst_eventCreateOrConnectWithoutAge_categoryInput[]
    createMany?: Mst_eventCreateManyAge_categoryInputEnvelope
    connect?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type Mst_eventUpdateManyWithoutAge_categoryNestedInput = {
    create?: XOR<Mst_eventCreateWithoutAge_categoryInput, Mst_eventUncheckedCreateWithoutAge_categoryInput> | Mst_eventCreateWithoutAge_categoryInput[] | Mst_eventUncheckedCreateWithoutAge_categoryInput[]
    connectOrCreate?: Mst_eventCreateOrConnectWithoutAge_categoryInput | Mst_eventCreateOrConnectWithoutAge_categoryInput[]
    upsert?: Mst_eventUpsertWithWhereUniqueWithoutAge_categoryInput | Mst_eventUpsertWithWhereUniqueWithoutAge_categoryInput[]
    createMany?: Mst_eventCreateManyAge_categoryInputEnvelope
    set?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    disconnect?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    delete?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    connect?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    update?: Mst_eventUpdateWithWhereUniqueWithoutAge_categoryInput | Mst_eventUpdateWithWhereUniqueWithoutAge_categoryInput[]
    updateMany?: Mst_eventUpdateManyWithWhereWithoutAge_categoryInput | Mst_eventUpdateManyWithWhereWithoutAge_categoryInput[]
    deleteMany?: Mst_eventScalarWhereInput | Mst_eventScalarWhereInput[]
  }

  export type Mst_eventUncheckedUpdateManyWithoutAge_categoryNestedInput = {
    create?: XOR<Mst_eventCreateWithoutAge_categoryInput, Mst_eventUncheckedCreateWithoutAge_categoryInput> | Mst_eventCreateWithoutAge_categoryInput[] | Mst_eventUncheckedCreateWithoutAge_categoryInput[]
    connectOrCreate?: Mst_eventCreateOrConnectWithoutAge_categoryInput | Mst_eventCreateOrConnectWithoutAge_categoryInput[]
    upsert?: Mst_eventUpsertWithWhereUniqueWithoutAge_categoryInput | Mst_eventUpsertWithWhereUniqueWithoutAge_categoryInput[]
    createMany?: Mst_eventCreateManyAge_categoryInputEnvelope
    set?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    disconnect?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    delete?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    connect?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    update?: Mst_eventUpdateWithWhereUniqueWithoutAge_categoryInput | Mst_eventUpdateWithWhereUniqueWithoutAge_categoryInput[]
    updateMany?: Mst_eventUpdateManyWithWhereWithoutAge_categoryInput | Mst_eventUpdateManyWithWhereWithoutAge_categoryInput[]
    deleteMany?: Mst_eventScalarWhereInput | Mst_eventScalarWhereInput[]
  }

  export type Mst_event_typeCreateNestedOneWithoutEventsInput = {
    create?: XOR<Mst_event_typeCreateWithoutEventsInput, Mst_event_typeUncheckedCreateWithoutEventsInput>
    connectOrCreate?: Mst_event_typeCreateOrConnectWithoutEventsInput
    connect?: Mst_event_typeWhereUniqueInput
  }

  export type Mst_age_categoryCreateNestedOneWithoutEventsInput = {
    create?: XOR<Mst_age_categoryCreateWithoutEventsInput, Mst_age_categoryUncheckedCreateWithoutEventsInput>
    connectOrCreate?: Mst_age_categoryCreateOrConnectWithoutEventsInput
    connect?: Mst_age_categoryWhereUniqueInput
  }

  export type Ind_event_registrationCreateNestedManyWithoutEventInput = {
    create?: XOR<Ind_event_registrationCreateWithoutEventInput, Ind_event_registrationUncheckedCreateWithoutEventInput> | Ind_event_registrationCreateWithoutEventInput[] | Ind_event_registrationUncheckedCreateWithoutEventInput[]
    connectOrCreate?: Ind_event_registrationCreateOrConnectWithoutEventInput | Ind_event_registrationCreateOrConnectWithoutEventInput[]
    createMany?: Ind_event_registrationCreateManyEventInputEnvelope
    connect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
  }

  export type Team_event_registrationCreateNestedManyWithoutEventInput = {
    create?: XOR<Team_event_registrationCreateWithoutEventInput, Team_event_registrationUncheckedCreateWithoutEventInput> | Team_event_registrationCreateWithoutEventInput[] | Team_event_registrationUncheckedCreateWithoutEventInput[]
    connectOrCreate?: Team_event_registrationCreateOrConnectWithoutEventInput | Team_event_registrationCreateOrConnectWithoutEventInput[]
    createMany?: Team_event_registrationCreateManyEventInputEnvelope
    connect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
  }

  export type event_scheduleCreateNestedManyWithoutEventInput = {
    create?: XOR<event_scheduleCreateWithoutEventInput, event_scheduleUncheckedCreateWithoutEventInput> | event_scheduleCreateWithoutEventInput[] | event_scheduleUncheckedCreateWithoutEventInput[]
    connectOrCreate?: event_scheduleCreateOrConnectWithoutEventInput | event_scheduleCreateOrConnectWithoutEventInput[]
    createMany?: event_scheduleCreateManyEventInputEnvelope
    connect?: event_scheduleWhereUniqueInput | event_scheduleWhereUniqueInput[]
  }

  export type Ind_event_registrationUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<Ind_event_registrationCreateWithoutEventInput, Ind_event_registrationUncheckedCreateWithoutEventInput> | Ind_event_registrationCreateWithoutEventInput[] | Ind_event_registrationUncheckedCreateWithoutEventInput[]
    connectOrCreate?: Ind_event_registrationCreateOrConnectWithoutEventInput | Ind_event_registrationCreateOrConnectWithoutEventInput[]
    createMany?: Ind_event_registrationCreateManyEventInputEnvelope
    connect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
  }

  export type Team_event_registrationUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<Team_event_registrationCreateWithoutEventInput, Team_event_registrationUncheckedCreateWithoutEventInput> | Team_event_registrationCreateWithoutEventInput[] | Team_event_registrationUncheckedCreateWithoutEventInput[]
    connectOrCreate?: Team_event_registrationCreateOrConnectWithoutEventInput | Team_event_registrationCreateOrConnectWithoutEventInput[]
    createMany?: Team_event_registrationCreateManyEventInputEnvelope
    connect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
  }

  export type event_scheduleUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<event_scheduleCreateWithoutEventInput, event_scheduleUncheckedCreateWithoutEventInput> | event_scheduleCreateWithoutEventInput[] | event_scheduleUncheckedCreateWithoutEventInput[]
    connectOrCreate?: event_scheduleCreateOrConnectWithoutEventInput | event_scheduleCreateOrConnectWithoutEventInput[]
    createMany?: event_scheduleCreateManyEventInputEnvelope
    connect?: event_scheduleWhereUniqueInput | event_scheduleWhereUniqueInput[]
  }

  export type EnumGenderFieldUpdateOperationsInput = {
    set?: $Enums.Gender
  }

  export type Mst_event_typeUpdateOneRequiredWithoutEventsNestedInput = {
    create?: XOR<Mst_event_typeCreateWithoutEventsInput, Mst_event_typeUncheckedCreateWithoutEventsInput>
    connectOrCreate?: Mst_event_typeCreateOrConnectWithoutEventsInput
    upsert?: Mst_event_typeUpsertWithoutEventsInput
    connect?: Mst_event_typeWhereUniqueInput
    update?: XOR<XOR<Mst_event_typeUpdateToOneWithWhereWithoutEventsInput, Mst_event_typeUpdateWithoutEventsInput>, Mst_event_typeUncheckedUpdateWithoutEventsInput>
  }

  export type Mst_age_categoryUpdateOneRequiredWithoutEventsNestedInput = {
    create?: XOR<Mst_age_categoryCreateWithoutEventsInput, Mst_age_categoryUncheckedCreateWithoutEventsInput>
    connectOrCreate?: Mst_age_categoryCreateOrConnectWithoutEventsInput
    upsert?: Mst_age_categoryUpsertWithoutEventsInput
    connect?: Mst_age_categoryWhereUniqueInput
    update?: XOR<XOR<Mst_age_categoryUpdateToOneWithWhereWithoutEventsInput, Mst_age_categoryUpdateWithoutEventsInput>, Mst_age_categoryUncheckedUpdateWithoutEventsInput>
  }

  export type Ind_event_registrationUpdateManyWithoutEventNestedInput = {
    create?: XOR<Ind_event_registrationCreateWithoutEventInput, Ind_event_registrationUncheckedCreateWithoutEventInput> | Ind_event_registrationCreateWithoutEventInput[] | Ind_event_registrationUncheckedCreateWithoutEventInput[]
    connectOrCreate?: Ind_event_registrationCreateOrConnectWithoutEventInput | Ind_event_registrationCreateOrConnectWithoutEventInput[]
    upsert?: Ind_event_registrationUpsertWithWhereUniqueWithoutEventInput | Ind_event_registrationUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: Ind_event_registrationCreateManyEventInputEnvelope
    set?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    disconnect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    delete?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    connect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    update?: Ind_event_registrationUpdateWithWhereUniqueWithoutEventInput | Ind_event_registrationUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: Ind_event_registrationUpdateManyWithWhereWithoutEventInput | Ind_event_registrationUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: Ind_event_registrationScalarWhereInput | Ind_event_registrationScalarWhereInput[]
  }

  export type Team_event_registrationUpdateManyWithoutEventNestedInput = {
    create?: XOR<Team_event_registrationCreateWithoutEventInput, Team_event_registrationUncheckedCreateWithoutEventInput> | Team_event_registrationCreateWithoutEventInput[] | Team_event_registrationUncheckedCreateWithoutEventInput[]
    connectOrCreate?: Team_event_registrationCreateOrConnectWithoutEventInput | Team_event_registrationCreateOrConnectWithoutEventInput[]
    upsert?: Team_event_registrationUpsertWithWhereUniqueWithoutEventInput | Team_event_registrationUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: Team_event_registrationCreateManyEventInputEnvelope
    set?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    disconnect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    delete?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    connect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    update?: Team_event_registrationUpdateWithWhereUniqueWithoutEventInput | Team_event_registrationUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: Team_event_registrationUpdateManyWithWhereWithoutEventInput | Team_event_registrationUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: Team_event_registrationScalarWhereInput | Team_event_registrationScalarWhereInput[]
  }

  export type event_scheduleUpdateManyWithoutEventNestedInput = {
    create?: XOR<event_scheduleCreateWithoutEventInput, event_scheduleUncheckedCreateWithoutEventInput> | event_scheduleCreateWithoutEventInput[] | event_scheduleUncheckedCreateWithoutEventInput[]
    connectOrCreate?: event_scheduleCreateOrConnectWithoutEventInput | event_scheduleCreateOrConnectWithoutEventInput[]
    upsert?: event_scheduleUpsertWithWhereUniqueWithoutEventInput | event_scheduleUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: event_scheduleCreateManyEventInputEnvelope
    set?: event_scheduleWhereUniqueInput | event_scheduleWhereUniqueInput[]
    disconnect?: event_scheduleWhereUniqueInput | event_scheduleWhereUniqueInput[]
    delete?: event_scheduleWhereUniqueInput | event_scheduleWhereUniqueInput[]
    connect?: event_scheduleWhereUniqueInput | event_scheduleWhereUniqueInput[]
    update?: event_scheduleUpdateWithWhereUniqueWithoutEventInput | event_scheduleUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: event_scheduleUpdateManyWithWhereWithoutEventInput | event_scheduleUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: event_scheduleScalarWhereInput | event_scheduleScalarWhereInput[]
  }

  export type Ind_event_registrationUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<Ind_event_registrationCreateWithoutEventInput, Ind_event_registrationUncheckedCreateWithoutEventInput> | Ind_event_registrationCreateWithoutEventInput[] | Ind_event_registrationUncheckedCreateWithoutEventInput[]
    connectOrCreate?: Ind_event_registrationCreateOrConnectWithoutEventInput | Ind_event_registrationCreateOrConnectWithoutEventInput[]
    upsert?: Ind_event_registrationUpsertWithWhereUniqueWithoutEventInput | Ind_event_registrationUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: Ind_event_registrationCreateManyEventInputEnvelope
    set?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    disconnect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    delete?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    connect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    update?: Ind_event_registrationUpdateWithWhereUniqueWithoutEventInput | Ind_event_registrationUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: Ind_event_registrationUpdateManyWithWhereWithoutEventInput | Ind_event_registrationUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: Ind_event_registrationScalarWhereInput | Ind_event_registrationScalarWhereInput[]
  }

  export type Team_event_registrationUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<Team_event_registrationCreateWithoutEventInput, Team_event_registrationUncheckedCreateWithoutEventInput> | Team_event_registrationCreateWithoutEventInput[] | Team_event_registrationUncheckedCreateWithoutEventInput[]
    connectOrCreate?: Team_event_registrationCreateOrConnectWithoutEventInput | Team_event_registrationCreateOrConnectWithoutEventInput[]
    upsert?: Team_event_registrationUpsertWithWhereUniqueWithoutEventInput | Team_event_registrationUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: Team_event_registrationCreateManyEventInputEnvelope
    set?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    disconnect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    delete?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    connect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    update?: Team_event_registrationUpdateWithWhereUniqueWithoutEventInput | Team_event_registrationUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: Team_event_registrationUpdateManyWithWhereWithoutEventInput | Team_event_registrationUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: Team_event_registrationScalarWhereInput | Team_event_registrationScalarWhereInput[]
  }

  export type event_scheduleUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<event_scheduleCreateWithoutEventInput, event_scheduleUncheckedCreateWithoutEventInput> | event_scheduleCreateWithoutEventInput[] | event_scheduleUncheckedCreateWithoutEventInput[]
    connectOrCreate?: event_scheduleCreateOrConnectWithoutEventInput | event_scheduleCreateOrConnectWithoutEventInput[]
    upsert?: event_scheduleUpsertWithWhereUniqueWithoutEventInput | event_scheduleUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: event_scheduleCreateManyEventInputEnvelope
    set?: event_scheduleWhereUniqueInput | event_scheduleWhereUniqueInput[]
    disconnect?: event_scheduleWhereUniqueInput | event_scheduleWhereUniqueInput[]
    delete?: event_scheduleWhereUniqueInput | event_scheduleWhereUniqueInput[]
    connect?: event_scheduleWhereUniqueInput | event_scheduleWhereUniqueInput[]
    update?: event_scheduleUpdateWithWhereUniqueWithoutEventInput | event_scheduleUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: event_scheduleUpdateManyWithWhereWithoutEventInput | event_scheduleUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: event_scheduleScalarWhereInput | event_scheduleScalarWhereInput[]
  }

  export type Mst_event_typeCreateNestedOneWithoutResultsInput = {
    create?: XOR<Mst_event_typeCreateWithoutResultsInput, Mst_event_typeUncheckedCreateWithoutResultsInput>
    connectOrCreate?: Mst_event_typeCreateOrConnectWithoutResultsInput
    connect?: Mst_event_typeWhereUniqueInput
  }

  export type Ind_event_registrationCreateNestedManyWithoutEvent_resultInput = {
    create?: XOR<Ind_event_registrationCreateWithoutEvent_resultInput, Ind_event_registrationUncheckedCreateWithoutEvent_resultInput> | Ind_event_registrationCreateWithoutEvent_resultInput[] | Ind_event_registrationUncheckedCreateWithoutEvent_resultInput[]
    connectOrCreate?: Ind_event_registrationCreateOrConnectWithoutEvent_resultInput | Ind_event_registrationCreateOrConnectWithoutEvent_resultInput[]
    createMany?: Ind_event_registrationCreateManyEvent_resultInputEnvelope
    connect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
  }

  export type Team_event_registrationCreateNestedManyWithoutEvent_resultInput = {
    create?: XOR<Team_event_registrationCreateWithoutEvent_resultInput, Team_event_registrationUncheckedCreateWithoutEvent_resultInput> | Team_event_registrationCreateWithoutEvent_resultInput[] | Team_event_registrationUncheckedCreateWithoutEvent_resultInput[]
    connectOrCreate?: Team_event_registrationCreateOrConnectWithoutEvent_resultInput | Team_event_registrationCreateOrConnectWithoutEvent_resultInput[]
    createMany?: Team_event_registrationCreateManyEvent_resultInputEnvelope
    connect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
  }

  export type Ind_event_registrationUncheckedCreateNestedManyWithoutEvent_resultInput = {
    create?: XOR<Ind_event_registrationCreateWithoutEvent_resultInput, Ind_event_registrationUncheckedCreateWithoutEvent_resultInput> | Ind_event_registrationCreateWithoutEvent_resultInput[] | Ind_event_registrationUncheckedCreateWithoutEvent_resultInput[]
    connectOrCreate?: Ind_event_registrationCreateOrConnectWithoutEvent_resultInput | Ind_event_registrationCreateOrConnectWithoutEvent_resultInput[]
    createMany?: Ind_event_registrationCreateManyEvent_resultInputEnvelope
    connect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
  }

  export type Team_event_registrationUncheckedCreateNestedManyWithoutEvent_resultInput = {
    create?: XOR<Team_event_registrationCreateWithoutEvent_resultInput, Team_event_registrationUncheckedCreateWithoutEvent_resultInput> | Team_event_registrationCreateWithoutEvent_resultInput[] | Team_event_registrationUncheckedCreateWithoutEvent_resultInput[]
    connectOrCreate?: Team_event_registrationCreateOrConnectWithoutEvent_resultInput | Team_event_registrationCreateOrConnectWithoutEvent_resultInput[]
    createMany?: Team_event_registrationCreateManyEvent_resultInputEnvelope
    connect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
  }

  export type EnumRankFieldUpdateOperationsInput = {
    set?: $Enums.Rank
  }

  export type Mst_event_typeUpdateOneRequiredWithoutResultsNestedInput = {
    create?: XOR<Mst_event_typeCreateWithoutResultsInput, Mst_event_typeUncheckedCreateWithoutResultsInput>
    connectOrCreate?: Mst_event_typeCreateOrConnectWithoutResultsInput
    upsert?: Mst_event_typeUpsertWithoutResultsInput
    connect?: Mst_event_typeWhereUniqueInput
    update?: XOR<XOR<Mst_event_typeUpdateToOneWithWhereWithoutResultsInput, Mst_event_typeUpdateWithoutResultsInput>, Mst_event_typeUncheckedUpdateWithoutResultsInput>
  }

  export type Ind_event_registrationUpdateManyWithoutEvent_resultNestedInput = {
    create?: XOR<Ind_event_registrationCreateWithoutEvent_resultInput, Ind_event_registrationUncheckedCreateWithoutEvent_resultInput> | Ind_event_registrationCreateWithoutEvent_resultInput[] | Ind_event_registrationUncheckedCreateWithoutEvent_resultInput[]
    connectOrCreate?: Ind_event_registrationCreateOrConnectWithoutEvent_resultInput | Ind_event_registrationCreateOrConnectWithoutEvent_resultInput[]
    upsert?: Ind_event_registrationUpsertWithWhereUniqueWithoutEvent_resultInput | Ind_event_registrationUpsertWithWhereUniqueWithoutEvent_resultInput[]
    createMany?: Ind_event_registrationCreateManyEvent_resultInputEnvelope
    set?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    disconnect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    delete?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    connect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    update?: Ind_event_registrationUpdateWithWhereUniqueWithoutEvent_resultInput | Ind_event_registrationUpdateWithWhereUniqueWithoutEvent_resultInput[]
    updateMany?: Ind_event_registrationUpdateManyWithWhereWithoutEvent_resultInput | Ind_event_registrationUpdateManyWithWhereWithoutEvent_resultInput[]
    deleteMany?: Ind_event_registrationScalarWhereInput | Ind_event_registrationScalarWhereInput[]
  }

  export type Team_event_registrationUpdateManyWithoutEvent_resultNestedInput = {
    create?: XOR<Team_event_registrationCreateWithoutEvent_resultInput, Team_event_registrationUncheckedCreateWithoutEvent_resultInput> | Team_event_registrationCreateWithoutEvent_resultInput[] | Team_event_registrationUncheckedCreateWithoutEvent_resultInput[]
    connectOrCreate?: Team_event_registrationCreateOrConnectWithoutEvent_resultInput | Team_event_registrationCreateOrConnectWithoutEvent_resultInput[]
    upsert?: Team_event_registrationUpsertWithWhereUniqueWithoutEvent_resultInput | Team_event_registrationUpsertWithWhereUniqueWithoutEvent_resultInput[]
    createMany?: Team_event_registrationCreateManyEvent_resultInputEnvelope
    set?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    disconnect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    delete?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    connect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    update?: Team_event_registrationUpdateWithWhereUniqueWithoutEvent_resultInput | Team_event_registrationUpdateWithWhereUniqueWithoutEvent_resultInput[]
    updateMany?: Team_event_registrationUpdateManyWithWhereWithoutEvent_resultInput | Team_event_registrationUpdateManyWithWhereWithoutEvent_resultInput[]
    deleteMany?: Team_event_registrationScalarWhereInput | Team_event_registrationScalarWhereInput[]
  }

  export type Ind_event_registrationUncheckedUpdateManyWithoutEvent_resultNestedInput = {
    create?: XOR<Ind_event_registrationCreateWithoutEvent_resultInput, Ind_event_registrationUncheckedCreateWithoutEvent_resultInput> | Ind_event_registrationCreateWithoutEvent_resultInput[] | Ind_event_registrationUncheckedCreateWithoutEvent_resultInput[]
    connectOrCreate?: Ind_event_registrationCreateOrConnectWithoutEvent_resultInput | Ind_event_registrationCreateOrConnectWithoutEvent_resultInput[]
    upsert?: Ind_event_registrationUpsertWithWhereUniqueWithoutEvent_resultInput | Ind_event_registrationUpsertWithWhereUniqueWithoutEvent_resultInput[]
    createMany?: Ind_event_registrationCreateManyEvent_resultInputEnvelope
    set?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    disconnect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    delete?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    connect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    update?: Ind_event_registrationUpdateWithWhereUniqueWithoutEvent_resultInput | Ind_event_registrationUpdateWithWhereUniqueWithoutEvent_resultInput[]
    updateMany?: Ind_event_registrationUpdateManyWithWhereWithoutEvent_resultInput | Ind_event_registrationUpdateManyWithWhereWithoutEvent_resultInput[]
    deleteMany?: Ind_event_registrationScalarWhereInput | Ind_event_registrationScalarWhereInput[]
  }

  export type Team_event_registrationUncheckedUpdateManyWithoutEvent_resultNestedInput = {
    create?: XOR<Team_event_registrationCreateWithoutEvent_resultInput, Team_event_registrationUncheckedCreateWithoutEvent_resultInput> | Team_event_registrationCreateWithoutEvent_resultInput[] | Team_event_registrationUncheckedCreateWithoutEvent_resultInput[]
    connectOrCreate?: Team_event_registrationCreateOrConnectWithoutEvent_resultInput | Team_event_registrationCreateOrConnectWithoutEvent_resultInput[]
    upsert?: Team_event_registrationUpsertWithWhereUniqueWithoutEvent_resultInput | Team_event_registrationUpsertWithWhereUniqueWithoutEvent_resultInput[]
    createMany?: Team_event_registrationCreateManyEvent_resultInputEnvelope
    set?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    disconnect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    delete?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    connect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    update?: Team_event_registrationUpdateWithWhereUniqueWithoutEvent_resultInput | Team_event_registrationUpdateWithWhereUniqueWithoutEvent_resultInput[]
    updateMany?: Team_event_registrationUpdateManyWithWhereWithoutEvent_resultInput | Team_event_registrationUpdateManyWithWhereWithoutEvent_resultInput[]
    deleteMany?: Team_event_registrationScalarWhereInput | Team_event_registrationScalarWhereInput[]
  }

  export type Mst_eventCreateNestedManyWithoutEvent_typeInput = {
    create?: XOR<Mst_eventCreateWithoutEvent_typeInput, Mst_eventUncheckedCreateWithoutEvent_typeInput> | Mst_eventCreateWithoutEvent_typeInput[] | Mst_eventUncheckedCreateWithoutEvent_typeInput[]
    connectOrCreate?: Mst_eventCreateOrConnectWithoutEvent_typeInput | Mst_eventCreateOrConnectWithoutEvent_typeInput[]
    createMany?: Mst_eventCreateManyEvent_typeInputEnvelope
    connect?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
  }

  export type Mst_event_resultCreateNestedManyWithoutEvent_typeInput = {
    create?: XOR<Mst_event_resultCreateWithoutEvent_typeInput, Mst_event_resultUncheckedCreateWithoutEvent_typeInput> | Mst_event_resultCreateWithoutEvent_typeInput[] | Mst_event_resultUncheckedCreateWithoutEvent_typeInput[]
    connectOrCreate?: Mst_event_resultCreateOrConnectWithoutEvent_typeInput | Mst_event_resultCreateOrConnectWithoutEvent_typeInput[]
    createMany?: Mst_event_resultCreateManyEvent_typeInputEnvelope
    connect?: Mst_event_resultWhereUniqueInput | Mst_event_resultWhereUniqueInput[]
  }

  export type Mst_eventUncheckedCreateNestedManyWithoutEvent_typeInput = {
    create?: XOR<Mst_eventCreateWithoutEvent_typeInput, Mst_eventUncheckedCreateWithoutEvent_typeInput> | Mst_eventCreateWithoutEvent_typeInput[] | Mst_eventUncheckedCreateWithoutEvent_typeInput[]
    connectOrCreate?: Mst_eventCreateOrConnectWithoutEvent_typeInput | Mst_eventCreateOrConnectWithoutEvent_typeInput[]
    createMany?: Mst_eventCreateManyEvent_typeInputEnvelope
    connect?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
  }

  export type Mst_event_resultUncheckedCreateNestedManyWithoutEvent_typeInput = {
    create?: XOR<Mst_event_resultCreateWithoutEvent_typeInput, Mst_event_resultUncheckedCreateWithoutEvent_typeInput> | Mst_event_resultCreateWithoutEvent_typeInput[] | Mst_event_resultUncheckedCreateWithoutEvent_typeInput[]
    connectOrCreate?: Mst_event_resultCreateOrConnectWithoutEvent_typeInput | Mst_event_resultCreateOrConnectWithoutEvent_typeInput[]
    createMany?: Mst_event_resultCreateManyEvent_typeInputEnvelope
    connect?: Mst_event_resultWhereUniqueInput | Mst_event_resultWhereUniqueInput[]
  }

  export type EnumEventTypeFieldUpdateOperationsInput = {
    set?: $Enums.EventType
  }

  export type Mst_eventUpdateManyWithoutEvent_typeNestedInput = {
    create?: XOR<Mst_eventCreateWithoutEvent_typeInput, Mst_eventUncheckedCreateWithoutEvent_typeInput> | Mst_eventCreateWithoutEvent_typeInput[] | Mst_eventUncheckedCreateWithoutEvent_typeInput[]
    connectOrCreate?: Mst_eventCreateOrConnectWithoutEvent_typeInput | Mst_eventCreateOrConnectWithoutEvent_typeInput[]
    upsert?: Mst_eventUpsertWithWhereUniqueWithoutEvent_typeInput | Mst_eventUpsertWithWhereUniqueWithoutEvent_typeInput[]
    createMany?: Mst_eventCreateManyEvent_typeInputEnvelope
    set?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    disconnect?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    delete?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    connect?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    update?: Mst_eventUpdateWithWhereUniqueWithoutEvent_typeInput | Mst_eventUpdateWithWhereUniqueWithoutEvent_typeInput[]
    updateMany?: Mst_eventUpdateManyWithWhereWithoutEvent_typeInput | Mst_eventUpdateManyWithWhereWithoutEvent_typeInput[]
    deleteMany?: Mst_eventScalarWhereInput | Mst_eventScalarWhereInput[]
  }

  export type Mst_event_resultUpdateManyWithoutEvent_typeNestedInput = {
    create?: XOR<Mst_event_resultCreateWithoutEvent_typeInput, Mst_event_resultUncheckedCreateWithoutEvent_typeInput> | Mst_event_resultCreateWithoutEvent_typeInput[] | Mst_event_resultUncheckedCreateWithoutEvent_typeInput[]
    connectOrCreate?: Mst_event_resultCreateOrConnectWithoutEvent_typeInput | Mst_event_resultCreateOrConnectWithoutEvent_typeInput[]
    upsert?: Mst_event_resultUpsertWithWhereUniqueWithoutEvent_typeInput | Mst_event_resultUpsertWithWhereUniqueWithoutEvent_typeInput[]
    createMany?: Mst_event_resultCreateManyEvent_typeInputEnvelope
    set?: Mst_event_resultWhereUniqueInput | Mst_event_resultWhereUniqueInput[]
    disconnect?: Mst_event_resultWhereUniqueInput | Mst_event_resultWhereUniqueInput[]
    delete?: Mst_event_resultWhereUniqueInput | Mst_event_resultWhereUniqueInput[]
    connect?: Mst_event_resultWhereUniqueInput | Mst_event_resultWhereUniqueInput[]
    update?: Mst_event_resultUpdateWithWhereUniqueWithoutEvent_typeInput | Mst_event_resultUpdateWithWhereUniqueWithoutEvent_typeInput[]
    updateMany?: Mst_event_resultUpdateManyWithWhereWithoutEvent_typeInput | Mst_event_resultUpdateManyWithWhereWithoutEvent_typeInput[]
    deleteMany?: Mst_event_resultScalarWhereInput | Mst_event_resultScalarWhereInput[]
  }

  export type Mst_eventUncheckedUpdateManyWithoutEvent_typeNestedInput = {
    create?: XOR<Mst_eventCreateWithoutEvent_typeInput, Mst_eventUncheckedCreateWithoutEvent_typeInput> | Mst_eventCreateWithoutEvent_typeInput[] | Mst_eventUncheckedCreateWithoutEvent_typeInput[]
    connectOrCreate?: Mst_eventCreateOrConnectWithoutEvent_typeInput | Mst_eventCreateOrConnectWithoutEvent_typeInput[]
    upsert?: Mst_eventUpsertWithWhereUniqueWithoutEvent_typeInput | Mst_eventUpsertWithWhereUniqueWithoutEvent_typeInput[]
    createMany?: Mst_eventCreateManyEvent_typeInputEnvelope
    set?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    disconnect?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    delete?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    connect?: Mst_eventWhereUniqueInput | Mst_eventWhereUniqueInput[]
    update?: Mst_eventUpdateWithWhereUniqueWithoutEvent_typeInput | Mst_eventUpdateWithWhereUniqueWithoutEvent_typeInput[]
    updateMany?: Mst_eventUpdateManyWithWhereWithoutEvent_typeInput | Mst_eventUpdateManyWithWhereWithoutEvent_typeInput[]
    deleteMany?: Mst_eventScalarWhereInput | Mst_eventScalarWhereInput[]
  }

  export type Mst_event_resultUncheckedUpdateManyWithoutEvent_typeNestedInput = {
    create?: XOR<Mst_event_resultCreateWithoutEvent_typeInput, Mst_event_resultUncheckedCreateWithoutEvent_typeInput> | Mst_event_resultCreateWithoutEvent_typeInput[] | Mst_event_resultUncheckedCreateWithoutEvent_typeInput[]
    connectOrCreate?: Mst_event_resultCreateOrConnectWithoutEvent_typeInput | Mst_event_resultCreateOrConnectWithoutEvent_typeInput[]
    upsert?: Mst_event_resultUpsertWithWhereUniqueWithoutEvent_typeInput | Mst_event_resultUpsertWithWhereUniqueWithoutEvent_typeInput[]
    createMany?: Mst_event_resultCreateManyEvent_typeInputEnvelope
    set?: Mst_event_resultWhereUniqueInput | Mst_event_resultWhereUniqueInput[]
    disconnect?: Mst_event_resultWhereUniqueInput | Mst_event_resultWhereUniqueInput[]
    delete?: Mst_event_resultWhereUniqueInput | Mst_event_resultWhereUniqueInput[]
    connect?: Mst_event_resultWhereUniqueInput | Mst_event_resultWhereUniqueInput[]
    update?: Mst_event_resultUpdateWithWhereUniqueWithoutEvent_typeInput | Mst_event_resultUpdateWithWhereUniqueWithoutEvent_typeInput[]
    updateMany?: Mst_event_resultUpdateManyWithWhereWithoutEvent_typeInput | Mst_event_resultUpdateManyWithWhereWithoutEvent_typeInput[]
    deleteMany?: Mst_event_resultScalarWhereInput | Mst_event_resultScalarWhereInput[]
  }

  export type ProfileCreateNestedManyWithoutRoleInput = {
    create?: XOR<ProfileCreateWithoutRoleInput, ProfileUncheckedCreateWithoutRoleInput> | ProfileCreateWithoutRoleInput[] | ProfileUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutRoleInput | ProfileCreateOrConnectWithoutRoleInput[]
    createMany?: ProfileCreateManyRoleInputEnvelope
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
  }

  export type User_roleCreateNestedManyWithoutRoleInput = {
    create?: XOR<User_roleCreateWithoutRoleInput, User_roleUncheckedCreateWithoutRoleInput> | User_roleCreateWithoutRoleInput[] | User_roleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: User_roleCreateOrConnectWithoutRoleInput | User_roleCreateOrConnectWithoutRoleInput[]
    createMany?: User_roleCreateManyRoleInputEnvelope
    connect?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
  }

  export type ProfileUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<ProfileCreateWithoutRoleInput, ProfileUncheckedCreateWithoutRoleInput> | ProfileCreateWithoutRoleInput[] | ProfileUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutRoleInput | ProfileCreateOrConnectWithoutRoleInput[]
    createMany?: ProfileCreateManyRoleInputEnvelope
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
  }

  export type User_roleUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<User_roleCreateWithoutRoleInput, User_roleUncheckedCreateWithoutRoleInput> | User_roleCreateWithoutRoleInput[] | User_roleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: User_roleCreateOrConnectWithoutRoleInput | User_roleCreateOrConnectWithoutRoleInput[]
    createMany?: User_roleCreateManyRoleInputEnvelope
    connect?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
  }

  export type ProfileUpdateManyWithoutRoleNestedInput = {
    create?: XOR<ProfileCreateWithoutRoleInput, ProfileUncheckedCreateWithoutRoleInput> | ProfileCreateWithoutRoleInput[] | ProfileUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutRoleInput | ProfileCreateOrConnectWithoutRoleInput[]
    upsert?: ProfileUpsertWithWhereUniqueWithoutRoleInput | ProfileUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: ProfileCreateManyRoleInputEnvelope
    set?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    disconnect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    delete?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    update?: ProfileUpdateWithWhereUniqueWithoutRoleInput | ProfileUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: ProfileUpdateManyWithWhereWithoutRoleInput | ProfileUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
  }

  export type User_roleUpdateManyWithoutRoleNestedInput = {
    create?: XOR<User_roleCreateWithoutRoleInput, User_roleUncheckedCreateWithoutRoleInput> | User_roleCreateWithoutRoleInput[] | User_roleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: User_roleCreateOrConnectWithoutRoleInput | User_roleCreateOrConnectWithoutRoleInput[]
    upsert?: User_roleUpsertWithWhereUniqueWithoutRoleInput | User_roleUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: User_roleCreateManyRoleInputEnvelope
    set?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    disconnect?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    delete?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    connect?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    update?: User_roleUpdateWithWhereUniqueWithoutRoleInput | User_roleUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: User_roleUpdateManyWithWhereWithoutRoleInput | User_roleUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: User_roleScalarWhereInput | User_roleScalarWhereInput[]
  }

  export type ProfileUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<ProfileCreateWithoutRoleInput, ProfileUncheckedCreateWithoutRoleInput> | ProfileCreateWithoutRoleInput[] | ProfileUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutRoleInput | ProfileCreateOrConnectWithoutRoleInput[]
    upsert?: ProfileUpsertWithWhereUniqueWithoutRoleInput | ProfileUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: ProfileCreateManyRoleInputEnvelope
    set?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    disconnect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    delete?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    update?: ProfileUpdateWithWhereUniqueWithoutRoleInput | ProfileUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: ProfileUpdateManyWithWhereWithoutRoleInput | ProfileUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
  }

  export type User_roleUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<User_roleCreateWithoutRoleInput, User_roleUncheckedCreateWithoutRoleInput> | User_roleCreateWithoutRoleInput[] | User_roleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: User_roleCreateOrConnectWithoutRoleInput | User_roleCreateOrConnectWithoutRoleInput[]
    upsert?: User_roleUpsertWithWhereUniqueWithoutRoleInput | User_roleUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: User_roleCreateManyRoleInputEnvelope
    set?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    disconnect?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    delete?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    connect?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    update?: User_roleUpdateWithWhereUniqueWithoutRoleInput | User_roleUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: User_roleUpdateManyWithWhereWithoutRoleInput | User_roleUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: User_roleScalarWhereInput | User_roleScalarWhereInput[]
  }

  export type ChampionCreateNestedManyWithoutTempleInput = {
    create?: XOR<ChampionCreateWithoutTempleInput, ChampionUncheckedCreateWithoutTempleInput> | ChampionCreateWithoutTempleInput[] | ChampionUncheckedCreateWithoutTempleInput[]
    connectOrCreate?: ChampionCreateOrConnectWithoutTempleInput | ChampionCreateOrConnectWithoutTempleInput[]
    createMany?: ChampionCreateManyTempleInputEnvelope
    connect?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
  }

  export type ChampionCreateNestedManyWithoutHost_templeInput = {
    create?: XOR<ChampionCreateWithoutHost_templeInput, ChampionUncheckedCreateWithoutHost_templeInput> | ChampionCreateWithoutHost_templeInput[] | ChampionUncheckedCreateWithoutHost_templeInput[]
    connectOrCreate?: ChampionCreateOrConnectWithoutHost_templeInput | ChampionCreateOrConnectWithoutHost_templeInput[]
    createMany?: ChampionCreateManyHost_templeInputEnvelope
    connect?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
  }

  export type ProfileCreateNestedManyWithoutTempleInput = {
    create?: XOR<ProfileCreateWithoutTempleInput, ProfileUncheckedCreateWithoutTempleInput> | ProfileCreateWithoutTempleInput[] | ProfileUncheckedCreateWithoutTempleInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutTempleInput | ProfileCreateOrConnectWithoutTempleInput[]
    createMany?: ProfileCreateManyTempleInputEnvelope
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
  }

  export type Team_event_registrationCreateNestedManyWithoutTempleInput = {
    create?: XOR<Team_event_registrationCreateWithoutTempleInput, Team_event_registrationUncheckedCreateWithoutTempleInput> | Team_event_registrationCreateWithoutTempleInput[] | Team_event_registrationUncheckedCreateWithoutTempleInput[]
    connectOrCreate?: Team_event_registrationCreateOrConnectWithoutTempleInput | Team_event_registrationCreateOrConnectWithoutTempleInput[]
    createMany?: Team_event_registrationCreateManyTempleInputEnvelope
    connect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
  }

  export type ChampionUncheckedCreateNestedManyWithoutTempleInput = {
    create?: XOR<ChampionCreateWithoutTempleInput, ChampionUncheckedCreateWithoutTempleInput> | ChampionCreateWithoutTempleInput[] | ChampionUncheckedCreateWithoutTempleInput[]
    connectOrCreate?: ChampionCreateOrConnectWithoutTempleInput | ChampionCreateOrConnectWithoutTempleInput[]
    createMany?: ChampionCreateManyTempleInputEnvelope
    connect?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
  }

  export type ChampionUncheckedCreateNestedManyWithoutHost_templeInput = {
    create?: XOR<ChampionCreateWithoutHost_templeInput, ChampionUncheckedCreateWithoutHost_templeInput> | ChampionCreateWithoutHost_templeInput[] | ChampionUncheckedCreateWithoutHost_templeInput[]
    connectOrCreate?: ChampionCreateOrConnectWithoutHost_templeInput | ChampionCreateOrConnectWithoutHost_templeInput[]
    createMany?: ChampionCreateManyHost_templeInputEnvelope
    connect?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
  }

  export type ProfileUncheckedCreateNestedManyWithoutTempleInput = {
    create?: XOR<ProfileCreateWithoutTempleInput, ProfileUncheckedCreateWithoutTempleInput> | ProfileCreateWithoutTempleInput[] | ProfileUncheckedCreateWithoutTempleInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutTempleInput | ProfileCreateOrConnectWithoutTempleInput[]
    createMany?: ProfileCreateManyTempleInputEnvelope
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
  }

  export type Team_event_registrationUncheckedCreateNestedManyWithoutTempleInput = {
    create?: XOR<Team_event_registrationCreateWithoutTempleInput, Team_event_registrationUncheckedCreateWithoutTempleInput> | Team_event_registrationCreateWithoutTempleInput[] | Team_event_registrationUncheckedCreateWithoutTempleInput[]
    connectOrCreate?: Team_event_registrationCreateOrConnectWithoutTempleInput | Team_event_registrationCreateOrConnectWithoutTempleInput[]
    createMany?: Team_event_registrationCreateManyTempleInputEnvelope
    connect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type ChampionUpdateManyWithoutTempleNestedInput = {
    create?: XOR<ChampionCreateWithoutTempleInput, ChampionUncheckedCreateWithoutTempleInput> | ChampionCreateWithoutTempleInput[] | ChampionUncheckedCreateWithoutTempleInput[]
    connectOrCreate?: ChampionCreateOrConnectWithoutTempleInput | ChampionCreateOrConnectWithoutTempleInput[]
    upsert?: ChampionUpsertWithWhereUniqueWithoutTempleInput | ChampionUpsertWithWhereUniqueWithoutTempleInput[]
    createMany?: ChampionCreateManyTempleInputEnvelope
    set?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    disconnect?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    delete?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    connect?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    update?: ChampionUpdateWithWhereUniqueWithoutTempleInput | ChampionUpdateWithWhereUniqueWithoutTempleInput[]
    updateMany?: ChampionUpdateManyWithWhereWithoutTempleInput | ChampionUpdateManyWithWhereWithoutTempleInput[]
    deleteMany?: ChampionScalarWhereInput | ChampionScalarWhereInput[]
  }

  export type ChampionUpdateManyWithoutHost_templeNestedInput = {
    create?: XOR<ChampionCreateWithoutHost_templeInput, ChampionUncheckedCreateWithoutHost_templeInput> | ChampionCreateWithoutHost_templeInput[] | ChampionUncheckedCreateWithoutHost_templeInput[]
    connectOrCreate?: ChampionCreateOrConnectWithoutHost_templeInput | ChampionCreateOrConnectWithoutHost_templeInput[]
    upsert?: ChampionUpsertWithWhereUniqueWithoutHost_templeInput | ChampionUpsertWithWhereUniqueWithoutHost_templeInput[]
    createMany?: ChampionCreateManyHost_templeInputEnvelope
    set?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    disconnect?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    delete?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    connect?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    update?: ChampionUpdateWithWhereUniqueWithoutHost_templeInput | ChampionUpdateWithWhereUniqueWithoutHost_templeInput[]
    updateMany?: ChampionUpdateManyWithWhereWithoutHost_templeInput | ChampionUpdateManyWithWhereWithoutHost_templeInput[]
    deleteMany?: ChampionScalarWhereInput | ChampionScalarWhereInput[]
  }

  export type ProfileUpdateManyWithoutTempleNestedInput = {
    create?: XOR<ProfileCreateWithoutTempleInput, ProfileUncheckedCreateWithoutTempleInput> | ProfileCreateWithoutTempleInput[] | ProfileUncheckedCreateWithoutTempleInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutTempleInput | ProfileCreateOrConnectWithoutTempleInput[]
    upsert?: ProfileUpsertWithWhereUniqueWithoutTempleInput | ProfileUpsertWithWhereUniqueWithoutTempleInput[]
    createMany?: ProfileCreateManyTempleInputEnvelope
    set?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    disconnect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    delete?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    update?: ProfileUpdateWithWhereUniqueWithoutTempleInput | ProfileUpdateWithWhereUniqueWithoutTempleInput[]
    updateMany?: ProfileUpdateManyWithWhereWithoutTempleInput | ProfileUpdateManyWithWhereWithoutTempleInput[]
    deleteMany?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
  }

  export type Team_event_registrationUpdateManyWithoutTempleNestedInput = {
    create?: XOR<Team_event_registrationCreateWithoutTempleInput, Team_event_registrationUncheckedCreateWithoutTempleInput> | Team_event_registrationCreateWithoutTempleInput[] | Team_event_registrationUncheckedCreateWithoutTempleInput[]
    connectOrCreate?: Team_event_registrationCreateOrConnectWithoutTempleInput | Team_event_registrationCreateOrConnectWithoutTempleInput[]
    upsert?: Team_event_registrationUpsertWithWhereUniqueWithoutTempleInput | Team_event_registrationUpsertWithWhereUniqueWithoutTempleInput[]
    createMany?: Team_event_registrationCreateManyTempleInputEnvelope
    set?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    disconnect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    delete?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    connect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    update?: Team_event_registrationUpdateWithWhereUniqueWithoutTempleInput | Team_event_registrationUpdateWithWhereUniqueWithoutTempleInput[]
    updateMany?: Team_event_registrationUpdateManyWithWhereWithoutTempleInput | Team_event_registrationUpdateManyWithWhereWithoutTempleInput[]
    deleteMany?: Team_event_registrationScalarWhereInput | Team_event_registrationScalarWhereInput[]
  }

  export type ChampionUncheckedUpdateManyWithoutTempleNestedInput = {
    create?: XOR<ChampionCreateWithoutTempleInput, ChampionUncheckedCreateWithoutTempleInput> | ChampionCreateWithoutTempleInput[] | ChampionUncheckedCreateWithoutTempleInput[]
    connectOrCreate?: ChampionCreateOrConnectWithoutTempleInput | ChampionCreateOrConnectWithoutTempleInput[]
    upsert?: ChampionUpsertWithWhereUniqueWithoutTempleInput | ChampionUpsertWithWhereUniqueWithoutTempleInput[]
    createMany?: ChampionCreateManyTempleInputEnvelope
    set?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    disconnect?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    delete?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    connect?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    update?: ChampionUpdateWithWhereUniqueWithoutTempleInput | ChampionUpdateWithWhereUniqueWithoutTempleInput[]
    updateMany?: ChampionUpdateManyWithWhereWithoutTempleInput | ChampionUpdateManyWithWhereWithoutTempleInput[]
    deleteMany?: ChampionScalarWhereInput | ChampionScalarWhereInput[]
  }

  export type ChampionUncheckedUpdateManyWithoutHost_templeNestedInput = {
    create?: XOR<ChampionCreateWithoutHost_templeInput, ChampionUncheckedCreateWithoutHost_templeInput> | ChampionCreateWithoutHost_templeInput[] | ChampionUncheckedCreateWithoutHost_templeInput[]
    connectOrCreate?: ChampionCreateOrConnectWithoutHost_templeInput | ChampionCreateOrConnectWithoutHost_templeInput[]
    upsert?: ChampionUpsertWithWhereUniqueWithoutHost_templeInput | ChampionUpsertWithWhereUniqueWithoutHost_templeInput[]
    createMany?: ChampionCreateManyHost_templeInputEnvelope
    set?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    disconnect?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    delete?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    connect?: ChampionWhereUniqueInput | ChampionWhereUniqueInput[]
    update?: ChampionUpdateWithWhereUniqueWithoutHost_templeInput | ChampionUpdateWithWhereUniqueWithoutHost_templeInput[]
    updateMany?: ChampionUpdateManyWithWhereWithoutHost_templeInput | ChampionUpdateManyWithWhereWithoutHost_templeInput[]
    deleteMany?: ChampionScalarWhereInput | ChampionScalarWhereInput[]
  }

  export type ProfileUncheckedUpdateManyWithoutTempleNestedInput = {
    create?: XOR<ProfileCreateWithoutTempleInput, ProfileUncheckedCreateWithoutTempleInput> | ProfileCreateWithoutTempleInput[] | ProfileUncheckedCreateWithoutTempleInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutTempleInput | ProfileCreateOrConnectWithoutTempleInput[]
    upsert?: ProfileUpsertWithWhereUniqueWithoutTempleInput | ProfileUpsertWithWhereUniqueWithoutTempleInput[]
    createMany?: ProfileCreateManyTempleInputEnvelope
    set?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    disconnect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    delete?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    update?: ProfileUpdateWithWhereUniqueWithoutTempleInput | ProfileUpdateWithWhereUniqueWithoutTempleInput[]
    updateMany?: ProfileUpdateManyWithWhereWithoutTempleInput | ProfileUpdateManyWithWhereWithoutTempleInput[]
    deleteMany?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
  }

  export type Team_event_registrationUncheckedUpdateManyWithoutTempleNestedInput = {
    create?: XOR<Team_event_registrationCreateWithoutTempleInput, Team_event_registrationUncheckedCreateWithoutTempleInput> | Team_event_registrationCreateWithoutTempleInput[] | Team_event_registrationUncheckedCreateWithoutTempleInput[]
    connectOrCreate?: Team_event_registrationCreateOrConnectWithoutTempleInput | Team_event_registrationCreateOrConnectWithoutTempleInput[]
    upsert?: Team_event_registrationUpsertWithWhereUniqueWithoutTempleInput | Team_event_registrationUpsertWithWhereUniqueWithoutTempleInput[]
    createMany?: Team_event_registrationCreateManyTempleInputEnvelope
    set?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    disconnect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    delete?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    connect?: Team_event_registrationWhereUniqueInput | Team_event_registrationWhereUniqueInput[]
    update?: Team_event_registrationUpdateWithWhereUniqueWithoutTempleInput | Team_event_registrationUpdateWithWhereUniqueWithoutTempleInput[]
    updateMany?: Team_event_registrationUpdateManyWithWhereWithoutTempleInput | Team_event_registrationUpdateManyWithWhereWithoutTempleInput[]
    deleteMany?: Team_event_registrationScalarWhereInput | Team_event_registrationScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutProfileInput = {
    create?: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfileInput
    connect?: UserWhereUniqueInput
  }

  export type Mst_templeCreateNestedOneWithoutProfilesInput = {
    create?: XOR<Mst_templeCreateWithoutProfilesInput, Mst_templeUncheckedCreateWithoutProfilesInput>
    connectOrCreate?: Mst_templeCreateOrConnectWithoutProfilesInput
    connect?: Mst_templeWhereUniqueInput
  }

  export type Mst_roleCreateNestedOneWithoutProfilesInput = {
    create?: XOR<Mst_roleCreateWithoutProfilesInput, Mst_roleUncheckedCreateWithoutProfilesInput>
    connectOrCreate?: Mst_roleCreateOrConnectWithoutProfilesInput
    connect?: Mst_roleWhereUniqueInput
  }

  export type Ind_event_registrationCreateNestedManyWithoutUserInput = {
    create?: XOR<Ind_event_registrationCreateWithoutUserInput, Ind_event_registrationUncheckedCreateWithoutUserInput> | Ind_event_registrationCreateWithoutUserInput[] | Ind_event_registrationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: Ind_event_registrationCreateOrConnectWithoutUserInput | Ind_event_registrationCreateOrConnectWithoutUserInput[]
    createMany?: Ind_event_registrationCreateManyUserInputEnvelope
    connect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
  }

  export type Ind_event_registrationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Ind_event_registrationCreateWithoutUserInput, Ind_event_registrationUncheckedCreateWithoutUserInput> | Ind_event_registrationCreateWithoutUserInput[] | Ind_event_registrationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: Ind_event_registrationCreateOrConnectWithoutUserInput | Ind_event_registrationCreateOrConnectWithoutUserInput[]
    createMany?: Ind_event_registrationCreateManyUserInputEnvelope
    connect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutProfileNestedInput = {
    create?: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfileInput
    upsert?: UserUpsertWithoutProfileInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProfileInput, UserUpdateWithoutProfileInput>, UserUncheckedUpdateWithoutProfileInput>
  }

  export type Mst_templeUpdateOneWithoutProfilesNestedInput = {
    create?: XOR<Mst_templeCreateWithoutProfilesInput, Mst_templeUncheckedCreateWithoutProfilesInput>
    connectOrCreate?: Mst_templeCreateOrConnectWithoutProfilesInput
    upsert?: Mst_templeUpsertWithoutProfilesInput
    disconnect?: Mst_templeWhereInput | boolean
    delete?: Mst_templeWhereInput | boolean
    connect?: Mst_templeWhereUniqueInput
    update?: XOR<XOR<Mst_templeUpdateToOneWithWhereWithoutProfilesInput, Mst_templeUpdateWithoutProfilesInput>, Mst_templeUncheckedUpdateWithoutProfilesInput>
  }

  export type Mst_roleUpdateOneRequiredWithoutProfilesNestedInput = {
    create?: XOR<Mst_roleCreateWithoutProfilesInput, Mst_roleUncheckedCreateWithoutProfilesInput>
    connectOrCreate?: Mst_roleCreateOrConnectWithoutProfilesInput
    upsert?: Mst_roleUpsertWithoutProfilesInput
    connect?: Mst_roleWhereUniqueInput
    update?: XOR<XOR<Mst_roleUpdateToOneWithWhereWithoutProfilesInput, Mst_roleUpdateWithoutProfilesInput>, Mst_roleUncheckedUpdateWithoutProfilesInput>
  }

  export type Ind_event_registrationUpdateManyWithoutUserNestedInput = {
    create?: XOR<Ind_event_registrationCreateWithoutUserInput, Ind_event_registrationUncheckedCreateWithoutUserInput> | Ind_event_registrationCreateWithoutUserInput[] | Ind_event_registrationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: Ind_event_registrationCreateOrConnectWithoutUserInput | Ind_event_registrationCreateOrConnectWithoutUserInput[]
    upsert?: Ind_event_registrationUpsertWithWhereUniqueWithoutUserInput | Ind_event_registrationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: Ind_event_registrationCreateManyUserInputEnvelope
    set?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    disconnect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    delete?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    connect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    update?: Ind_event_registrationUpdateWithWhereUniqueWithoutUserInput | Ind_event_registrationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: Ind_event_registrationUpdateManyWithWhereWithoutUserInput | Ind_event_registrationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: Ind_event_registrationScalarWhereInput | Ind_event_registrationScalarWhereInput[]
  }

  export type Ind_event_registrationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Ind_event_registrationCreateWithoutUserInput, Ind_event_registrationUncheckedCreateWithoutUserInput> | Ind_event_registrationCreateWithoutUserInput[] | Ind_event_registrationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: Ind_event_registrationCreateOrConnectWithoutUserInput | Ind_event_registrationCreateOrConnectWithoutUserInput[]
    upsert?: Ind_event_registrationUpsertWithWhereUniqueWithoutUserInput | Ind_event_registrationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: Ind_event_registrationCreateManyUserInputEnvelope
    set?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    disconnect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    delete?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    connect?: Ind_event_registrationWhereUniqueInput | Ind_event_registrationWhereUniqueInput[]
    update?: Ind_event_registrationUpdateWithWhereUniqueWithoutUserInput | Ind_event_registrationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: Ind_event_registrationUpdateManyWithWhereWithoutUserInput | Ind_event_registrationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: Ind_event_registrationScalarWhereInput | Ind_event_registrationScalarWhereInput[]
  }

  export type Mst_templeCreateNestedOneWithoutTeam_registrationsInput = {
    create?: XOR<Mst_templeCreateWithoutTeam_registrationsInput, Mst_templeUncheckedCreateWithoutTeam_registrationsInput>
    connectOrCreate?: Mst_templeCreateOrConnectWithoutTeam_registrationsInput
    connect?: Mst_templeWhereUniqueInput
  }

  export type Mst_event_resultCreateNestedOneWithoutTeam_event_registrationsInput = {
    create?: XOR<Mst_event_resultCreateWithoutTeam_event_registrationsInput, Mst_event_resultUncheckedCreateWithoutTeam_event_registrationsInput>
    connectOrCreate?: Mst_event_resultCreateOrConnectWithoutTeam_event_registrationsInput
    connect?: Mst_event_resultWhereUniqueInput
  }

  export type Mst_eventCreateNestedOneWithoutTeam_registrationsInput = {
    create?: XOR<Mst_eventCreateWithoutTeam_registrationsInput, Mst_eventUncheckedCreateWithoutTeam_registrationsInput>
    connectOrCreate?: Mst_eventCreateOrConnectWithoutTeam_registrationsInput
    connect?: Mst_eventWhereUniqueInput
  }

  export type Mst_templeUpdateOneRequiredWithoutTeam_registrationsNestedInput = {
    create?: XOR<Mst_templeCreateWithoutTeam_registrationsInput, Mst_templeUncheckedCreateWithoutTeam_registrationsInput>
    connectOrCreate?: Mst_templeCreateOrConnectWithoutTeam_registrationsInput
    upsert?: Mst_templeUpsertWithoutTeam_registrationsInput
    connect?: Mst_templeWhereUniqueInput
    update?: XOR<XOR<Mst_templeUpdateToOneWithWhereWithoutTeam_registrationsInput, Mst_templeUpdateWithoutTeam_registrationsInput>, Mst_templeUncheckedUpdateWithoutTeam_registrationsInput>
  }

  export type Mst_event_resultUpdateOneWithoutTeam_event_registrationsNestedInput = {
    create?: XOR<Mst_event_resultCreateWithoutTeam_event_registrationsInput, Mst_event_resultUncheckedCreateWithoutTeam_event_registrationsInput>
    connectOrCreate?: Mst_event_resultCreateOrConnectWithoutTeam_event_registrationsInput
    upsert?: Mst_event_resultUpsertWithoutTeam_event_registrationsInput
    disconnect?: Mst_event_resultWhereInput | boolean
    delete?: Mst_event_resultWhereInput | boolean
    connect?: Mst_event_resultWhereUniqueInput
    update?: XOR<XOR<Mst_event_resultUpdateToOneWithWhereWithoutTeam_event_registrationsInput, Mst_event_resultUpdateWithoutTeam_event_registrationsInput>, Mst_event_resultUncheckedUpdateWithoutTeam_event_registrationsInput>
  }

  export type Mst_eventUpdateOneRequiredWithoutTeam_registrationsNestedInput = {
    create?: XOR<Mst_eventCreateWithoutTeam_registrationsInput, Mst_eventUncheckedCreateWithoutTeam_registrationsInput>
    connectOrCreate?: Mst_eventCreateOrConnectWithoutTeam_registrationsInput
    upsert?: Mst_eventUpsertWithoutTeam_registrationsInput
    connect?: Mst_eventWhereUniqueInput
    update?: XOR<XOR<Mst_eventUpdateToOneWithWhereWithoutTeam_registrationsInput, Mst_eventUpdateWithoutTeam_registrationsInput>, Mst_eventUncheckedUpdateWithoutTeam_registrationsInput>
  }

  export type ProfileCreateNestedOneWithoutUserInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    connect?: ProfileWhereUniqueInput
  }

  export type User_roleCreateNestedManyWithoutUserInput = {
    create?: XOR<User_roleCreateWithoutUserInput, User_roleUncheckedCreateWithoutUserInput> | User_roleCreateWithoutUserInput[] | User_roleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: User_roleCreateOrConnectWithoutUserInput | User_roleCreateOrConnectWithoutUserInput[]
    createMany?: User_roleCreateManyUserInputEnvelope
    connect?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
  }

  export type ProfileUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    connect?: ProfileWhereUniqueInput
  }

  export type User_roleUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<User_roleCreateWithoutUserInput, User_roleUncheckedCreateWithoutUserInput> | User_roleCreateWithoutUserInput[] | User_roleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: User_roleCreateOrConnectWithoutUserInput | User_roleCreateOrConnectWithoutUserInput[]
    createMany?: User_roleCreateManyUserInputEnvelope
    connect?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
  }

  export type ProfileUpdateOneWithoutUserNestedInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    upsert?: ProfileUpsertWithoutUserInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutUserInput, ProfileUpdateWithoutUserInput>, ProfileUncheckedUpdateWithoutUserInput>
  }

  export type User_roleUpdateManyWithoutUserNestedInput = {
    create?: XOR<User_roleCreateWithoutUserInput, User_roleUncheckedCreateWithoutUserInput> | User_roleCreateWithoutUserInput[] | User_roleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: User_roleCreateOrConnectWithoutUserInput | User_roleCreateOrConnectWithoutUserInput[]
    upsert?: User_roleUpsertWithWhereUniqueWithoutUserInput | User_roleUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: User_roleCreateManyUserInputEnvelope
    set?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    disconnect?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    delete?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    connect?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    update?: User_roleUpdateWithWhereUniqueWithoutUserInput | User_roleUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: User_roleUpdateManyWithWhereWithoutUserInput | User_roleUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: User_roleScalarWhereInput | User_roleScalarWhereInput[]
  }

  export type ProfileUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    upsert?: ProfileUpsertWithoutUserInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutUserInput, ProfileUpdateWithoutUserInput>, ProfileUncheckedUpdateWithoutUserInput>
  }

  export type User_roleUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<User_roleCreateWithoutUserInput, User_roleUncheckedCreateWithoutUserInput> | User_roleCreateWithoutUserInput[] | User_roleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: User_roleCreateOrConnectWithoutUserInput | User_roleCreateOrConnectWithoutUserInput[]
    upsert?: User_roleUpsertWithWhereUniqueWithoutUserInput | User_roleUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: User_roleCreateManyUserInputEnvelope
    set?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    disconnect?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    delete?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    connect?: User_roleWhereUniqueInput | User_roleWhereUniqueInput[]
    update?: User_roleUpdateWithWhereUniqueWithoutUserInput | User_roleUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: User_roleUpdateManyWithWhereWithoutUserInput | User_roleUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: User_roleScalarWhereInput | User_roleScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutUser_rolesInput = {
    create?: XOR<UserCreateWithoutUser_rolesInput, UserUncheckedCreateWithoutUser_rolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUser_rolesInput
    connect?: UserWhereUniqueInput
  }

  export type Mst_roleCreateNestedOneWithoutUser_rolesInput = {
    create?: XOR<Mst_roleCreateWithoutUser_rolesInput, Mst_roleUncheckedCreateWithoutUser_rolesInput>
    connectOrCreate?: Mst_roleCreateOrConnectWithoutUser_rolesInput
    connect?: Mst_roleWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUser_rolesNestedInput = {
    create?: XOR<UserCreateWithoutUser_rolesInput, UserUncheckedCreateWithoutUser_rolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUser_rolesInput
    upsert?: UserUpsertWithoutUser_rolesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUser_rolesInput, UserUpdateWithoutUser_rolesInput>, UserUncheckedUpdateWithoutUser_rolesInput>
  }

  export type Mst_roleUpdateOneRequiredWithoutUser_rolesNestedInput = {
    create?: XOR<Mst_roleCreateWithoutUser_rolesInput, Mst_roleUncheckedCreateWithoutUser_rolesInput>
    connectOrCreate?: Mst_roleCreateOrConnectWithoutUser_rolesInput
    upsert?: Mst_roleUpsertWithoutUser_rolesInput
    connect?: Mst_roleWhereUniqueInput
    update?: XOR<XOR<Mst_roleUpdateToOneWithWhereWithoutUser_rolesInput, Mst_roleUpdateWithoutUser_rolesInput>, Mst_roleUncheckedUpdateWithoutUser_rolesInput>
  }

  export type Mst_eventCreateNestedOneWithoutSchedulesInput = {
    create?: XOR<Mst_eventCreateWithoutSchedulesInput, Mst_eventUncheckedCreateWithoutSchedulesInput>
    connectOrCreate?: Mst_eventCreateOrConnectWithoutSchedulesInput
    connect?: Mst_eventWhereUniqueInput
  }

  export type Mst_eventUpdateOneRequiredWithoutSchedulesNestedInput = {
    create?: XOR<Mst_eventCreateWithoutSchedulesInput, Mst_eventUncheckedCreateWithoutSchedulesInput>
    connectOrCreate?: Mst_eventCreateOrConnectWithoutSchedulesInput
    upsert?: Mst_eventUpsertWithoutSchedulesInput
    connect?: Mst_eventWhereUniqueInput
    update?: XOR<XOR<Mst_eventUpdateToOneWithWhereWithoutSchedulesInput, Mst_eventUpdateWithoutSchedulesInput>, Mst_eventUncheckedUpdateWithoutSchedulesInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnumRegistrationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RegistrationStatus | EnumRegistrationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RegistrationStatus[]
    notIn?: $Enums.RegistrationStatus[]
    not?: NestedEnumRegistrationStatusFilter<$PrismaModel> | $Enums.RegistrationStatus
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumRegistrationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RegistrationStatus | EnumRegistrationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RegistrationStatus[]
    notIn?: $Enums.RegistrationStatus[]
    not?: NestedEnumRegistrationStatusWithAggregatesFilter<$PrismaModel> | $Enums.RegistrationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRegistrationStatusFilter<$PrismaModel>
    _max?: NestedEnumRegistrationStatusFilter<$PrismaModel>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedEnumGenderFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel>
    in?: $Enums.Gender[]
    notIn?: $Enums.Gender[]
    not?: NestedEnumGenderFilter<$PrismaModel> | $Enums.Gender
  }

  export type NestedEnumGenderWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel>
    in?: $Enums.Gender[]
    notIn?: $Enums.Gender[]
    not?: NestedEnumGenderWithAggregatesFilter<$PrismaModel> | $Enums.Gender
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGenderFilter<$PrismaModel>
    _max?: NestedEnumGenderFilter<$PrismaModel>
  }

  export type NestedEnumRankFilter<$PrismaModel = never> = {
    equals?: $Enums.Rank | EnumRankFieldRefInput<$PrismaModel>
    in?: $Enums.Rank[]
    notIn?: $Enums.Rank[]
    not?: NestedEnumRankFilter<$PrismaModel> | $Enums.Rank
  }

  export type NestedEnumRankWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Rank | EnumRankFieldRefInput<$PrismaModel>
    in?: $Enums.Rank[]
    notIn?: $Enums.Rank[]
    not?: NestedEnumRankWithAggregatesFilter<$PrismaModel> | $Enums.Rank
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRankFilter<$PrismaModel>
    _max?: NestedEnumRankFilter<$PrismaModel>
  }

  export type NestedEnumEventTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.EventType | EnumEventTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EventType[]
    notIn?: $Enums.EventType[]
    not?: NestedEnumEventTypeFilter<$PrismaModel> | $Enums.EventType
  }

  export type NestedEnumEventTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EventType | EnumEventTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EventType[]
    notIn?: $Enums.EventType[]
    not?: NestedEnumEventTypeWithAggregatesFilter<$PrismaModel> | $Enums.EventType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEventTypeFilter<$PrismaModel>
    _max?: NestedEnumEventTypeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type Mst_templeCreateWithoutChampionsInput = {
    code: string
    name: string
    address?: string | null
    contact_name?: string | null
    contact_phone?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    modified_at?: Date | string
    host_champions?: ChampionCreateNestedManyWithoutHost_templeInput
    profiles?: ProfileCreateNestedManyWithoutTempleInput
    team_registrations?: Team_event_registrationCreateNestedManyWithoutTempleInput
  }

  export type Mst_templeUncheckedCreateWithoutChampionsInput = {
    id?: number
    code: string
    name: string
    address?: string | null
    contact_name?: string | null
    contact_phone?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    modified_at?: Date | string
    host_champions?: ChampionUncheckedCreateNestedManyWithoutHost_templeInput
    profiles?: ProfileUncheckedCreateNestedManyWithoutTempleInput
    team_registrations?: Team_event_registrationUncheckedCreateNestedManyWithoutTempleInput
  }

  export type Mst_templeCreateOrConnectWithoutChampionsInput = {
    where: Mst_templeWhereUniqueInput
    create: XOR<Mst_templeCreateWithoutChampionsInput, Mst_templeUncheckedCreateWithoutChampionsInput>
  }

  export type Mst_templeCreateWithoutHost_championsInput = {
    code: string
    name: string
    address?: string | null
    contact_name?: string | null
    contact_phone?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    modified_at?: Date | string
    champions?: ChampionCreateNestedManyWithoutTempleInput
    profiles?: ProfileCreateNestedManyWithoutTempleInput
    team_registrations?: Team_event_registrationCreateNestedManyWithoutTempleInput
  }

  export type Mst_templeUncheckedCreateWithoutHost_championsInput = {
    id?: number
    code: string
    name: string
    address?: string | null
    contact_name?: string | null
    contact_phone?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    modified_at?: Date | string
    champions?: ChampionUncheckedCreateNestedManyWithoutTempleInput
    profiles?: ProfileUncheckedCreateNestedManyWithoutTempleInput
    team_registrations?: Team_event_registrationUncheckedCreateNestedManyWithoutTempleInput
  }

  export type Mst_templeCreateOrConnectWithoutHost_championsInput = {
    where: Mst_templeWhereUniqueInput
    create: XOR<Mst_templeCreateWithoutHost_championsInput, Mst_templeUncheckedCreateWithoutHost_championsInput>
  }

  export type Mst_templeUpsertWithoutChampionsInput = {
    update: XOR<Mst_templeUpdateWithoutChampionsInput, Mst_templeUncheckedUpdateWithoutChampionsInput>
    create: XOR<Mst_templeCreateWithoutChampionsInput, Mst_templeUncheckedCreateWithoutChampionsInput>
    where?: Mst_templeWhereInput
  }

  export type Mst_templeUpdateToOneWithWhereWithoutChampionsInput = {
    where?: Mst_templeWhereInput
    data: XOR<Mst_templeUpdateWithoutChampionsInput, Mst_templeUncheckedUpdateWithoutChampionsInput>
  }

  export type Mst_templeUpdateWithoutChampionsInput = {
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    host_champions?: ChampionUpdateManyWithoutHost_templeNestedInput
    profiles?: ProfileUpdateManyWithoutTempleNestedInput
    team_registrations?: Team_event_registrationUpdateManyWithoutTempleNestedInput
  }

  export type Mst_templeUncheckedUpdateWithoutChampionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    host_champions?: ChampionUncheckedUpdateManyWithoutHost_templeNestedInput
    profiles?: ProfileUncheckedUpdateManyWithoutTempleNestedInput
    team_registrations?: Team_event_registrationUncheckedUpdateManyWithoutTempleNestedInput
  }

  export type Mst_templeUpsertWithoutHost_championsInput = {
    update: XOR<Mst_templeUpdateWithoutHost_championsInput, Mst_templeUncheckedUpdateWithoutHost_championsInput>
    create: XOR<Mst_templeCreateWithoutHost_championsInput, Mst_templeUncheckedCreateWithoutHost_championsInput>
    where?: Mst_templeWhereInput
  }

  export type Mst_templeUpdateToOneWithWhereWithoutHost_championsInput = {
    where?: Mst_templeWhereInput
    data: XOR<Mst_templeUpdateWithoutHost_championsInput, Mst_templeUncheckedUpdateWithoutHost_championsInput>
  }

  export type Mst_templeUpdateWithoutHost_championsInput = {
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    champions?: ChampionUpdateManyWithoutTempleNestedInput
    profiles?: ProfileUpdateManyWithoutTempleNestedInput
    team_registrations?: Team_event_registrationUpdateManyWithoutTempleNestedInput
  }

  export type Mst_templeUncheckedUpdateWithoutHost_championsInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    champions?: ChampionUncheckedUpdateManyWithoutTempleNestedInput
    profiles?: ProfileUncheckedUpdateManyWithoutTempleNestedInput
    team_registrations?: Team_event_registrationUncheckedUpdateManyWithoutTempleNestedInput
  }

  export type Mst_eventCreateWithoutRegistrationsInput = {
    name: string
    gender: $Enums.Gender
    is_deleted?: boolean
    is_closed?: boolean
    event_type: Mst_event_typeCreateNestedOneWithoutEventsInput
    age_category: Mst_age_categoryCreateNestedOneWithoutEventsInput
    team_registrations?: Team_event_registrationCreateNestedManyWithoutEventInput
    schedules?: event_scheduleCreateNestedManyWithoutEventInput
  }

  export type Mst_eventUncheckedCreateWithoutRegistrationsInput = {
    id?: number
    name: string
    event_type_id: number
    age_category_id: number
    gender: $Enums.Gender
    is_deleted?: boolean
    is_closed?: boolean
    team_registrations?: Team_event_registrationUncheckedCreateNestedManyWithoutEventInput
    schedules?: event_scheduleUncheckedCreateNestedManyWithoutEventInput
  }

  export type Mst_eventCreateOrConnectWithoutRegistrationsInput = {
    where: Mst_eventWhereUniqueInput
    create: XOR<Mst_eventCreateWithoutRegistrationsInput, Mst_eventUncheckedCreateWithoutRegistrationsInput>
  }

  export type ProfileCreateWithoutRegistrationsInput = {
    first_name: string
    last_name?: string | null
    email?: string | null
    phone?: string | null
    aadhar_number?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    is_verified?: boolean
    dob: Date | string
    gender: $Enums.Gender
    user?: UserCreateNestedOneWithoutProfileInput
    temple?: Mst_templeCreateNestedOneWithoutProfilesInput
    role?: Mst_roleCreateNestedOneWithoutProfilesInput
  }

  export type ProfileUncheckedCreateWithoutRegistrationsInput = {
    id?: number
    user_id?: number | null
    first_name: string
    last_name?: string | null
    email?: string | null
    phone?: string | null
    aadhar_number?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    is_verified?: boolean
    temple_id?: number | null
    dob: Date | string
    gender: $Enums.Gender
    role_id?: number
  }

  export type ProfileCreateOrConnectWithoutRegistrationsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutRegistrationsInput, ProfileUncheckedCreateWithoutRegistrationsInput>
  }

  export type Mst_event_resultCreateWithoutInd_event_registrationsInput = {
    rank: $Enums.Rank
    points: number
    event_type: Mst_event_typeCreateNestedOneWithoutResultsInput
    team_event_registrations?: Team_event_registrationCreateNestedManyWithoutEvent_resultInput
  }

  export type Mst_event_resultUncheckedCreateWithoutInd_event_registrationsInput = {
    id?: number
    event_type_id: number
    rank: $Enums.Rank
    points: number
    team_event_registrations?: Team_event_registrationUncheckedCreateNestedManyWithoutEvent_resultInput
  }

  export type Mst_event_resultCreateOrConnectWithoutInd_event_registrationsInput = {
    where: Mst_event_resultWhereUniqueInput
    create: XOR<Mst_event_resultCreateWithoutInd_event_registrationsInput, Mst_event_resultUncheckedCreateWithoutInd_event_registrationsInput>
  }

  export type Mst_eventUpsertWithoutRegistrationsInput = {
    update: XOR<Mst_eventUpdateWithoutRegistrationsInput, Mst_eventUncheckedUpdateWithoutRegistrationsInput>
    create: XOR<Mst_eventCreateWithoutRegistrationsInput, Mst_eventUncheckedCreateWithoutRegistrationsInput>
    where?: Mst_eventWhereInput
  }

  export type Mst_eventUpdateToOneWithWhereWithoutRegistrationsInput = {
    where?: Mst_eventWhereInput
    data: XOR<Mst_eventUpdateWithoutRegistrationsInput, Mst_eventUncheckedUpdateWithoutRegistrationsInput>
  }

  export type Mst_eventUpdateWithoutRegistrationsInput = {
    name?: StringFieldUpdateOperationsInput | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
    event_type?: Mst_event_typeUpdateOneRequiredWithoutEventsNestedInput
    age_category?: Mst_age_categoryUpdateOneRequiredWithoutEventsNestedInput
    team_registrations?: Team_event_registrationUpdateManyWithoutEventNestedInput
    schedules?: event_scheduleUpdateManyWithoutEventNestedInput
  }

  export type Mst_eventUncheckedUpdateWithoutRegistrationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    event_type_id?: IntFieldUpdateOperationsInput | number
    age_category_id?: IntFieldUpdateOperationsInput | number
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
    team_registrations?: Team_event_registrationUncheckedUpdateManyWithoutEventNestedInput
    schedules?: event_scheduleUncheckedUpdateManyWithoutEventNestedInput
  }

  export type ProfileUpsertWithoutRegistrationsInput = {
    update: XOR<ProfileUpdateWithoutRegistrationsInput, ProfileUncheckedUpdateWithoutRegistrationsInput>
    create: XOR<ProfileCreateWithoutRegistrationsInput, ProfileUncheckedCreateWithoutRegistrationsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutRegistrationsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutRegistrationsInput, ProfileUncheckedUpdateWithoutRegistrationsInput>
  }

  export type ProfileUpdateWithoutRegistrationsInput = {
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    dob?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    user?: UserUpdateOneWithoutProfileNestedInput
    temple?: Mst_templeUpdateOneWithoutProfilesNestedInput
    role?: Mst_roleUpdateOneRequiredWithoutProfilesNestedInput
  }

  export type ProfileUncheckedUpdateWithoutRegistrationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    temple_id?: NullableIntFieldUpdateOperationsInput | number | null
    dob?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    role_id?: IntFieldUpdateOperationsInput | number
  }

  export type Mst_event_resultUpsertWithoutInd_event_registrationsInput = {
    update: XOR<Mst_event_resultUpdateWithoutInd_event_registrationsInput, Mst_event_resultUncheckedUpdateWithoutInd_event_registrationsInput>
    create: XOR<Mst_event_resultCreateWithoutInd_event_registrationsInput, Mst_event_resultUncheckedCreateWithoutInd_event_registrationsInput>
    where?: Mst_event_resultWhereInput
  }

  export type Mst_event_resultUpdateToOneWithWhereWithoutInd_event_registrationsInput = {
    where?: Mst_event_resultWhereInput
    data: XOR<Mst_event_resultUpdateWithoutInd_event_registrationsInput, Mst_event_resultUncheckedUpdateWithoutInd_event_registrationsInput>
  }

  export type Mst_event_resultUpdateWithoutInd_event_registrationsInput = {
    rank?: EnumRankFieldUpdateOperationsInput | $Enums.Rank
    points?: IntFieldUpdateOperationsInput | number
    event_type?: Mst_event_typeUpdateOneRequiredWithoutResultsNestedInput
    team_event_registrations?: Team_event_registrationUpdateManyWithoutEvent_resultNestedInput
  }

  export type Mst_event_resultUncheckedUpdateWithoutInd_event_registrationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    event_type_id?: IntFieldUpdateOperationsInput | number
    rank?: EnumRankFieldUpdateOperationsInput | $Enums.Rank
    points?: IntFieldUpdateOperationsInput | number
    team_event_registrations?: Team_event_registrationUncheckedUpdateManyWithoutEvent_resultNestedInput
  }

  export type Mst_eventCreateWithoutAge_categoryInput = {
    name: string
    gender: $Enums.Gender
    is_deleted?: boolean
    is_closed?: boolean
    event_type: Mst_event_typeCreateNestedOneWithoutEventsInput
    registrations?: Ind_event_registrationCreateNestedManyWithoutEventInput
    team_registrations?: Team_event_registrationCreateNestedManyWithoutEventInput
    schedules?: event_scheduleCreateNestedManyWithoutEventInput
  }

  export type Mst_eventUncheckedCreateWithoutAge_categoryInput = {
    id?: number
    name: string
    event_type_id: number
    gender: $Enums.Gender
    is_deleted?: boolean
    is_closed?: boolean
    registrations?: Ind_event_registrationUncheckedCreateNestedManyWithoutEventInput
    team_registrations?: Team_event_registrationUncheckedCreateNestedManyWithoutEventInput
    schedules?: event_scheduleUncheckedCreateNestedManyWithoutEventInput
  }

  export type Mst_eventCreateOrConnectWithoutAge_categoryInput = {
    where: Mst_eventWhereUniqueInput
    create: XOR<Mst_eventCreateWithoutAge_categoryInput, Mst_eventUncheckedCreateWithoutAge_categoryInput>
  }

  export type Mst_eventCreateManyAge_categoryInputEnvelope = {
    data: Mst_eventCreateManyAge_categoryInput | Mst_eventCreateManyAge_categoryInput[]
  }

  export type Mst_eventUpsertWithWhereUniqueWithoutAge_categoryInput = {
    where: Mst_eventWhereUniqueInput
    update: XOR<Mst_eventUpdateWithoutAge_categoryInput, Mst_eventUncheckedUpdateWithoutAge_categoryInput>
    create: XOR<Mst_eventCreateWithoutAge_categoryInput, Mst_eventUncheckedCreateWithoutAge_categoryInput>
  }

  export type Mst_eventUpdateWithWhereUniqueWithoutAge_categoryInput = {
    where: Mst_eventWhereUniqueInput
    data: XOR<Mst_eventUpdateWithoutAge_categoryInput, Mst_eventUncheckedUpdateWithoutAge_categoryInput>
  }

  export type Mst_eventUpdateManyWithWhereWithoutAge_categoryInput = {
    where: Mst_eventScalarWhereInput
    data: XOR<Mst_eventUpdateManyMutationInput, Mst_eventUncheckedUpdateManyWithoutAge_categoryInput>
  }

  export type Mst_eventScalarWhereInput = {
    AND?: Mst_eventScalarWhereInput | Mst_eventScalarWhereInput[]
    OR?: Mst_eventScalarWhereInput[]
    NOT?: Mst_eventScalarWhereInput | Mst_eventScalarWhereInput[]
    id?: IntFilter<"Mst_event"> | number
    name?: StringFilter<"Mst_event"> | string
    event_type_id?: IntFilter<"Mst_event"> | number
    age_category_id?: IntFilter<"Mst_event"> | number
    gender?: EnumGenderFilter<"Mst_event"> | $Enums.Gender
    is_deleted?: BoolFilter<"Mst_event"> | boolean
    is_closed?: BoolFilter<"Mst_event"> | boolean
  }

  export type Mst_event_typeCreateWithoutEventsInput = {
    name: string
    type: $Enums.EventType
    participant_count?: number
    results?: Mst_event_resultCreateNestedManyWithoutEvent_typeInput
  }

  export type Mst_event_typeUncheckedCreateWithoutEventsInput = {
    id?: number
    name: string
    type: $Enums.EventType
    participant_count?: number
    results?: Mst_event_resultUncheckedCreateNestedManyWithoutEvent_typeInput
  }

  export type Mst_event_typeCreateOrConnectWithoutEventsInput = {
    where: Mst_event_typeWhereUniqueInput
    create: XOR<Mst_event_typeCreateWithoutEventsInput, Mst_event_typeUncheckedCreateWithoutEventsInput>
  }

  export type Mst_age_categoryCreateWithoutEventsInput = {
    name: string
    from_age: number
    to_age: number
    is_deleted?: boolean
  }

  export type Mst_age_categoryUncheckedCreateWithoutEventsInput = {
    id?: number
    name: string
    from_age: number
    to_age: number
    is_deleted?: boolean
  }

  export type Mst_age_categoryCreateOrConnectWithoutEventsInput = {
    where: Mst_age_categoryWhereUniqueInput
    create: XOR<Mst_age_categoryCreateWithoutEventsInput, Mst_age_categoryUncheckedCreateWithoutEventsInput>
  }

  export type Ind_event_registrationCreateWithoutEventInput = {
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
    user: ProfileCreateNestedOneWithoutRegistrationsInput
    event_result?: Mst_event_resultCreateNestedOneWithoutInd_event_registrationsInput
  }

  export type Ind_event_registrationUncheckedCreateWithoutEventInput = {
    id?: number
    user_id: number
    event_result_id?: number | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
  }

  export type Ind_event_registrationCreateOrConnectWithoutEventInput = {
    where: Ind_event_registrationWhereUniqueInput
    create: XOR<Ind_event_registrationCreateWithoutEventInput, Ind_event_registrationUncheckedCreateWithoutEventInput>
  }

  export type Ind_event_registrationCreateManyEventInputEnvelope = {
    data: Ind_event_registrationCreateManyEventInput | Ind_event_registrationCreateManyEventInput[]
  }

  export type Team_event_registrationCreateWithoutEventInput = {
    member_user_ids?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
    temple: Mst_templeCreateNestedOneWithoutTeam_registrationsInput
    event_result?: Mst_event_resultCreateNestedOneWithoutTeam_event_registrationsInput
  }

  export type Team_event_registrationUncheckedCreateWithoutEventInput = {
    id?: number
    temple_id: number
    event_result_id?: number | null
    member_user_ids?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
  }

  export type Team_event_registrationCreateOrConnectWithoutEventInput = {
    where: Team_event_registrationWhereUniqueInput
    create: XOR<Team_event_registrationCreateWithoutEventInput, Team_event_registrationUncheckedCreateWithoutEventInput>
  }

  export type Team_event_registrationCreateManyEventInputEnvelope = {
    data: Team_event_registrationCreateManyEventInput | Team_event_registrationCreateManyEventInput[]
  }

  export type event_scheduleCreateWithoutEventInput = {
    start_time: Date | string
    end_time: Date | string
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
  }

  export type event_scheduleUncheckedCreateWithoutEventInput = {
    id?: number
    start_time: Date | string
    end_time: Date | string
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
  }

  export type event_scheduleCreateOrConnectWithoutEventInput = {
    where: event_scheduleWhereUniqueInput
    create: XOR<event_scheduleCreateWithoutEventInput, event_scheduleUncheckedCreateWithoutEventInput>
  }

  export type event_scheduleCreateManyEventInputEnvelope = {
    data: event_scheduleCreateManyEventInput | event_scheduleCreateManyEventInput[]
  }

  export type Mst_event_typeUpsertWithoutEventsInput = {
    update: XOR<Mst_event_typeUpdateWithoutEventsInput, Mst_event_typeUncheckedUpdateWithoutEventsInput>
    create: XOR<Mst_event_typeCreateWithoutEventsInput, Mst_event_typeUncheckedCreateWithoutEventsInput>
    where?: Mst_event_typeWhereInput
  }

  export type Mst_event_typeUpdateToOneWithWhereWithoutEventsInput = {
    where?: Mst_event_typeWhereInput
    data: XOR<Mst_event_typeUpdateWithoutEventsInput, Mst_event_typeUncheckedUpdateWithoutEventsInput>
  }

  export type Mst_event_typeUpdateWithoutEventsInput = {
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumEventTypeFieldUpdateOperationsInput | $Enums.EventType
    participant_count?: IntFieldUpdateOperationsInput | number
    results?: Mst_event_resultUpdateManyWithoutEvent_typeNestedInput
  }

  export type Mst_event_typeUncheckedUpdateWithoutEventsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumEventTypeFieldUpdateOperationsInput | $Enums.EventType
    participant_count?: IntFieldUpdateOperationsInput | number
    results?: Mst_event_resultUncheckedUpdateManyWithoutEvent_typeNestedInput
  }

  export type Mst_age_categoryUpsertWithoutEventsInput = {
    update: XOR<Mst_age_categoryUpdateWithoutEventsInput, Mst_age_categoryUncheckedUpdateWithoutEventsInput>
    create: XOR<Mst_age_categoryCreateWithoutEventsInput, Mst_age_categoryUncheckedCreateWithoutEventsInput>
    where?: Mst_age_categoryWhereInput
  }

  export type Mst_age_categoryUpdateToOneWithWhereWithoutEventsInput = {
    where?: Mst_age_categoryWhereInput
    data: XOR<Mst_age_categoryUpdateWithoutEventsInput, Mst_age_categoryUncheckedUpdateWithoutEventsInput>
  }

  export type Mst_age_categoryUpdateWithoutEventsInput = {
    name?: StringFieldUpdateOperationsInput | string
    from_age?: IntFieldUpdateOperationsInput | number
    to_age?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type Mst_age_categoryUncheckedUpdateWithoutEventsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    from_age?: IntFieldUpdateOperationsInput | number
    to_age?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type Ind_event_registrationUpsertWithWhereUniqueWithoutEventInput = {
    where: Ind_event_registrationWhereUniqueInput
    update: XOR<Ind_event_registrationUpdateWithoutEventInput, Ind_event_registrationUncheckedUpdateWithoutEventInput>
    create: XOR<Ind_event_registrationCreateWithoutEventInput, Ind_event_registrationUncheckedCreateWithoutEventInput>
  }

  export type Ind_event_registrationUpdateWithWhereUniqueWithoutEventInput = {
    where: Ind_event_registrationWhereUniqueInput
    data: XOR<Ind_event_registrationUpdateWithoutEventInput, Ind_event_registrationUncheckedUpdateWithoutEventInput>
  }

  export type Ind_event_registrationUpdateManyWithWhereWithoutEventInput = {
    where: Ind_event_registrationScalarWhereInput
    data: XOR<Ind_event_registrationUpdateManyMutationInput, Ind_event_registrationUncheckedUpdateManyWithoutEventInput>
  }

  export type Ind_event_registrationScalarWhereInput = {
    AND?: Ind_event_registrationScalarWhereInput | Ind_event_registrationScalarWhereInput[]
    OR?: Ind_event_registrationScalarWhereInput[]
    NOT?: Ind_event_registrationScalarWhereInput | Ind_event_registrationScalarWhereInput[]
    id?: IntFilter<"Ind_event_registration"> | number
    event_id?: IntFilter<"Ind_event_registration"> | number
    user_id?: IntFilter<"Ind_event_registration"> | number
    event_result_id?: IntNullableFilter<"Ind_event_registration"> | number | null
    created_at?: DateTimeFilter<"Ind_event_registration"> | Date | string
    modified_at?: DateTimeFilter<"Ind_event_registration"> | Date | string
    is_deleted?: BoolFilter<"Ind_event_registration"> | boolean
    status?: EnumRegistrationStatusFilter<"Ind_event_registration"> | $Enums.RegistrationStatus
  }

  export type Team_event_registrationUpsertWithWhereUniqueWithoutEventInput = {
    where: Team_event_registrationWhereUniqueInput
    update: XOR<Team_event_registrationUpdateWithoutEventInput, Team_event_registrationUncheckedUpdateWithoutEventInput>
    create: XOR<Team_event_registrationCreateWithoutEventInput, Team_event_registrationUncheckedCreateWithoutEventInput>
  }

  export type Team_event_registrationUpdateWithWhereUniqueWithoutEventInput = {
    where: Team_event_registrationWhereUniqueInput
    data: XOR<Team_event_registrationUpdateWithoutEventInput, Team_event_registrationUncheckedUpdateWithoutEventInput>
  }

  export type Team_event_registrationUpdateManyWithWhereWithoutEventInput = {
    where: Team_event_registrationScalarWhereInput
    data: XOR<Team_event_registrationUpdateManyMutationInput, Team_event_registrationUncheckedUpdateManyWithoutEventInput>
  }

  export type Team_event_registrationScalarWhereInput = {
    AND?: Team_event_registrationScalarWhereInput | Team_event_registrationScalarWhereInput[]
    OR?: Team_event_registrationScalarWhereInput[]
    NOT?: Team_event_registrationScalarWhereInput | Team_event_registrationScalarWhereInput[]
    id?: IntFilter<"Team_event_registration"> | number
    temple_id?: IntFilter<"Team_event_registration"> | number
    event_result_id?: IntNullableFilter<"Team_event_registration"> | number | null
    member_user_ids?: StringNullableFilter<"Team_event_registration"> | string | null
    created_at?: DateTimeFilter<"Team_event_registration"> | Date | string
    modified_at?: DateTimeFilter<"Team_event_registration"> | Date | string
    is_deleted?: BoolFilter<"Team_event_registration"> | boolean
    event_id?: IntFilter<"Team_event_registration"> | number
    status?: EnumRegistrationStatusFilter<"Team_event_registration"> | $Enums.RegistrationStatus
  }

  export type event_scheduleUpsertWithWhereUniqueWithoutEventInput = {
    where: event_scheduleWhereUniqueInput
    update: XOR<event_scheduleUpdateWithoutEventInput, event_scheduleUncheckedUpdateWithoutEventInput>
    create: XOR<event_scheduleCreateWithoutEventInput, event_scheduleUncheckedCreateWithoutEventInput>
  }

  export type event_scheduleUpdateWithWhereUniqueWithoutEventInput = {
    where: event_scheduleWhereUniqueInput
    data: XOR<event_scheduleUpdateWithoutEventInput, event_scheduleUncheckedUpdateWithoutEventInput>
  }

  export type event_scheduleUpdateManyWithWhereWithoutEventInput = {
    where: event_scheduleScalarWhereInput
    data: XOR<event_scheduleUpdateManyMutationInput, event_scheduleUncheckedUpdateManyWithoutEventInput>
  }

  export type event_scheduleScalarWhereInput = {
    AND?: event_scheduleScalarWhereInput | event_scheduleScalarWhereInput[]
    OR?: event_scheduleScalarWhereInput[]
    NOT?: event_scheduleScalarWhereInput | event_scheduleScalarWhereInput[]
    id?: IntFilter<"event_schedule"> | number
    event_id?: IntFilter<"event_schedule"> | number
    start_time?: DateTimeFilter<"event_schedule"> | Date | string
    end_time?: DateTimeFilter<"event_schedule"> | Date | string
    created_at?: DateTimeFilter<"event_schedule"> | Date | string
    modified_at?: DateTimeFilter<"event_schedule"> | Date | string
    is_deleted?: BoolFilter<"event_schedule"> | boolean
  }

  export type Mst_event_typeCreateWithoutResultsInput = {
    name: string
    type: $Enums.EventType
    participant_count?: number
    events?: Mst_eventCreateNestedManyWithoutEvent_typeInput
  }

  export type Mst_event_typeUncheckedCreateWithoutResultsInput = {
    id?: number
    name: string
    type: $Enums.EventType
    participant_count?: number
    events?: Mst_eventUncheckedCreateNestedManyWithoutEvent_typeInput
  }

  export type Mst_event_typeCreateOrConnectWithoutResultsInput = {
    where: Mst_event_typeWhereUniqueInput
    create: XOR<Mst_event_typeCreateWithoutResultsInput, Mst_event_typeUncheckedCreateWithoutResultsInput>
  }

  export type Ind_event_registrationCreateWithoutEvent_resultInput = {
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
    event: Mst_eventCreateNestedOneWithoutRegistrationsInput
    user: ProfileCreateNestedOneWithoutRegistrationsInput
  }

  export type Ind_event_registrationUncheckedCreateWithoutEvent_resultInput = {
    id?: number
    event_id: number
    user_id: number
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
  }

  export type Ind_event_registrationCreateOrConnectWithoutEvent_resultInput = {
    where: Ind_event_registrationWhereUniqueInput
    create: XOR<Ind_event_registrationCreateWithoutEvent_resultInput, Ind_event_registrationUncheckedCreateWithoutEvent_resultInput>
  }

  export type Ind_event_registrationCreateManyEvent_resultInputEnvelope = {
    data: Ind_event_registrationCreateManyEvent_resultInput | Ind_event_registrationCreateManyEvent_resultInput[]
  }

  export type Team_event_registrationCreateWithoutEvent_resultInput = {
    member_user_ids?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
    temple: Mst_templeCreateNestedOneWithoutTeam_registrationsInput
    event: Mst_eventCreateNestedOneWithoutTeam_registrationsInput
  }

  export type Team_event_registrationUncheckedCreateWithoutEvent_resultInput = {
    id?: number
    temple_id: number
    member_user_ids?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    event_id: number
    status?: $Enums.RegistrationStatus
  }

  export type Team_event_registrationCreateOrConnectWithoutEvent_resultInput = {
    where: Team_event_registrationWhereUniqueInput
    create: XOR<Team_event_registrationCreateWithoutEvent_resultInput, Team_event_registrationUncheckedCreateWithoutEvent_resultInput>
  }

  export type Team_event_registrationCreateManyEvent_resultInputEnvelope = {
    data: Team_event_registrationCreateManyEvent_resultInput | Team_event_registrationCreateManyEvent_resultInput[]
  }

  export type Mst_event_typeUpsertWithoutResultsInput = {
    update: XOR<Mst_event_typeUpdateWithoutResultsInput, Mst_event_typeUncheckedUpdateWithoutResultsInput>
    create: XOR<Mst_event_typeCreateWithoutResultsInput, Mst_event_typeUncheckedCreateWithoutResultsInput>
    where?: Mst_event_typeWhereInput
  }

  export type Mst_event_typeUpdateToOneWithWhereWithoutResultsInput = {
    where?: Mst_event_typeWhereInput
    data: XOR<Mst_event_typeUpdateWithoutResultsInput, Mst_event_typeUncheckedUpdateWithoutResultsInput>
  }

  export type Mst_event_typeUpdateWithoutResultsInput = {
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumEventTypeFieldUpdateOperationsInput | $Enums.EventType
    participant_count?: IntFieldUpdateOperationsInput | number
    events?: Mst_eventUpdateManyWithoutEvent_typeNestedInput
  }

  export type Mst_event_typeUncheckedUpdateWithoutResultsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumEventTypeFieldUpdateOperationsInput | $Enums.EventType
    participant_count?: IntFieldUpdateOperationsInput | number
    events?: Mst_eventUncheckedUpdateManyWithoutEvent_typeNestedInput
  }

  export type Ind_event_registrationUpsertWithWhereUniqueWithoutEvent_resultInput = {
    where: Ind_event_registrationWhereUniqueInput
    update: XOR<Ind_event_registrationUpdateWithoutEvent_resultInput, Ind_event_registrationUncheckedUpdateWithoutEvent_resultInput>
    create: XOR<Ind_event_registrationCreateWithoutEvent_resultInput, Ind_event_registrationUncheckedCreateWithoutEvent_resultInput>
  }

  export type Ind_event_registrationUpdateWithWhereUniqueWithoutEvent_resultInput = {
    where: Ind_event_registrationWhereUniqueInput
    data: XOR<Ind_event_registrationUpdateWithoutEvent_resultInput, Ind_event_registrationUncheckedUpdateWithoutEvent_resultInput>
  }

  export type Ind_event_registrationUpdateManyWithWhereWithoutEvent_resultInput = {
    where: Ind_event_registrationScalarWhereInput
    data: XOR<Ind_event_registrationUpdateManyMutationInput, Ind_event_registrationUncheckedUpdateManyWithoutEvent_resultInput>
  }

  export type Team_event_registrationUpsertWithWhereUniqueWithoutEvent_resultInput = {
    where: Team_event_registrationWhereUniqueInput
    update: XOR<Team_event_registrationUpdateWithoutEvent_resultInput, Team_event_registrationUncheckedUpdateWithoutEvent_resultInput>
    create: XOR<Team_event_registrationCreateWithoutEvent_resultInput, Team_event_registrationUncheckedCreateWithoutEvent_resultInput>
  }

  export type Team_event_registrationUpdateWithWhereUniqueWithoutEvent_resultInput = {
    where: Team_event_registrationWhereUniqueInput
    data: XOR<Team_event_registrationUpdateWithoutEvent_resultInput, Team_event_registrationUncheckedUpdateWithoutEvent_resultInput>
  }

  export type Team_event_registrationUpdateManyWithWhereWithoutEvent_resultInput = {
    where: Team_event_registrationScalarWhereInput
    data: XOR<Team_event_registrationUpdateManyMutationInput, Team_event_registrationUncheckedUpdateManyWithoutEvent_resultInput>
  }

  export type Mst_eventCreateWithoutEvent_typeInput = {
    name: string
    gender: $Enums.Gender
    is_deleted?: boolean
    is_closed?: boolean
    age_category: Mst_age_categoryCreateNestedOneWithoutEventsInput
    registrations?: Ind_event_registrationCreateNestedManyWithoutEventInput
    team_registrations?: Team_event_registrationCreateNestedManyWithoutEventInput
    schedules?: event_scheduleCreateNestedManyWithoutEventInput
  }

  export type Mst_eventUncheckedCreateWithoutEvent_typeInput = {
    id?: number
    name: string
    age_category_id: number
    gender: $Enums.Gender
    is_deleted?: boolean
    is_closed?: boolean
    registrations?: Ind_event_registrationUncheckedCreateNestedManyWithoutEventInput
    team_registrations?: Team_event_registrationUncheckedCreateNestedManyWithoutEventInput
    schedules?: event_scheduleUncheckedCreateNestedManyWithoutEventInput
  }

  export type Mst_eventCreateOrConnectWithoutEvent_typeInput = {
    where: Mst_eventWhereUniqueInput
    create: XOR<Mst_eventCreateWithoutEvent_typeInput, Mst_eventUncheckedCreateWithoutEvent_typeInput>
  }

  export type Mst_eventCreateManyEvent_typeInputEnvelope = {
    data: Mst_eventCreateManyEvent_typeInput | Mst_eventCreateManyEvent_typeInput[]
  }

  export type Mst_event_resultCreateWithoutEvent_typeInput = {
    rank: $Enums.Rank
    points: number
    ind_event_registrations?: Ind_event_registrationCreateNestedManyWithoutEvent_resultInput
    team_event_registrations?: Team_event_registrationCreateNestedManyWithoutEvent_resultInput
  }

  export type Mst_event_resultUncheckedCreateWithoutEvent_typeInput = {
    id?: number
    rank: $Enums.Rank
    points: number
    ind_event_registrations?: Ind_event_registrationUncheckedCreateNestedManyWithoutEvent_resultInput
    team_event_registrations?: Team_event_registrationUncheckedCreateNestedManyWithoutEvent_resultInput
  }

  export type Mst_event_resultCreateOrConnectWithoutEvent_typeInput = {
    where: Mst_event_resultWhereUniqueInput
    create: XOR<Mst_event_resultCreateWithoutEvent_typeInput, Mst_event_resultUncheckedCreateWithoutEvent_typeInput>
  }

  export type Mst_event_resultCreateManyEvent_typeInputEnvelope = {
    data: Mst_event_resultCreateManyEvent_typeInput | Mst_event_resultCreateManyEvent_typeInput[]
  }

  export type Mst_eventUpsertWithWhereUniqueWithoutEvent_typeInput = {
    where: Mst_eventWhereUniqueInput
    update: XOR<Mst_eventUpdateWithoutEvent_typeInput, Mst_eventUncheckedUpdateWithoutEvent_typeInput>
    create: XOR<Mst_eventCreateWithoutEvent_typeInput, Mst_eventUncheckedCreateWithoutEvent_typeInput>
  }

  export type Mst_eventUpdateWithWhereUniqueWithoutEvent_typeInput = {
    where: Mst_eventWhereUniqueInput
    data: XOR<Mst_eventUpdateWithoutEvent_typeInput, Mst_eventUncheckedUpdateWithoutEvent_typeInput>
  }

  export type Mst_eventUpdateManyWithWhereWithoutEvent_typeInput = {
    where: Mst_eventScalarWhereInput
    data: XOR<Mst_eventUpdateManyMutationInput, Mst_eventUncheckedUpdateManyWithoutEvent_typeInput>
  }

  export type Mst_event_resultUpsertWithWhereUniqueWithoutEvent_typeInput = {
    where: Mst_event_resultWhereUniqueInput
    update: XOR<Mst_event_resultUpdateWithoutEvent_typeInput, Mst_event_resultUncheckedUpdateWithoutEvent_typeInput>
    create: XOR<Mst_event_resultCreateWithoutEvent_typeInput, Mst_event_resultUncheckedCreateWithoutEvent_typeInput>
  }

  export type Mst_event_resultUpdateWithWhereUniqueWithoutEvent_typeInput = {
    where: Mst_event_resultWhereUniqueInput
    data: XOR<Mst_event_resultUpdateWithoutEvent_typeInput, Mst_event_resultUncheckedUpdateWithoutEvent_typeInput>
  }

  export type Mst_event_resultUpdateManyWithWhereWithoutEvent_typeInput = {
    where: Mst_event_resultScalarWhereInput
    data: XOR<Mst_event_resultUpdateManyMutationInput, Mst_event_resultUncheckedUpdateManyWithoutEvent_typeInput>
  }

  export type Mst_event_resultScalarWhereInput = {
    AND?: Mst_event_resultScalarWhereInput | Mst_event_resultScalarWhereInput[]
    OR?: Mst_event_resultScalarWhereInput[]
    NOT?: Mst_event_resultScalarWhereInput | Mst_event_resultScalarWhereInput[]
    id?: IntFilter<"Mst_event_result"> | number
    event_type_id?: IntFilter<"Mst_event_result"> | number
    rank?: EnumRankFilter<"Mst_event_result"> | $Enums.Rank
    points?: IntFilter<"Mst_event_result"> | number
  }

  export type ProfileCreateWithoutRoleInput = {
    first_name: string
    last_name?: string | null
    email?: string | null
    phone?: string | null
    aadhar_number?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    is_verified?: boolean
    dob: Date | string
    gender: $Enums.Gender
    user?: UserCreateNestedOneWithoutProfileInput
    temple?: Mst_templeCreateNestedOneWithoutProfilesInput
    registrations?: Ind_event_registrationCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateWithoutRoleInput = {
    id?: number
    user_id?: number | null
    first_name: string
    last_name?: string | null
    email?: string | null
    phone?: string | null
    aadhar_number?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    is_verified?: boolean
    temple_id?: number | null
    dob: Date | string
    gender: $Enums.Gender
    registrations?: Ind_event_registrationUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileCreateOrConnectWithoutRoleInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutRoleInput, ProfileUncheckedCreateWithoutRoleInput>
  }

  export type ProfileCreateManyRoleInputEnvelope = {
    data: ProfileCreateManyRoleInput | ProfileCreateManyRoleInput[]
  }

  export type User_roleCreateWithoutRoleInput = {
    user: UserCreateNestedOneWithoutUser_rolesInput
  }

  export type User_roleUncheckedCreateWithoutRoleInput = {
    id?: number
    user_id: number
  }

  export type User_roleCreateOrConnectWithoutRoleInput = {
    where: User_roleWhereUniqueInput
    create: XOR<User_roleCreateWithoutRoleInput, User_roleUncheckedCreateWithoutRoleInput>
  }

  export type User_roleCreateManyRoleInputEnvelope = {
    data: User_roleCreateManyRoleInput | User_roleCreateManyRoleInput[]
  }

  export type ProfileUpsertWithWhereUniqueWithoutRoleInput = {
    where: ProfileWhereUniqueInput
    update: XOR<ProfileUpdateWithoutRoleInput, ProfileUncheckedUpdateWithoutRoleInput>
    create: XOR<ProfileCreateWithoutRoleInput, ProfileUncheckedCreateWithoutRoleInput>
  }

  export type ProfileUpdateWithWhereUniqueWithoutRoleInput = {
    where: ProfileWhereUniqueInput
    data: XOR<ProfileUpdateWithoutRoleInput, ProfileUncheckedUpdateWithoutRoleInput>
  }

  export type ProfileUpdateManyWithWhereWithoutRoleInput = {
    where: ProfileScalarWhereInput
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyWithoutRoleInput>
  }

  export type ProfileScalarWhereInput = {
    AND?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
    OR?: ProfileScalarWhereInput[]
    NOT?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
    id?: IntFilter<"Profile"> | number
    user_id?: IntNullableFilter<"Profile"> | number | null
    first_name?: StringFilter<"Profile"> | string
    last_name?: StringNullableFilter<"Profile"> | string | null
    email?: StringNullableFilter<"Profile"> | string | null
    phone?: StringNullableFilter<"Profile"> | string | null
    aadhar_number?: StringNullableFilter<"Profile"> | string | null
    created_at?: DateTimeFilter<"Profile"> | Date | string
    modified_at?: DateTimeFilter<"Profile"> | Date | string
    is_deleted?: BoolFilter<"Profile"> | boolean
    is_verified?: BoolFilter<"Profile"> | boolean
    temple_id?: IntNullableFilter<"Profile"> | number | null
    dob?: DateTimeFilter<"Profile"> | Date | string
    gender?: EnumGenderFilter<"Profile"> | $Enums.Gender
    role_id?: IntFilter<"Profile"> | number
  }

  export type User_roleUpsertWithWhereUniqueWithoutRoleInput = {
    where: User_roleWhereUniqueInput
    update: XOR<User_roleUpdateWithoutRoleInput, User_roleUncheckedUpdateWithoutRoleInput>
    create: XOR<User_roleCreateWithoutRoleInput, User_roleUncheckedCreateWithoutRoleInput>
  }

  export type User_roleUpdateWithWhereUniqueWithoutRoleInput = {
    where: User_roleWhereUniqueInput
    data: XOR<User_roleUpdateWithoutRoleInput, User_roleUncheckedUpdateWithoutRoleInput>
  }

  export type User_roleUpdateManyWithWhereWithoutRoleInput = {
    where: User_roleScalarWhereInput
    data: XOR<User_roleUpdateManyMutationInput, User_roleUncheckedUpdateManyWithoutRoleInput>
  }

  export type User_roleScalarWhereInput = {
    AND?: User_roleScalarWhereInput | User_roleScalarWhereInput[]
    OR?: User_roleScalarWhereInput[]
    NOT?: User_roleScalarWhereInput | User_roleScalarWhereInput[]
    id?: IntFilter<"User_role"> | number
    user_id?: IntFilter<"User_role"> | number
    role_id?: IntFilter<"User_role"> | number
  }

  export type ChampionCreateWithoutTempleInput = {
    year: number
    created_at?: Date | string
    modified_at?: Date | string
    host_temple: Mst_templeCreateNestedOneWithoutHost_championsInput
  }

  export type ChampionUncheckedCreateWithoutTempleInput = {
    id?: number
    year: number
    host_temple_id: number
    created_at?: Date | string
    modified_at?: Date | string
  }

  export type ChampionCreateOrConnectWithoutTempleInput = {
    where: ChampionWhereUniqueInput
    create: XOR<ChampionCreateWithoutTempleInput, ChampionUncheckedCreateWithoutTempleInput>
  }

  export type ChampionCreateManyTempleInputEnvelope = {
    data: ChampionCreateManyTempleInput | ChampionCreateManyTempleInput[]
  }

  export type ChampionCreateWithoutHost_templeInput = {
    year: number
    created_at?: Date | string
    modified_at?: Date | string
    temple: Mst_templeCreateNestedOneWithoutChampionsInput
  }

  export type ChampionUncheckedCreateWithoutHost_templeInput = {
    id?: number
    temple_id: number
    year: number
    created_at?: Date | string
    modified_at?: Date | string
  }

  export type ChampionCreateOrConnectWithoutHost_templeInput = {
    where: ChampionWhereUniqueInput
    create: XOR<ChampionCreateWithoutHost_templeInput, ChampionUncheckedCreateWithoutHost_templeInput>
  }

  export type ChampionCreateManyHost_templeInputEnvelope = {
    data: ChampionCreateManyHost_templeInput | ChampionCreateManyHost_templeInput[]
  }

  export type ProfileCreateWithoutTempleInput = {
    first_name: string
    last_name?: string | null
    email?: string | null
    phone?: string | null
    aadhar_number?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    is_verified?: boolean
    dob: Date | string
    gender: $Enums.Gender
    user?: UserCreateNestedOneWithoutProfileInput
    role?: Mst_roleCreateNestedOneWithoutProfilesInput
    registrations?: Ind_event_registrationCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateWithoutTempleInput = {
    id?: number
    user_id?: number | null
    first_name: string
    last_name?: string | null
    email?: string | null
    phone?: string | null
    aadhar_number?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    is_verified?: boolean
    dob: Date | string
    gender: $Enums.Gender
    role_id?: number
    registrations?: Ind_event_registrationUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileCreateOrConnectWithoutTempleInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutTempleInput, ProfileUncheckedCreateWithoutTempleInput>
  }

  export type ProfileCreateManyTempleInputEnvelope = {
    data: ProfileCreateManyTempleInput | ProfileCreateManyTempleInput[]
  }

  export type Team_event_registrationCreateWithoutTempleInput = {
    member_user_ids?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
    event_result?: Mst_event_resultCreateNestedOneWithoutTeam_event_registrationsInput
    event: Mst_eventCreateNestedOneWithoutTeam_registrationsInput
  }

  export type Team_event_registrationUncheckedCreateWithoutTempleInput = {
    id?: number
    event_result_id?: number | null
    member_user_ids?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    event_id: number
    status?: $Enums.RegistrationStatus
  }

  export type Team_event_registrationCreateOrConnectWithoutTempleInput = {
    where: Team_event_registrationWhereUniqueInput
    create: XOR<Team_event_registrationCreateWithoutTempleInput, Team_event_registrationUncheckedCreateWithoutTempleInput>
  }

  export type Team_event_registrationCreateManyTempleInputEnvelope = {
    data: Team_event_registrationCreateManyTempleInput | Team_event_registrationCreateManyTempleInput[]
  }

  export type ChampionUpsertWithWhereUniqueWithoutTempleInput = {
    where: ChampionWhereUniqueInput
    update: XOR<ChampionUpdateWithoutTempleInput, ChampionUncheckedUpdateWithoutTempleInput>
    create: XOR<ChampionCreateWithoutTempleInput, ChampionUncheckedCreateWithoutTempleInput>
  }

  export type ChampionUpdateWithWhereUniqueWithoutTempleInput = {
    where: ChampionWhereUniqueInput
    data: XOR<ChampionUpdateWithoutTempleInput, ChampionUncheckedUpdateWithoutTempleInput>
  }

  export type ChampionUpdateManyWithWhereWithoutTempleInput = {
    where: ChampionScalarWhereInput
    data: XOR<ChampionUpdateManyMutationInput, ChampionUncheckedUpdateManyWithoutTempleInput>
  }

  export type ChampionScalarWhereInput = {
    AND?: ChampionScalarWhereInput | ChampionScalarWhereInput[]
    OR?: ChampionScalarWhereInput[]
    NOT?: ChampionScalarWhereInput | ChampionScalarWhereInput[]
    id?: IntFilter<"Champion"> | number
    temple_id?: IntFilter<"Champion"> | number
    year?: IntFilter<"Champion"> | number
    host_temple_id?: IntFilter<"Champion"> | number
    created_at?: DateTimeFilter<"Champion"> | Date | string
    modified_at?: DateTimeFilter<"Champion"> | Date | string
  }

  export type ChampionUpsertWithWhereUniqueWithoutHost_templeInput = {
    where: ChampionWhereUniqueInput
    update: XOR<ChampionUpdateWithoutHost_templeInput, ChampionUncheckedUpdateWithoutHost_templeInput>
    create: XOR<ChampionCreateWithoutHost_templeInput, ChampionUncheckedCreateWithoutHost_templeInput>
  }

  export type ChampionUpdateWithWhereUniqueWithoutHost_templeInput = {
    where: ChampionWhereUniqueInput
    data: XOR<ChampionUpdateWithoutHost_templeInput, ChampionUncheckedUpdateWithoutHost_templeInput>
  }

  export type ChampionUpdateManyWithWhereWithoutHost_templeInput = {
    where: ChampionScalarWhereInput
    data: XOR<ChampionUpdateManyMutationInput, ChampionUncheckedUpdateManyWithoutHost_templeInput>
  }

  export type ProfileUpsertWithWhereUniqueWithoutTempleInput = {
    where: ProfileWhereUniqueInput
    update: XOR<ProfileUpdateWithoutTempleInput, ProfileUncheckedUpdateWithoutTempleInput>
    create: XOR<ProfileCreateWithoutTempleInput, ProfileUncheckedCreateWithoutTempleInput>
  }

  export type ProfileUpdateWithWhereUniqueWithoutTempleInput = {
    where: ProfileWhereUniqueInput
    data: XOR<ProfileUpdateWithoutTempleInput, ProfileUncheckedUpdateWithoutTempleInput>
  }

  export type ProfileUpdateManyWithWhereWithoutTempleInput = {
    where: ProfileScalarWhereInput
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyWithoutTempleInput>
  }

  export type Team_event_registrationUpsertWithWhereUniqueWithoutTempleInput = {
    where: Team_event_registrationWhereUniqueInput
    update: XOR<Team_event_registrationUpdateWithoutTempleInput, Team_event_registrationUncheckedUpdateWithoutTempleInput>
    create: XOR<Team_event_registrationCreateWithoutTempleInput, Team_event_registrationUncheckedCreateWithoutTempleInput>
  }

  export type Team_event_registrationUpdateWithWhereUniqueWithoutTempleInput = {
    where: Team_event_registrationWhereUniqueInput
    data: XOR<Team_event_registrationUpdateWithoutTempleInput, Team_event_registrationUncheckedUpdateWithoutTempleInput>
  }

  export type Team_event_registrationUpdateManyWithWhereWithoutTempleInput = {
    where: Team_event_registrationScalarWhereInput
    data: XOR<Team_event_registrationUpdateManyMutationInput, Team_event_registrationUncheckedUpdateManyWithoutTempleInput>
  }

  export type UserCreateWithoutProfileInput = {
    username: string
    password: string
    email?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    user_roles?: User_roleCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutProfileInput = {
    id?: number
    username: string
    password: string
    email?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    user_roles?: User_roleUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutProfileInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
  }

  export type Mst_templeCreateWithoutProfilesInput = {
    code: string
    name: string
    address?: string | null
    contact_name?: string | null
    contact_phone?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    modified_at?: Date | string
    champions?: ChampionCreateNestedManyWithoutTempleInput
    host_champions?: ChampionCreateNestedManyWithoutHost_templeInput
    team_registrations?: Team_event_registrationCreateNestedManyWithoutTempleInput
  }

  export type Mst_templeUncheckedCreateWithoutProfilesInput = {
    id?: number
    code: string
    name: string
    address?: string | null
    contact_name?: string | null
    contact_phone?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    modified_at?: Date | string
    champions?: ChampionUncheckedCreateNestedManyWithoutTempleInput
    host_champions?: ChampionUncheckedCreateNestedManyWithoutHost_templeInput
    team_registrations?: Team_event_registrationUncheckedCreateNestedManyWithoutTempleInput
  }

  export type Mst_templeCreateOrConnectWithoutProfilesInput = {
    where: Mst_templeWhereUniqueInput
    create: XOR<Mst_templeCreateWithoutProfilesInput, Mst_templeUncheckedCreateWithoutProfilesInput>
  }

  export type Mst_roleCreateWithoutProfilesInput = {
    name: string
    user_roles?: User_roleCreateNestedManyWithoutRoleInput
  }

  export type Mst_roleUncheckedCreateWithoutProfilesInput = {
    id?: number
    name: string
    user_roles?: User_roleUncheckedCreateNestedManyWithoutRoleInput
  }

  export type Mst_roleCreateOrConnectWithoutProfilesInput = {
    where: Mst_roleWhereUniqueInput
    create: XOR<Mst_roleCreateWithoutProfilesInput, Mst_roleUncheckedCreateWithoutProfilesInput>
  }

  export type Ind_event_registrationCreateWithoutUserInput = {
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
    event: Mst_eventCreateNestedOneWithoutRegistrationsInput
    event_result?: Mst_event_resultCreateNestedOneWithoutInd_event_registrationsInput
  }

  export type Ind_event_registrationUncheckedCreateWithoutUserInput = {
    id?: number
    event_id: number
    event_result_id?: number | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
  }

  export type Ind_event_registrationCreateOrConnectWithoutUserInput = {
    where: Ind_event_registrationWhereUniqueInput
    create: XOR<Ind_event_registrationCreateWithoutUserInput, Ind_event_registrationUncheckedCreateWithoutUserInput>
  }

  export type Ind_event_registrationCreateManyUserInputEnvelope = {
    data: Ind_event_registrationCreateManyUserInput | Ind_event_registrationCreateManyUserInput[]
  }

  export type UserUpsertWithoutProfileInput = {
    update: XOR<UserUpdateWithoutProfileInput, UserUncheckedUpdateWithoutProfileInput>
    create: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProfileInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProfileInput, UserUncheckedUpdateWithoutProfileInput>
  }

  export type UserUpdateWithoutProfileInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_roles?: User_roleUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_roles?: User_roleUncheckedUpdateManyWithoutUserNestedInput
  }

  export type Mst_templeUpsertWithoutProfilesInput = {
    update: XOR<Mst_templeUpdateWithoutProfilesInput, Mst_templeUncheckedUpdateWithoutProfilesInput>
    create: XOR<Mst_templeCreateWithoutProfilesInput, Mst_templeUncheckedCreateWithoutProfilesInput>
    where?: Mst_templeWhereInput
  }

  export type Mst_templeUpdateToOneWithWhereWithoutProfilesInput = {
    where?: Mst_templeWhereInput
    data: XOR<Mst_templeUpdateWithoutProfilesInput, Mst_templeUncheckedUpdateWithoutProfilesInput>
  }

  export type Mst_templeUpdateWithoutProfilesInput = {
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    champions?: ChampionUpdateManyWithoutTempleNestedInput
    host_champions?: ChampionUpdateManyWithoutHost_templeNestedInput
    team_registrations?: Team_event_registrationUpdateManyWithoutTempleNestedInput
  }

  export type Mst_templeUncheckedUpdateWithoutProfilesInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    champions?: ChampionUncheckedUpdateManyWithoutTempleNestedInput
    host_champions?: ChampionUncheckedUpdateManyWithoutHost_templeNestedInput
    team_registrations?: Team_event_registrationUncheckedUpdateManyWithoutTempleNestedInput
  }

  export type Mst_roleUpsertWithoutProfilesInput = {
    update: XOR<Mst_roleUpdateWithoutProfilesInput, Mst_roleUncheckedUpdateWithoutProfilesInput>
    create: XOR<Mst_roleCreateWithoutProfilesInput, Mst_roleUncheckedCreateWithoutProfilesInput>
    where?: Mst_roleWhereInput
  }

  export type Mst_roleUpdateToOneWithWhereWithoutProfilesInput = {
    where?: Mst_roleWhereInput
    data: XOR<Mst_roleUpdateWithoutProfilesInput, Mst_roleUncheckedUpdateWithoutProfilesInput>
  }

  export type Mst_roleUpdateWithoutProfilesInput = {
    name?: StringFieldUpdateOperationsInput | string
    user_roles?: User_roleUpdateManyWithoutRoleNestedInput
  }

  export type Mst_roleUncheckedUpdateWithoutProfilesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    user_roles?: User_roleUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type Ind_event_registrationUpsertWithWhereUniqueWithoutUserInput = {
    where: Ind_event_registrationWhereUniqueInput
    update: XOR<Ind_event_registrationUpdateWithoutUserInput, Ind_event_registrationUncheckedUpdateWithoutUserInput>
    create: XOR<Ind_event_registrationCreateWithoutUserInput, Ind_event_registrationUncheckedCreateWithoutUserInput>
  }

  export type Ind_event_registrationUpdateWithWhereUniqueWithoutUserInput = {
    where: Ind_event_registrationWhereUniqueInput
    data: XOR<Ind_event_registrationUpdateWithoutUserInput, Ind_event_registrationUncheckedUpdateWithoutUserInput>
  }

  export type Ind_event_registrationUpdateManyWithWhereWithoutUserInput = {
    where: Ind_event_registrationScalarWhereInput
    data: XOR<Ind_event_registrationUpdateManyMutationInput, Ind_event_registrationUncheckedUpdateManyWithoutUserInput>
  }

  export type Mst_templeCreateWithoutTeam_registrationsInput = {
    code: string
    name: string
    address?: string | null
    contact_name?: string | null
    contact_phone?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    modified_at?: Date | string
    champions?: ChampionCreateNestedManyWithoutTempleInput
    host_champions?: ChampionCreateNestedManyWithoutHost_templeInput
    profiles?: ProfileCreateNestedManyWithoutTempleInput
  }

  export type Mst_templeUncheckedCreateWithoutTeam_registrationsInput = {
    id?: number
    code: string
    name: string
    address?: string | null
    contact_name?: string | null
    contact_phone?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    modified_at?: Date | string
    champions?: ChampionUncheckedCreateNestedManyWithoutTempleInput
    host_champions?: ChampionUncheckedCreateNestedManyWithoutHost_templeInput
    profiles?: ProfileUncheckedCreateNestedManyWithoutTempleInput
  }

  export type Mst_templeCreateOrConnectWithoutTeam_registrationsInput = {
    where: Mst_templeWhereUniqueInput
    create: XOR<Mst_templeCreateWithoutTeam_registrationsInput, Mst_templeUncheckedCreateWithoutTeam_registrationsInput>
  }

  export type Mst_event_resultCreateWithoutTeam_event_registrationsInput = {
    rank: $Enums.Rank
    points: number
    event_type: Mst_event_typeCreateNestedOneWithoutResultsInput
    ind_event_registrations?: Ind_event_registrationCreateNestedManyWithoutEvent_resultInput
  }

  export type Mst_event_resultUncheckedCreateWithoutTeam_event_registrationsInput = {
    id?: number
    event_type_id: number
    rank: $Enums.Rank
    points: number
    ind_event_registrations?: Ind_event_registrationUncheckedCreateNestedManyWithoutEvent_resultInput
  }

  export type Mst_event_resultCreateOrConnectWithoutTeam_event_registrationsInput = {
    where: Mst_event_resultWhereUniqueInput
    create: XOR<Mst_event_resultCreateWithoutTeam_event_registrationsInput, Mst_event_resultUncheckedCreateWithoutTeam_event_registrationsInput>
  }

  export type Mst_eventCreateWithoutTeam_registrationsInput = {
    name: string
    gender: $Enums.Gender
    is_deleted?: boolean
    is_closed?: boolean
    event_type: Mst_event_typeCreateNestedOneWithoutEventsInput
    age_category: Mst_age_categoryCreateNestedOneWithoutEventsInput
    registrations?: Ind_event_registrationCreateNestedManyWithoutEventInput
    schedules?: event_scheduleCreateNestedManyWithoutEventInput
  }

  export type Mst_eventUncheckedCreateWithoutTeam_registrationsInput = {
    id?: number
    name: string
    event_type_id: number
    age_category_id: number
    gender: $Enums.Gender
    is_deleted?: boolean
    is_closed?: boolean
    registrations?: Ind_event_registrationUncheckedCreateNestedManyWithoutEventInput
    schedules?: event_scheduleUncheckedCreateNestedManyWithoutEventInput
  }

  export type Mst_eventCreateOrConnectWithoutTeam_registrationsInput = {
    where: Mst_eventWhereUniqueInput
    create: XOR<Mst_eventCreateWithoutTeam_registrationsInput, Mst_eventUncheckedCreateWithoutTeam_registrationsInput>
  }

  export type Mst_templeUpsertWithoutTeam_registrationsInput = {
    update: XOR<Mst_templeUpdateWithoutTeam_registrationsInput, Mst_templeUncheckedUpdateWithoutTeam_registrationsInput>
    create: XOR<Mst_templeCreateWithoutTeam_registrationsInput, Mst_templeUncheckedCreateWithoutTeam_registrationsInput>
    where?: Mst_templeWhereInput
  }

  export type Mst_templeUpdateToOneWithWhereWithoutTeam_registrationsInput = {
    where?: Mst_templeWhereInput
    data: XOR<Mst_templeUpdateWithoutTeam_registrationsInput, Mst_templeUncheckedUpdateWithoutTeam_registrationsInput>
  }

  export type Mst_templeUpdateWithoutTeam_registrationsInput = {
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    champions?: ChampionUpdateManyWithoutTempleNestedInput
    host_champions?: ChampionUpdateManyWithoutHost_templeNestedInput
    profiles?: ProfileUpdateManyWithoutTempleNestedInput
  }

  export type Mst_templeUncheckedUpdateWithoutTeam_registrationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    contact_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    champions?: ChampionUncheckedUpdateManyWithoutTempleNestedInput
    host_champions?: ChampionUncheckedUpdateManyWithoutHost_templeNestedInput
    profiles?: ProfileUncheckedUpdateManyWithoutTempleNestedInput
  }

  export type Mst_event_resultUpsertWithoutTeam_event_registrationsInput = {
    update: XOR<Mst_event_resultUpdateWithoutTeam_event_registrationsInput, Mst_event_resultUncheckedUpdateWithoutTeam_event_registrationsInput>
    create: XOR<Mst_event_resultCreateWithoutTeam_event_registrationsInput, Mst_event_resultUncheckedCreateWithoutTeam_event_registrationsInput>
    where?: Mst_event_resultWhereInput
  }

  export type Mst_event_resultUpdateToOneWithWhereWithoutTeam_event_registrationsInput = {
    where?: Mst_event_resultWhereInput
    data: XOR<Mst_event_resultUpdateWithoutTeam_event_registrationsInput, Mst_event_resultUncheckedUpdateWithoutTeam_event_registrationsInput>
  }

  export type Mst_event_resultUpdateWithoutTeam_event_registrationsInput = {
    rank?: EnumRankFieldUpdateOperationsInput | $Enums.Rank
    points?: IntFieldUpdateOperationsInput | number
    event_type?: Mst_event_typeUpdateOneRequiredWithoutResultsNestedInput
    ind_event_registrations?: Ind_event_registrationUpdateManyWithoutEvent_resultNestedInput
  }

  export type Mst_event_resultUncheckedUpdateWithoutTeam_event_registrationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    event_type_id?: IntFieldUpdateOperationsInput | number
    rank?: EnumRankFieldUpdateOperationsInput | $Enums.Rank
    points?: IntFieldUpdateOperationsInput | number
    ind_event_registrations?: Ind_event_registrationUncheckedUpdateManyWithoutEvent_resultNestedInput
  }

  export type Mst_eventUpsertWithoutTeam_registrationsInput = {
    update: XOR<Mst_eventUpdateWithoutTeam_registrationsInput, Mst_eventUncheckedUpdateWithoutTeam_registrationsInput>
    create: XOR<Mst_eventCreateWithoutTeam_registrationsInput, Mst_eventUncheckedCreateWithoutTeam_registrationsInput>
    where?: Mst_eventWhereInput
  }

  export type Mst_eventUpdateToOneWithWhereWithoutTeam_registrationsInput = {
    where?: Mst_eventWhereInput
    data: XOR<Mst_eventUpdateWithoutTeam_registrationsInput, Mst_eventUncheckedUpdateWithoutTeam_registrationsInput>
  }

  export type Mst_eventUpdateWithoutTeam_registrationsInput = {
    name?: StringFieldUpdateOperationsInput | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
    event_type?: Mst_event_typeUpdateOneRequiredWithoutEventsNestedInput
    age_category?: Mst_age_categoryUpdateOneRequiredWithoutEventsNestedInput
    registrations?: Ind_event_registrationUpdateManyWithoutEventNestedInput
    schedules?: event_scheduleUpdateManyWithoutEventNestedInput
  }

  export type Mst_eventUncheckedUpdateWithoutTeam_registrationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    event_type_id?: IntFieldUpdateOperationsInput | number
    age_category_id?: IntFieldUpdateOperationsInput | number
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
    registrations?: Ind_event_registrationUncheckedUpdateManyWithoutEventNestedInput
    schedules?: event_scheduleUncheckedUpdateManyWithoutEventNestedInput
  }

  export type ProfileCreateWithoutUserInput = {
    first_name: string
    last_name?: string | null
    email?: string | null
    phone?: string | null
    aadhar_number?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    is_verified?: boolean
    dob: Date | string
    gender: $Enums.Gender
    temple?: Mst_templeCreateNestedOneWithoutProfilesInput
    role?: Mst_roleCreateNestedOneWithoutProfilesInput
    registrations?: Ind_event_registrationCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateWithoutUserInput = {
    id?: number
    first_name: string
    last_name?: string | null
    email?: string | null
    phone?: string | null
    aadhar_number?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    is_verified?: boolean
    temple_id?: number | null
    dob: Date | string
    gender: $Enums.Gender
    role_id?: number
    registrations?: Ind_event_registrationUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileCreateOrConnectWithoutUserInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
  }

  export type User_roleCreateWithoutUserInput = {
    role: Mst_roleCreateNestedOneWithoutUser_rolesInput
  }

  export type User_roleUncheckedCreateWithoutUserInput = {
    id?: number
    role_id: number
  }

  export type User_roleCreateOrConnectWithoutUserInput = {
    where: User_roleWhereUniqueInput
    create: XOR<User_roleCreateWithoutUserInput, User_roleUncheckedCreateWithoutUserInput>
  }

  export type User_roleCreateManyUserInputEnvelope = {
    data: User_roleCreateManyUserInput | User_roleCreateManyUserInput[]
  }

  export type ProfileUpsertWithoutUserInput = {
    update: XOR<ProfileUpdateWithoutUserInput, ProfileUncheckedUpdateWithoutUserInput>
    create: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutUserInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutUserInput, ProfileUncheckedUpdateWithoutUserInput>
  }

  export type ProfileUpdateWithoutUserInput = {
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    dob?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    temple?: Mst_templeUpdateOneWithoutProfilesNestedInput
    role?: Mst_roleUpdateOneRequiredWithoutProfilesNestedInput
    registrations?: Ind_event_registrationUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    temple_id?: NullableIntFieldUpdateOperationsInput | number | null
    dob?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    role_id?: IntFieldUpdateOperationsInput | number
    registrations?: Ind_event_registrationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type User_roleUpsertWithWhereUniqueWithoutUserInput = {
    where: User_roleWhereUniqueInput
    update: XOR<User_roleUpdateWithoutUserInput, User_roleUncheckedUpdateWithoutUserInput>
    create: XOR<User_roleCreateWithoutUserInput, User_roleUncheckedCreateWithoutUserInput>
  }

  export type User_roleUpdateWithWhereUniqueWithoutUserInput = {
    where: User_roleWhereUniqueInput
    data: XOR<User_roleUpdateWithoutUserInput, User_roleUncheckedUpdateWithoutUserInput>
  }

  export type User_roleUpdateManyWithWhereWithoutUserInput = {
    where: User_roleScalarWhereInput
    data: XOR<User_roleUpdateManyMutationInput, User_roleUncheckedUpdateManyWithoutUserInput>
  }

  export type UserCreateWithoutUser_rolesInput = {
    username: string
    password: string
    email?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    profile?: ProfileCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUser_rolesInput = {
    id?: number
    username: string
    password: string
    email?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUser_rolesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUser_rolesInput, UserUncheckedCreateWithoutUser_rolesInput>
  }

  export type Mst_roleCreateWithoutUser_rolesInput = {
    name: string
    profiles?: ProfileCreateNestedManyWithoutRoleInput
  }

  export type Mst_roleUncheckedCreateWithoutUser_rolesInput = {
    id?: number
    name: string
    profiles?: ProfileUncheckedCreateNestedManyWithoutRoleInput
  }

  export type Mst_roleCreateOrConnectWithoutUser_rolesInput = {
    where: Mst_roleWhereUniqueInput
    create: XOR<Mst_roleCreateWithoutUser_rolesInput, Mst_roleUncheckedCreateWithoutUser_rolesInput>
  }

  export type UserUpsertWithoutUser_rolesInput = {
    update: XOR<UserUpdateWithoutUser_rolesInput, UserUncheckedUpdateWithoutUser_rolesInput>
    create: XOR<UserCreateWithoutUser_rolesInput, UserUncheckedCreateWithoutUser_rolesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUser_rolesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUser_rolesInput, UserUncheckedUpdateWithoutUser_rolesInput>
  }

  export type UserUpdateWithoutUser_rolesInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: ProfileUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUser_rolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
  }

  export type Mst_roleUpsertWithoutUser_rolesInput = {
    update: XOR<Mst_roleUpdateWithoutUser_rolesInput, Mst_roleUncheckedUpdateWithoutUser_rolesInput>
    create: XOR<Mst_roleCreateWithoutUser_rolesInput, Mst_roleUncheckedCreateWithoutUser_rolesInput>
    where?: Mst_roleWhereInput
  }

  export type Mst_roleUpdateToOneWithWhereWithoutUser_rolesInput = {
    where?: Mst_roleWhereInput
    data: XOR<Mst_roleUpdateWithoutUser_rolesInput, Mst_roleUncheckedUpdateWithoutUser_rolesInput>
  }

  export type Mst_roleUpdateWithoutUser_rolesInput = {
    name?: StringFieldUpdateOperationsInput | string
    profiles?: ProfileUpdateManyWithoutRoleNestedInput
  }

  export type Mst_roleUncheckedUpdateWithoutUser_rolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    profiles?: ProfileUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type Mst_eventCreateWithoutSchedulesInput = {
    name: string
    gender: $Enums.Gender
    is_deleted?: boolean
    is_closed?: boolean
    event_type: Mst_event_typeCreateNestedOneWithoutEventsInput
    age_category: Mst_age_categoryCreateNestedOneWithoutEventsInput
    registrations?: Ind_event_registrationCreateNestedManyWithoutEventInput
    team_registrations?: Team_event_registrationCreateNestedManyWithoutEventInput
  }

  export type Mst_eventUncheckedCreateWithoutSchedulesInput = {
    id?: number
    name: string
    event_type_id: number
    age_category_id: number
    gender: $Enums.Gender
    is_deleted?: boolean
    is_closed?: boolean
    registrations?: Ind_event_registrationUncheckedCreateNestedManyWithoutEventInput
    team_registrations?: Team_event_registrationUncheckedCreateNestedManyWithoutEventInput
  }

  export type Mst_eventCreateOrConnectWithoutSchedulesInput = {
    where: Mst_eventWhereUniqueInput
    create: XOR<Mst_eventCreateWithoutSchedulesInput, Mst_eventUncheckedCreateWithoutSchedulesInput>
  }

  export type Mst_eventUpsertWithoutSchedulesInput = {
    update: XOR<Mst_eventUpdateWithoutSchedulesInput, Mst_eventUncheckedUpdateWithoutSchedulesInput>
    create: XOR<Mst_eventCreateWithoutSchedulesInput, Mst_eventUncheckedCreateWithoutSchedulesInput>
    where?: Mst_eventWhereInput
  }

  export type Mst_eventUpdateToOneWithWhereWithoutSchedulesInput = {
    where?: Mst_eventWhereInput
    data: XOR<Mst_eventUpdateWithoutSchedulesInput, Mst_eventUncheckedUpdateWithoutSchedulesInput>
  }

  export type Mst_eventUpdateWithoutSchedulesInput = {
    name?: StringFieldUpdateOperationsInput | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
    event_type?: Mst_event_typeUpdateOneRequiredWithoutEventsNestedInput
    age_category?: Mst_age_categoryUpdateOneRequiredWithoutEventsNestedInput
    registrations?: Ind_event_registrationUpdateManyWithoutEventNestedInput
    team_registrations?: Team_event_registrationUpdateManyWithoutEventNestedInput
  }

  export type Mst_eventUncheckedUpdateWithoutSchedulesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    event_type_id?: IntFieldUpdateOperationsInput | number
    age_category_id?: IntFieldUpdateOperationsInput | number
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
    registrations?: Ind_event_registrationUncheckedUpdateManyWithoutEventNestedInput
    team_registrations?: Team_event_registrationUncheckedUpdateManyWithoutEventNestedInput
  }

  export type Mst_eventCreateManyAge_categoryInput = {
    id?: number
    name: string
    event_type_id: number
    gender: $Enums.Gender
    is_deleted?: boolean
    is_closed?: boolean
  }

  export type Mst_eventUpdateWithoutAge_categoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
    event_type?: Mst_event_typeUpdateOneRequiredWithoutEventsNestedInput
    registrations?: Ind_event_registrationUpdateManyWithoutEventNestedInput
    team_registrations?: Team_event_registrationUpdateManyWithoutEventNestedInput
    schedules?: event_scheduleUpdateManyWithoutEventNestedInput
  }

  export type Mst_eventUncheckedUpdateWithoutAge_categoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    event_type_id?: IntFieldUpdateOperationsInput | number
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
    registrations?: Ind_event_registrationUncheckedUpdateManyWithoutEventNestedInput
    team_registrations?: Team_event_registrationUncheckedUpdateManyWithoutEventNestedInput
    schedules?: event_scheduleUncheckedUpdateManyWithoutEventNestedInput
  }

  export type Mst_eventUncheckedUpdateManyWithoutAge_categoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    event_type_id?: IntFieldUpdateOperationsInput | number
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
  }

  export type Ind_event_registrationCreateManyEventInput = {
    id?: number
    user_id: number
    event_result_id?: number | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
  }

  export type Team_event_registrationCreateManyEventInput = {
    id?: number
    temple_id: number
    event_result_id?: number | null
    member_user_ids?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
  }

  export type event_scheduleCreateManyEventInput = {
    id?: number
    start_time: Date | string
    end_time: Date | string
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
  }

  export type Ind_event_registrationUpdateWithoutEventInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
    user?: ProfileUpdateOneRequiredWithoutRegistrationsNestedInput
    event_result?: Mst_event_resultUpdateOneWithoutInd_event_registrationsNestedInput
  }

  export type Ind_event_registrationUncheckedUpdateWithoutEventInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    event_result_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type Ind_event_registrationUncheckedUpdateManyWithoutEventInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    event_result_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type Team_event_registrationUpdateWithoutEventInput = {
    member_user_ids?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
    temple?: Mst_templeUpdateOneRequiredWithoutTeam_registrationsNestedInput
    event_result?: Mst_event_resultUpdateOneWithoutTeam_event_registrationsNestedInput
  }

  export type Team_event_registrationUncheckedUpdateWithoutEventInput = {
    id?: IntFieldUpdateOperationsInput | number
    temple_id?: IntFieldUpdateOperationsInput | number
    event_result_id?: NullableIntFieldUpdateOperationsInput | number | null
    member_user_ids?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type Team_event_registrationUncheckedUpdateManyWithoutEventInput = {
    id?: IntFieldUpdateOperationsInput | number
    temple_id?: IntFieldUpdateOperationsInput | number
    event_result_id?: NullableIntFieldUpdateOperationsInput | number | null
    member_user_ids?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type event_scheduleUpdateWithoutEventInput = {
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type event_scheduleUncheckedUpdateWithoutEventInput = {
    id?: IntFieldUpdateOperationsInput | number
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type event_scheduleUncheckedUpdateManyWithoutEventInput = {
    id?: IntFieldUpdateOperationsInput | number
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type Ind_event_registrationCreateManyEvent_resultInput = {
    id?: number
    event_id: number
    user_id: number
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
  }

  export type Team_event_registrationCreateManyEvent_resultInput = {
    id?: number
    temple_id: number
    member_user_ids?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    event_id: number
    status?: $Enums.RegistrationStatus
  }

  export type Ind_event_registrationUpdateWithoutEvent_resultInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
    event?: Mst_eventUpdateOneRequiredWithoutRegistrationsNestedInput
    user?: ProfileUpdateOneRequiredWithoutRegistrationsNestedInput
  }

  export type Ind_event_registrationUncheckedUpdateWithoutEvent_resultInput = {
    id?: IntFieldUpdateOperationsInput | number
    event_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type Ind_event_registrationUncheckedUpdateManyWithoutEvent_resultInput = {
    id?: IntFieldUpdateOperationsInput | number
    event_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type Team_event_registrationUpdateWithoutEvent_resultInput = {
    member_user_ids?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
    temple?: Mst_templeUpdateOneRequiredWithoutTeam_registrationsNestedInput
    event?: Mst_eventUpdateOneRequiredWithoutTeam_registrationsNestedInput
  }

  export type Team_event_registrationUncheckedUpdateWithoutEvent_resultInput = {
    id?: IntFieldUpdateOperationsInput | number
    temple_id?: IntFieldUpdateOperationsInput | number
    member_user_ids?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    event_id?: IntFieldUpdateOperationsInput | number
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type Team_event_registrationUncheckedUpdateManyWithoutEvent_resultInput = {
    id?: IntFieldUpdateOperationsInput | number
    temple_id?: IntFieldUpdateOperationsInput | number
    member_user_ids?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    event_id?: IntFieldUpdateOperationsInput | number
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type Mst_eventCreateManyEvent_typeInput = {
    id?: number
    name: string
    age_category_id: number
    gender: $Enums.Gender
    is_deleted?: boolean
    is_closed?: boolean
  }

  export type Mst_event_resultCreateManyEvent_typeInput = {
    id?: number
    rank: $Enums.Rank
    points: number
  }

  export type Mst_eventUpdateWithoutEvent_typeInput = {
    name?: StringFieldUpdateOperationsInput | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
    age_category?: Mst_age_categoryUpdateOneRequiredWithoutEventsNestedInput
    registrations?: Ind_event_registrationUpdateManyWithoutEventNestedInput
    team_registrations?: Team_event_registrationUpdateManyWithoutEventNestedInput
    schedules?: event_scheduleUpdateManyWithoutEventNestedInput
  }

  export type Mst_eventUncheckedUpdateWithoutEvent_typeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    age_category_id?: IntFieldUpdateOperationsInput | number
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
    registrations?: Ind_event_registrationUncheckedUpdateManyWithoutEventNestedInput
    team_registrations?: Team_event_registrationUncheckedUpdateManyWithoutEventNestedInput
    schedules?: event_scheduleUncheckedUpdateManyWithoutEventNestedInput
  }

  export type Mst_eventUncheckedUpdateManyWithoutEvent_typeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    age_category_id?: IntFieldUpdateOperationsInput | number
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_closed?: BoolFieldUpdateOperationsInput | boolean
  }

  export type Mst_event_resultUpdateWithoutEvent_typeInput = {
    rank?: EnumRankFieldUpdateOperationsInput | $Enums.Rank
    points?: IntFieldUpdateOperationsInput | number
    ind_event_registrations?: Ind_event_registrationUpdateManyWithoutEvent_resultNestedInput
    team_event_registrations?: Team_event_registrationUpdateManyWithoutEvent_resultNestedInput
  }

  export type Mst_event_resultUncheckedUpdateWithoutEvent_typeInput = {
    id?: IntFieldUpdateOperationsInput | number
    rank?: EnumRankFieldUpdateOperationsInput | $Enums.Rank
    points?: IntFieldUpdateOperationsInput | number
    ind_event_registrations?: Ind_event_registrationUncheckedUpdateManyWithoutEvent_resultNestedInput
    team_event_registrations?: Team_event_registrationUncheckedUpdateManyWithoutEvent_resultNestedInput
  }

  export type Mst_event_resultUncheckedUpdateManyWithoutEvent_typeInput = {
    id?: IntFieldUpdateOperationsInput | number
    rank?: EnumRankFieldUpdateOperationsInput | $Enums.Rank
    points?: IntFieldUpdateOperationsInput | number
  }

  export type ProfileCreateManyRoleInput = {
    id?: number
    user_id?: number | null
    first_name: string
    last_name?: string | null
    email?: string | null
    phone?: string | null
    aadhar_number?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    is_verified?: boolean
    temple_id?: number | null
    dob: Date | string
    gender: $Enums.Gender
  }

  export type User_roleCreateManyRoleInput = {
    id?: number
    user_id: number
  }

  export type ProfileUpdateWithoutRoleInput = {
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    dob?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    user?: UserUpdateOneWithoutProfileNestedInput
    temple?: Mst_templeUpdateOneWithoutProfilesNestedInput
    registrations?: Ind_event_registrationUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    temple_id?: NullableIntFieldUpdateOperationsInput | number | null
    dob?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    registrations?: Ind_event_registrationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    temple_id?: NullableIntFieldUpdateOperationsInput | number | null
    dob?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
  }

  export type User_roleUpdateWithoutRoleInput = {
    user?: UserUpdateOneRequiredWithoutUser_rolesNestedInput
  }

  export type User_roleUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type User_roleUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type ChampionCreateManyTempleInput = {
    id?: number
    year: number
    host_temple_id: number
    created_at?: Date | string
    modified_at?: Date | string
  }

  export type ChampionCreateManyHost_templeInput = {
    id?: number
    temple_id: number
    year: number
    created_at?: Date | string
    modified_at?: Date | string
  }

  export type ProfileCreateManyTempleInput = {
    id?: number
    user_id?: number | null
    first_name: string
    last_name?: string | null
    email?: string | null
    phone?: string | null
    aadhar_number?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    is_verified?: boolean
    dob: Date | string
    gender: $Enums.Gender
    role_id?: number
  }

  export type Team_event_registrationCreateManyTempleInput = {
    id?: number
    event_result_id?: number | null
    member_user_ids?: string | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    event_id: number
    status?: $Enums.RegistrationStatus
  }

  export type ChampionUpdateWithoutTempleInput = {
    year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    host_temple?: Mst_templeUpdateOneRequiredWithoutHost_championsNestedInput
  }

  export type ChampionUncheckedUpdateWithoutTempleInput = {
    id?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    host_temple_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChampionUncheckedUpdateManyWithoutTempleInput = {
    id?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    host_temple_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChampionUpdateWithoutHost_templeInput = {
    year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    temple?: Mst_templeUpdateOneRequiredWithoutChampionsNestedInput
  }

  export type ChampionUncheckedUpdateWithoutHost_templeInput = {
    id?: IntFieldUpdateOperationsInput | number
    temple_id?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChampionUncheckedUpdateManyWithoutHost_templeInput = {
    id?: IntFieldUpdateOperationsInput | number
    temple_id?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfileUpdateWithoutTempleInput = {
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    dob?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    user?: UserUpdateOneWithoutProfileNestedInput
    role?: Mst_roleUpdateOneRequiredWithoutProfilesNestedInput
    registrations?: Ind_event_registrationUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateWithoutTempleInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    dob?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    role_id?: IntFieldUpdateOperationsInput | number
    registrations?: Ind_event_registrationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateManyWithoutTempleInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    aadhar_number?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    dob?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGenderFieldUpdateOperationsInput | $Enums.Gender
    role_id?: IntFieldUpdateOperationsInput | number
  }

  export type Team_event_registrationUpdateWithoutTempleInput = {
    member_user_ids?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
    event_result?: Mst_event_resultUpdateOneWithoutTeam_event_registrationsNestedInput
    event?: Mst_eventUpdateOneRequiredWithoutTeam_registrationsNestedInput
  }

  export type Team_event_registrationUncheckedUpdateWithoutTempleInput = {
    id?: IntFieldUpdateOperationsInput | number
    event_result_id?: NullableIntFieldUpdateOperationsInput | number | null
    member_user_ids?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    event_id?: IntFieldUpdateOperationsInput | number
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type Team_event_registrationUncheckedUpdateManyWithoutTempleInput = {
    id?: IntFieldUpdateOperationsInput | number
    event_result_id?: NullableIntFieldUpdateOperationsInput | number | null
    member_user_ids?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    event_id?: IntFieldUpdateOperationsInput | number
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type Ind_event_registrationCreateManyUserInput = {
    id?: number
    event_id: number
    event_result_id?: number | null
    created_at?: Date | string
    modified_at?: Date | string
    is_deleted?: boolean
    status?: $Enums.RegistrationStatus
  }

  export type Ind_event_registrationUpdateWithoutUserInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
    event?: Mst_eventUpdateOneRequiredWithoutRegistrationsNestedInput
    event_result?: Mst_event_resultUpdateOneWithoutInd_event_registrationsNestedInput
  }

  export type Ind_event_registrationUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    event_id?: IntFieldUpdateOperationsInput | number
    event_result_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type Ind_event_registrationUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    event_id?: IntFieldUpdateOperationsInput | number
    event_result_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumRegistrationStatusFieldUpdateOperationsInput | $Enums.RegistrationStatus
  }

  export type User_roleCreateManyUserInput = {
    id?: number
    role_id: number
  }

  export type User_roleUpdateWithoutUserInput = {
    role?: Mst_roleUpdateOneRequiredWithoutUser_rolesNestedInput
  }

  export type User_roleUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
  }

  export type User_roleUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}